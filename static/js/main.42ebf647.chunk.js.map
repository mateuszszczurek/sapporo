{"version":3,"sources":["helpers/history.js","components/LoadTourney.jsx","components/SelectionPage.jsx","components/Logo.jsx","hoc/SingleColumnLayout.jsx","components/NewTourney.jsx","components/Group.jsx","components/Groups.jsx","components/TeamDropdown.jsx","components/Set.jsx","components/AddMatch.jsx","helpers/matches.js","components/MatchesDetails.jsx","components/GroupSummaryTable.jsx","components/TourneyDetails.jsx","components/TourneyState.jsx","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","FieldGroup","_ref","id","label","props","Object","objectWithoutProperties","react","Form","Group","controlId","Label","FormControl","LoadTourney","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fileChange","bind","assertThisInitialized","onLoadTourney","state","fileName","e","setState","target","value","file","files","preventDefault","reader","FileReader","loadTourney","onload","event","result","readAsText","className","onSubmit","type","onChange","Button","React","SelectionPage","ButtonGroup","lib","to","variant","pageHeader","paddingBottom","margin","borderBottom","Logo","style","SingleColumnLayout","inputs","componentSpan","arguments","length","undefined","componentOffset","Content","_React$Component","Component","apply","inherits","createClass","key","react_default","a","createElement","Container","Row","Col","md","span","offset","NewToruney","context","handleChange","handleTourneyCreation","_this2","trim","createNewTourney","Control","placeholder","addTeam","newTeamNameChange","teamAdded","newTeamOnEnter","newTeamName","teamNameWarning","teams","includes","groupLetter","onKeyPress","onClick","fa","_this$props","FormGroup","map","name","readOnly","marginBottom","teamItem","groupItems","defaultProps","groups","Groups","approveGroups","groupAdded","tourneyName","amountOfGroups","group","sm","components_Group","fourGroups","addGroup","block","TeamDropdown","teamSelected","onTeamSelected","allTeams","Dropdown","drop","onSelect","Toggle","Menu","teamName","Item","eventKey","team","MissingPoints","Feedback","Set","onSetChange","isDraw","firstTeamResult","secondTeamResult","setNumber","as","zeroOrNumberOrEmpty","allowEmptyOrNumber","creationAttempted","callback","test","parseInt","AddMatch","teamsSelection","sets","firstTeamSelected","secondTeamSelected","teamSelectionFor","sameItemSelected","onMatchAdded","onSetChanged","selectionId","set","assign","objectSpread","defineProperty","newSets","_this3","alert","setsValidation","keys","setResults","firstResult","secondResult","validationResults","firstResultsMissing","hasValidationResults","secondResultMissing","validateSet","filter","it","validation","firstTeam","selectedTeam","secondTeam","selection","find","_this4","findIndex","newSelection","newSelections","push","index","_this5","components_TeamDropdown","Array","from","val","components_Set","matchSummary","match","winningSetsFirstTeam","winningSetsSecondTeam","firstTeamTotalPoints","reduce","b","secondTeamTotalPoints","firstTeamSetsWon","secondTeamSetsWon","draw","winner","looser","firstTeamName","secondTeamName","firstTeamSetsLost","secondTeamSetsLost","safeRatio","divisor","dividend","groupSummary","matches","matchesPlayed","wins","looses","draws","points","summary","eachMatchSummary","sumOfSets","sum","setsWon","pointsWon","pointsLost","amountOfSetsWon","setsLost","setsRatio","pointsRatio","setsSummary","console","log","matchPoints","matchesWon","matchesLost","matchesDraw","MatchesDetails","removeMatch","ResultRow","join","setDetails","color","gridOptions","suppressDragLeaveHidesColumns","suppressMovableColumns","suppressLoadingOverlay","suppressNoRowsOverlay","icons","sortAscending","sortDescending","sortUnSort","defaultColumnDef","resizable","columnDefs","headerName","field","width","cellClass","autoHeight","unSortIcon","sortable","groupId","marryChildren","children","suppressMovable","valueFormatter","twoDigits","lockPosition","parseFloat","toFixed","GroupSummaryTable","onGridReady","params","api","setSortModel","colId","sort","sizeColumnsToFit","overflow","main","rowData","TourneyDetails","accordion","activeKey","rc_collapse_es","header","components_GroupSummaryTable","components_MatchesDetails","matchId","components_AddMatch","TourneyState","saveTourneyState","groupChosen","Navbar","bg","Nav","GroupItems","activeGroup","inline","components_TourneyDetails","Link","active","App","pickTourneyName","loadTourneyState","redirectToGroups","proceedToState","currentlyDisplayedGroup","history","JSON","parse","blob","Blob","stringify","concat","saveAs","newGroup","newGroups","slice","groupToReplace","groupIndex","newMatches","uuidv4","toConsumableArray","lastGroup","pop","newGroupLetter","String","fromCharCode","charCodeAt","groupName","byName","newTeams","groupWithAddedTeam","toReplace","toruneyName","Router","Switch","Route","path","render","LayoutNewTourney","createTourneyAndRedirect","LayoutLoadTourney","components_Groups","LayoutTourneyState","component","Redirect","NewTourney","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42ebf647.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Form, FormControl} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\n\r\nclass LoadTourney extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.fileChange = this.fileChange.bind(this);\r\n        this.onLoadTourney = this.onLoadTourney.bind(this);\r\n\r\n        this.state = {fileName: ''}\r\n    }\r\n\r\n    fileChange(e) {\r\n        this.setState({fileName: e.target.value, file: e.target.files[0]});\r\n    }\r\n\r\n    onLoadTourney(e) {\r\n        e.preventDefault();\r\n\r\n        if(this.state.file === '') {\r\n            return;\r\n        }\r\n\r\n        if (this.state.file) {\r\n            const file = this.state.file;\r\n            const reader = new FileReader();\r\n\r\n            const loadTourney = this.props.loadTourney;\r\n\r\n            reader.onload = function (event) {\r\n                loadTourney(event.target.result);\r\n            };\r\n\r\n            reader.readAsText(file);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Form className={'border border-primary p-3'}\r\n                     onSubmit={this.onLoadTourney}>\r\n            <h2 className='border-bottom mb-3'>Wczytaj istniejący turniej</h2>\r\n            <Form.Group controlId=\"formBasicText\">\r\n                <FieldGroup\r\n                    type=\"file\"\r\n                    label=\"Wybierz plik z zapisanym turniejem\"\r\n                    value={this.state.fileName}\r\n                    onChange={this.fileChange}\r\n                />\r\n\r\n            </Form.Group>\r\n            <Button type=\"submit\">Wczytaj</Button>\r\n        </Form>\r\n    }\r\n}\r\n\r\nfunction FieldGroup({id, label, ...props}) {\r\n    return (\r\n        <Form.Group controlId={id}>\r\n            <Form.Label>{label}</Form.Label>\r\n            <FormControl {...props} />\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default LoadTourney;\r\n\r\nLoadTourney.propTypes = {\r\n    loadTourney: PropTypes.func\r\n};","import {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport * as React from \"react\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n\r\n\r\nexport default () => <ButtonGroup className='d-flex'>\r\n    <LinkContainer to='/tourney/new'>\r\n        <Button variant=\"primary\">\r\n            Swtórz nowy turniej\r\n        </Button>\r\n    </LinkContainer>\r\n    <LinkContainer to='/tourney/load'>\r\n        <Button variant=\"primary\">\r\n            Wczytaj turniej\r\n        </Button>\r\n    </LinkContainer>\r\n</ButtonGroup>","import * as React from \"react\";\r\n\r\nconst pageHeader = {\r\n    paddingBottom: '9px',\r\n    'margin': '40px 0 20px',\r\n    borderBottom: '1px solid #eee'\r\n}\r\n\r\nexport default () => <div style={pageHeader}><h1>Volleyball Tournament App+</h1></div>","import React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Logo from \"../components/Logo\";\r\n\r\nfunction SingleColumnLayout(inputs, componentSpan = 8, componentOffset = 2) {\r\n\r\n    const {Content} = inputs;\r\n\r\n    class Component extends React.Component {\r\n\r\n        render() {\r\n            return <Container>\r\n                <Row>\r\n                    <Col md={{span: 8, offset: 2}}>\r\n                        <Logo/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{span: componentSpan, offset: componentOffset}}>\r\n                        <Content {...this.props}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        }\r\n    }\r\n\r\n    return Component;\r\n\r\n}\r\n\r\nexport default SingleColumnLayout;","import PropTypes from 'prop-types';\r\n\r\nimport * as React from \"react\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\nclass NewToruney extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTourneyCreation = this.handleTourneyCreation.bind(this);\r\n\r\n        this.state = {\r\n            value: ''\r\n        };\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    handleTourneyCreation() {\r\n        return e => {\r\n            e.preventDefault();\r\n            if (!this.state.value || !this.state.value.trim()) {\r\n                //TODO make it common util for checking empty string and preventing form action (same as for group addition)\r\n            } else {\r\n                this.props.createNewTourney(this.state.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Form className={'border border-primary p-3'}\r\n                     onSubmit={this.handleTourneyCreation()}>\r\n            <h2>Stwórz nowy turniej</h2>\r\n            <Form.Group controlId='formBasicText'>\r\n                <Form.Label>Podaj nazwę turniej</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={this.state.value}\r\n                    placeholder=\"Małopolski turniej siatkówki amatorskiej \"\r\n                    onChange={this.handleChange}\r\n                />\r\n            </Form.Group>\r\n            <div>\r\n                <Button type=\"submit\">Stwórz</Button>\r\n            </div>\r\n        </Form>\r\n    }\r\n}\r\n\r\nNewToruney.propTypes = {\r\n    createNewTourney: PropTypes.func\r\n};\r\n\r\nexport default NewToruney;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Button, Form, FormControl, FormGroup} from \"react-bootstrap\";\r\n\r\nimport {FaPlus} from \"react-icons/fa/index\";\r\n\r\nclass Group extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addTeam = this.addTeam.bind(this);\r\n        this.newTeamNameChange = this.newTeamNameChange.bind(this);\r\n        this.teamAdded = this.teamAdded.bind(this);\r\n        this.newTeamOnEnter = this.newTeamOnEnter.bind(this);\r\n\r\n        this.state = {newTeamName: '', teamNameWarning: ''}\r\n    }\r\n\r\n    newTeamNameChange(e) {\r\n        this.setState({newTeamName: e.target.value});\r\n    }\r\n\r\n    teamAdded() {\r\n        const newTeamName = this.state.newTeamName;\r\n        if(!newTeamName || newTeamName.trim().length === 0) {\r\n            // this.setState({teamNameWarning: 'Nazwa drużyny nie może być pusta!'})\r\n            // TODO add sensible message\r\n            // TODO only unique team names!\r\n        } else if (this.props.teams.includes(newTeamName)){\r\n            // this.setState({teamNameWarning: 'Istnieje już drużyna o takiej nazwie!'})\r\n        } else {\r\n            this.props.teamAdded(this.props.groupLetter, this.state.newTeamName);\r\n            this.setState({newTeamName: ''})\r\n        }\r\n    }\r\n\r\n    newTeamOnEnter(e) {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.teamAdded()\r\n        }\r\n    }\r\n\r\n    addTeam() {\r\n        return <div>\r\n            <FormControl value={this.state.newTeamName}\r\n                         className='mb-2'\r\n                         key='newItem'\r\n                         onChange={this.newTeamNameChange}\r\n                         onKeyPress={this.newTeamOnEnter}\r\n            />\r\n            <Button onClick={this.teamAdded} >\r\n                <FaPlus  />\r\n                <span>Dodaj drużynę</span>\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n    render() {\r\n        const {groupLetter, teams, teamAdded} = this.props;\r\n\r\n        return <div>\r\n            <h2>{groupLetter}</h2>\r\n            <Form>\r\n                <FormGroup>\r\n                    {groupItems(teams, groupLetter)}\r\n                    {teams && teams.length < 8 && this.addTeam(groupLetter, teamAdded)}\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nfunction groupItems(teams) {\r\n    return teams.map(name => teamItem(name));\r\n}\r\n\r\nfunction teamItem(name) {\r\n    return <FormControl readOnly style={{marginBottom: '10px'}} key={name} value={name}/>\r\n\r\n}\r\n\r\nGroup.propTypes = {\r\n    groupLetter: PropTypes.string,\r\n    teams: PropTypes.array,\r\n    teamAdded: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    groupLetter: 'A',\r\n    groups: [],\r\n    teamAdded: () => null\r\n};\r\n\r\nexport default Group;","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Logo from \"./Logo\";\r\nimport Group from \"./Group\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport {FaPlus} from \"react-icons/fa/index\";\r\n\r\n// TODO extract this css (is copied from other file)\r\n// TODO bigger space between plus and text\r\n// TODO try to better align 'dodaj grupę' button\r\n// TODO check that there is at least one group with at least two teams\r\n\r\nfunction fourGroups(groups, teamAdded) {\r\n    return groups.map(group =>\r\n        <Col key={group.groupLetter} sm={3}>\r\n            <Group\r\n                groupLetter={group.groupLetter}\r\n                teams={group.teams}\r\n                teamAdded={teamAdded}/>\r\n        </Col>);\r\n}\r\n\r\nclass Groups extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.approveGroups = this.approveGroups.bind(this);\r\n    }\r\n\r\n    approveGroups() {\r\n        this.props.approveGroups();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {groups, teamAdded, tourneyName} = this.props;\r\n\r\n        const amountOfGroups = groups.length;\r\n        return <Container>\r\n            <Row>\r\n                <Col md={{span: 8, offset: 2}}>\r\n                    <Logo/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={{span: 8}}>\r\n                    <h3 className='pb-3'>Turniej \"{tourneyName}\"</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {fourGroups(groups, teamAdded)}\r\n                {(amountOfGroups < 8) && addGroup(this.props.addGroup)}\r\n            </Row>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <Button block onClick={this.approveGroups}>Zatwierdź grupy</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    }\r\n\r\n}\r\n\r\nfunction addGroup(groupAdded) {\r\n    return <Col sm={3}>\r\n        <Button className='mb-3' onClick={groupAdded}>\r\n            <FaPlus/>\r\n            <span>Dodaj grupę</span>\r\n        </Button>\r\n    </Col>\r\n\r\n}\r\n\r\nGroups.propTypes = {\r\n    groups: PropTypes.array,\r\n    addGroup: PropTypes.func,\r\n    tourneyName: PropTypes.string,\r\n    approveGroups: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    tourneyName: 'Turniej',\r\n    groups: [],\r\n    addGroup: () => null,\r\n    approveGroups: () => null,\r\n};\r\n\r\nexport default Groups;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport Dropdown from \"react-bootstrap/es/Dropdown\";\r\n\r\nclass TeamDropdown extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {teamSelected, onTeamSelected, allTeams} = this.props;\r\n\r\n        return <Dropdown\r\n            drop={'down'}\r\n            onSelect={onTeamSelected}>\r\n            <Dropdown.Toggle\r\n                className='w-100'>\r\n                {teamSelected ? teamSelected : 'Wybierz drużynę'}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu\r\n                className='w-100'>\r\n                {allTeams.map(teamName => team(teamName))}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    }\r\n\r\n}\r\n\r\nTeamDropdown.propTypes = {\r\n    teamSelected : PropTypes.string,\r\n    onTeamSelected : PropTypes.func,\r\n    allTeams : PropTypes.array\r\n};\r\n\r\nTeamDropdown.defaultProps = {\r\n    teamSelected : null,\r\n    onTeamSelected : () => {},\r\n    allTeams: []\r\n}\r\n\r\nfunction team(teamName) {\r\n    return <Dropdown.Item key={teamName} eventKey={teamName}>{teamName}</Dropdown.Item>\r\n}\r\n\r\nexport default TeamDropdown;","import PropTypes from 'prop-types';\r\n\r\nimport {Col} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\nimport React from \"react\";\r\n\r\nfunction MissingPoints() {\r\n    return <Form.Control.Feedback type=\"invalid\">\r\n        Wprowadź liczbę punktów\r\n    </Form.Control.Feedback>;\r\n}\r\n\r\nfunction CannotHaveDraw() {\r\n    return <Form.Control.Feedback type=\"invalid\">\r\n        Remis niedozwolony\r\n    </Form.Control.Feedback>;\r\n}\r\n\r\nclass Set extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onSetChange = this.onSetChange.bind(this);\r\n    }\r\n\r\n    onSetChange() {\r\n        this.setState(\r\n            {\r\n                isDraw: this.props.firstTeamResult === this.props.secondTeamResult\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const {setNumber, firstTeamResult, secondTeamResult, onSetChange} = this.props;\r\n\r\n        return <div>\r\n            <Form>\r\n                <Form.Row key={setNumber} className='mb-1'>\r\n                    <Form.Group as={Col} md={1}>\r\n                        <h4 key={setNumber}>{setNumber} set</h4>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md={{span: 2, offset: 1}}>\r\n                        <Form.Control as='input'\r\n                                      type='text'\r\n                                      value={zeroOrNumberOrEmpty(firstTeamResult)}\r\n                                      onChange={e => allowEmptyOrNumber(e, onSetChange(setNumber, 'first-team'))}\r\n                        />\r\n                        {this.props.creationAttempted && !firstTeamResult && <MissingPoints/>}\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}\r\n                                md={{span: 2, offset: 1}}>\r\n                        <h5 className='text-center'>:</h5>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md={{span: 2, offset: 1}}>\r\n                        <Form.Control as='input' type='text' value={zeroOrNumberOrEmpty(secondTeamResult)}\r\n                                      onChange={e => allowEmptyOrNumber(e, onSetChange(setNumber, 'second-team'))}/>\r\n                        {this.props.creationAttempted && !secondTeamResult && <MissingPoints/>}\r\n                    </Form.Group>\r\n                </Form.Row>\r\n            </Form>\r\n        </div>\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction allowEmptyOrNumber(e, callback) {\r\n    const number = /^[0-9\\b]+$/;\r\n\r\n    const value = e.target.value;\r\n    e.target.value === '' ? callback(null) : number.test(value) && callback(parseInt(value));\r\n}\r\n\r\nfunction zeroOrNumberOrEmpty(firstTeamResult) {\r\n    return firstTeamResult === 0 ? firstTeamResult : firstTeamResult || '';\r\n}\r\n\r\n\r\nSet.propTypes = {\r\n\r\n    creationAttempted : PropTypes.bool,\r\n    firstTeam: PropTypes.string,\r\n    secondTeam: PropTypes.string,\r\n    setNumber: PropTypes.number,\r\n    firstTeamResult: PropTypes.string,\r\n    secondTeamResult: PropTypes.string,\r\n    onSetChange: PropTypes.func\r\n\r\n};\r\n\r\nSet.defaultProps = {\r\n\r\n    firstTeamResult : '',\r\n    secondTeamResult : ''\r\n\r\n};\r\n\r\nexport default Set;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport {Col} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport TeamDropdown from \"./TeamDropdown\";\r\nimport Set from \"./Set\";\r\n\r\nclass AddMatch extends React.Component {\r\n\r\n    // TODO - add version number\r\n    // TODO - empty groups are not displayed and considered\r\n    // TODO - remove duplication for dropdowns\r\n    // TODO - shouldn't be able to select same team\r\n    // TODO refactor and numbers only\r\n    // TODO handle switching on 'same-selection'\r\n    // TODO validate that inputs are numbers!\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {teamsSelection: [], sets: {}};\r\n\r\n        this.firstTeamSelected = this.firstTeamSelected.bind(this);\r\n        this.secondTeamSelected = this.secondTeamSelected.bind(this);\r\n        this.onTeamSelected = this.onTeamSelected.bind(this);\r\n        this.teamSelectionFor = this.teamSelectionFor.bind(this);\r\n        this.sameItemSelected = this.sameItemSelected.bind(this);\r\n        this.onMatchAdded = this.onMatchAdded.bind(this);\r\n        this.onSetChanged = this.onSetChanged.bind(this);\r\n    }\r\n\r\n    onSetChanged(setNumber, selectionId) {\r\n        return value => {\r\n            const set = Object.assign({}, {\r\n                ...this.state.sets[setNumber],\r\n                [selectionId]: value\r\n            });\r\n            const newSets = Object.assign({}, {...this.state.sets});\r\n            newSets[setNumber] = set;\r\n            this.setState({sets: newSets});\r\n        }\r\n    }\r\n\r\n    onMatchAdded() {\r\n        if (this.state.teamsSelection.length < 2) {\r\n            alert('Proszę wybrać obie drużyny');\r\n            // consider disabling button if two teams are not chosen\r\n            // todo - check if at least on set populated\r\n            // todo - check if we don't have unfilled sets\r\n            // todo - check if we have draws\r\n            return;\r\n        }\r\n\r\n        const setsValidation = Object.keys(this.state.sets).map(key => validateSet(key, this.state.sets[key]));\r\n\r\n        if (setsValidation.filter(it => it.validation) > 0) {\r\n            this.setState({validationResults: setsValidation, creationAttempted: true});\r\n            return;\r\n        }\r\n\r\n        const firstTeam = this.state.teamsSelection[0].selectedTeam;\r\n        const secondTeam = this.state.teamsSelection[1].selectedTeam;\r\n\r\n        // TODO shouldn't be able to add match without any sets!\r\n        // TODO flush state from set - make selection - unselected\r\n        // TODO Make it possible to edit match or forbid to choose already chosen match\r\n        this.props.onMatchAdded(firstTeam, secondTeam, this.state.sets);\r\n        this.setState({sets: [], teamsSelection: [], creationAttempted: false})\r\n    }\r\n\r\n    teamSelectionFor(selectionId) {\r\n        const selection = this.state.teamsSelection.find(it => it.selectionId === selectionId);\r\n        if (!selection) {\r\n            return \"\";\r\n        } else {\r\n            return selection.selectedTeam;\r\n        }\r\n    }\r\n\r\n    onTeamSelected(selectionId) {\r\n        return selectedTeam => {\r\n            if (this.state.teamsSelection.findIndex(it => it.selectedTeam === selectedTeam) !== -1) {\r\n                return;\r\n            }\r\n            const newSelection = {selectionId: selectionId, selectedTeam: selectedTeam};\r\n\r\n            const newSelections = this.state.teamsSelection.filter(it => it.selectionId !== selectionId);\r\n            newSelections.push(newSelection);\r\n\r\n            this.setState({teamsSelection: newSelections});\r\n        }\r\n    }\r\n\r\n    sameItemSelected(index, selectedTeam) {\r\n        return this.state.teamsSelection[index].selectedTeam === selectedTeam;\r\n    }\r\n\r\n    firstTeamSelected(eventKey) {\r\n        this.setState({firstTeamSelected: eventKey});\r\n    }\r\n\r\n    secondTeamSelected(eventKey) {\r\n        this.setState({secondTeamSelected: eventKey});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {group} = this.props;\r\n\r\n        return <div>\r\n            <Row className={'mb-2'}>\r\n                <Col md={{span: 4, offset: 1}}>\r\n                    <TeamDropdown\r\n                        allTeams={group.teams}\r\n                        teamSelected={this.teamSelectionFor('first-team')}\r\n                        onTeamSelected={this.onTeamSelected('first-team')}\r\n                    />\r\n                </Col>\r\n                <Col md={2}>\r\n                    <h3 className='text-center'>vs</h3>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <TeamDropdown\r\n                        allTeams={group.teams}\r\n                        teamSelected={this.teamSelectionFor('second-team')}\r\n                        onTeamSelected={this.onTeamSelected('second-team')}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            {Array.from(new Array(5), (val, index) => index + 1).map(setNumber =>\r\n                <Set key={setNumber}\r\n                     setNumber={setNumber}\r\n                     firstTeam={'first-team'}\r\n                     secondTeam={'second-team'}\r\n                     creationAttempted={this.state.creationAttempted}\r\n                     firstTeamResult={this.state.sets[setNumber] ? this.state.sets[setNumber]['first-team'] : ''}\r\n                     secondTeamResult={this.state.sets[setNumber] ? this.state.sets[setNumber]['second-team'] : ''}\r\n                     onSetChange={this.onSetChanged}/>\r\n            )}\r\n            <Row className={'mt-3'}>\r\n                <Col>\r\n                    <Button\r\n                        onClick={this.onMatchAdded}\r\n                        className='float-right'\r\n                        type=\"submit\">Zatwierdź mecz\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nfunction validateSet(setNumber, setResults) {\r\n    const firstResult = setResults['first-team'];\r\n    const secondResult = setResults['second-team'];\r\n\r\n    const validationResults = {setNumber: setNumber};\r\n\r\n    if (firstResult === 0) {\r\n        validationResults.firstResultsMissing = true;\r\n        validationResults.hasValidationResults = true;\r\n    }\r\n\r\n    if (secondResult === 0) {\r\n        validationResults.secondResultMissing = true;\r\n        validationResults.hasValidationResults = true;\r\n    }\r\n\r\n    if (!firstResult && !secondResult) {\r\n        validationResults.hasValidationResults = false;\r\n        return validationResults;\r\n    }\r\n\r\n    if (firstResult === secondResult) {\r\n        validationResults.isDraw = true;\r\n        validationResults.hasValidationResults = true;\r\n    }\r\n\r\n    if (!firstResult) {\r\n        validationResults.firstResultsMissing = true;\r\n    }\r\n\r\n    if(!secondResult) {\r\n        validationResults.secondResultMissing = true;\r\n    }\r\n\r\n    return validationResults;\r\n\r\n}\r\n\r\nAddMatch.propTypes = {\r\n\r\n    group: PropTypes.object.isRequired\r\n\r\n};\r\n\r\nexport default AddMatch;","export function matchSummary(match) {\r\n\r\n    const sets = Object.keys(match.sets).map(key => match.sets[key]);\r\n\r\n    const winningSetsFirstTeam = sets.filter(set => set['first-team'] > set['second-team']);\r\n    const winningSetsSecondTeam = sets.filter(set => set['first-team'] < set['second-team']);\r\n\r\n    const firstTeamTotalPoints = sets.map(set => set['first-team']).reduce((a, b) => a + b, 0);\r\n    const secondTeamTotalPoints = sets.map(set => set['second-team']).reduce((a, b) => a + b, 0);\r\n\r\n    const firstTeamSetsWon = winningSetsFirstTeam.length;\r\n    const secondTeamSetsWon = winningSetsSecondTeam.length;\r\n\r\n    function matchResult() {\r\n        if (firstTeamSetsWon === secondTeamSetsWon) {\r\n            return {draw: true}\r\n        } else if (firstTeamSetsWon > secondTeamSetsWon) {\r\n            return {winner: match.firstTeam, looser: match.secondTeam};\r\n        } else {\r\n            return {winner: match.secondTeam, looser: match.firstTeam}\r\n        }\r\n    }\r\n\r\n    const result = matchResult();\r\n\r\n    return {\r\n        firstTeamTotalPoints: firstTeamTotalPoints,\r\n        secondTeamTotalPoints: secondTeamTotalPoints,\r\n        firstTeamName: match.firstTeam,\r\n        secondTeamName: match.secondTeam,\r\n        firstTeamSetsWon: firstTeamSetsWon,\r\n        secondTeamSetsWon: secondTeamSetsWon,\r\n        firstTeamSetsLost: secondTeamSetsWon,\r\n        secondTeamSetsLost: firstTeamSetsWon,\r\n        sets: sets,\r\n        ...result\r\n    }\r\n\r\n}\r\n\r\nfunction safeRatio(divisor, dividend) {\r\n    return divisor === 0 ? null : (dividend) / (divisor);\r\n}\r\n\r\nfunction setsSummary(team, matches) {\r\n\r\n    const eachMatchSummary = matches.map(match => matchSummary(match));\r\n    const sumOfSets = eachMatchSummary.map(it => it.sets.length).reduce((sum, value) => sum + value, 0);\r\n\r\n    const setsWon = eachMatchSummary.map(it => it.firstTeamName === team ? it.firstTeamSetsWon : it.secondTeamSetsWon);\r\n\r\n    const pointsWon = eachMatchSummary\r\n        .map(it => it.firstTeamName === team ? it.firstTeamTotalPoints : it.secondTeamTotalPoints)\r\n        .reduce((a, b) => a + b, 0);\r\n\r\n    const pointsLost = eachMatchSummary\r\n        .map(it => it.firstTeamName === team ? it.secondTeamTotalPoints : it.firstTeamTotalPoints)\r\n        .reduce((a, b) => a + b, 0);\r\n\r\n    const amountOfSetsWon = setsWon.reduce((a, b) => a + b, 0);\r\n\r\n    const setsLost = sumOfSets - amountOfSetsWon;\r\n\r\n    const setsRatio = safeRatio(setsLost, amountOfSetsWon);\r\n\r\n    return {\r\n        teamName: team,\r\n        setsWon: amountOfSetsWon,\r\n        setsLost: setsLost,\r\n        setsRatio: setsRatio,\r\n        pointsWon: pointsWon,\r\n        pointsLost: pointsLost,\r\n        pointsRatio: safeRatio(pointsLost, pointsWon)\r\n    }\r\n\r\n}\r\n\r\nexport function groupSummary(matches, teams) {\r\n\r\n    return teams.map(team => {\r\n\r\n        const matchesPlayed = matches.filter(match => match.firstTeam === team || match.secondTeam === team)\r\n            .map(match => matchSummary(match));\r\n\r\n        const wins = matchesPlayed.filter(match => match.winner === team).length;\r\n        const looses = matchesPlayed.filter(match => match.looser === team).length;\r\n        const draws = matchesPlayed.filter(match => match.draw === true).length;\r\n\r\n        const points = (wins * 2) + (draws * 1);\r\n\r\n        const summary = setsSummary(team, matchesPlayed);\r\n\r\n        console.log(draws);\r\n\r\n        return {\r\n            team: team,\r\n            matchPoints: points,\r\n            matchesPlayed: matchesPlayed.length,\r\n            matchesWon: wins,\r\n            matchesLost: looses,\r\n            matchesDraw: draws,\r\n            points: summary.points,\r\n            setsWon: summary.setsWon,\r\n            setsLost: summary.setsLost,\r\n            setsRatio: summary.setsRatio,\r\n            pointsWon: summary.pointsWon,\r\n            pointsLost: summary.pointsLost,\r\n            pointsRatio: summary.pointsRatio\r\n        }\r\n\r\n    });\r\n\r\n}","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\nimport {Row} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport {matchSummary} from \"../helpers/matches\";\r\nimport {FaWindowClose} from \"react-icons/fa/index\";\r\n\r\nimport '../css/icons.css'\r\n\r\n\r\nclass MatchesDetails extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {matches, removeMatch} = this.props;\r\n\r\n        return matches.map(match =>\r\n            <ResultRow\r\n                key={match.id}\r\n                firstTeam={match.firstTeam}\r\n                secondTeam={match.secondTeam}\r\n                match={match}\r\n                removeMatch={removeMatch}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction ResultRow({firstTeam, secondTeam, match, removeMatch}) {\r\n\r\n    const summary = matchSummary(match);\r\n\r\n    return <Row>\r\n        <Col md={4}>\r\n            <div className={'text-center'}>{firstTeam} vs {secondTeam}</div>\r\n        </Col>\r\n        <Col md={1}>\r\n            <div className={'text-center'}><b>{summary.firstTeamSetsWon} : {summary.secondTeamSetsWon}</b></div>\r\n        </Col>\r\n        <Col md={4}>\r\n            <div className={'text-center'}>{setDetails(summary.sets)}</div>\r\n        </Col>\r\n        <Col md={3}>\r\n            <div className={'pr-2'}>\r\n                <FaWindowClose className={'float-right'} style={{color: \"#b21f2d\"}} onClick={() => removeMatch(match.id)}/>\r\n            </div>\r\n        </Col>\r\n    </Row>\r\n\r\n}\r\n\r\nfunction setDetails(sets) {\r\n\r\n    if (!sets || sets.length === 0) {\r\n        return;\r\n    }\r\n\r\n    const setSummary = sets.map(set => set['first-team'] + ':' + set['second-team']).join(', ');\r\n    return '(' + setSummary + ')';\r\n}\r\n\r\nMatchesDetails.propTypes = {\r\n\r\n    matches: PropTypes.array,\r\n    removeMatch: PropTypes.func\r\n\r\n};\r\n\r\nMatchesDetails.defaultProps = {\r\n\r\n    matches: [],\r\n    removeMatch: () => {\r\n    }\r\n\r\n};\r\n\r\nexport default MatchesDetails;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\nimport {AgGridReact} from \"ag-grid-react\";\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport {groupSummary} from \"../helpers/matches\";\r\n\r\nimport '../css/agGridStyles.css';\r\n\r\nconst gridOptions = {\r\n    suppressDragLeaveHidesColumns: true,\r\n    suppressMovableColumns: true,\r\n    suppressLoadingOverlay: true,\r\n    suppressNoRowsOverlay: true,\r\n    icons : {\r\n        sortAscending : ' ',\r\n        sortDescending : ' ',\r\n        sortUnSort : ' '\r\n    },\r\n    defaultColumnDef : {\r\n        resizable: true,\r\n    },\r\n    columnDefs: [\r\n        {headerName: \"Drużyna\", field: \"team\", width: 500,\r\n            cellClass: 'cell-wrap-text',  autoHeight : true},\r\n        {headerName: \"Punkty\", field: \"matchPoints\", width: 250, unSortIcon: true, sortable : true},\r\n        {\r\n            groupId: 1,\r\n            headerName: \"Mecze\",\r\n            marryChildren: true,\r\n            children: [\r\n                {headerName: 'Rozegr.', field: \"matchesPlayed\"},\r\n                {headerName: 'Wygr.', field: \"matchesWon\"},\r\n                {headerName: 'Przegr.', field: \"matchesLost\"},\r\n                {headerName: 'Remis', field: \"matchesDraw\"}\r\n            ]\r\n        },\r\n        {\r\n            groupId: 2,\r\n            headerName: \"Sety\",\r\n            suppressMovable: true,\r\n            marryChildren: true,\r\n            children: [\r\n                {headerName: 'Wygr.', field: \"setsWon\"},\r\n                {headerName: 'Przegr.', field: \"setsLost\"},\r\n                {headerName: 'Stos.', field: \"setsRatio\", valueFormatter: twoDigits, sortable : true}\r\n            ]\r\n        },\r\n        {\r\n            groupId: 3,\r\n            headerName: \"Punkty\",\r\n            suppressMovable: true,\r\n            lockPosition: true,\r\n            children: [\r\n                {headerName: 'Wygr.', field: \"pointsWon\"},\r\n                {headerName: 'Przegr.', field: \"pointsLost\"},\r\n                {headerName: 'Stos.', field: \"pointsRatio\", valueFormatter: twoDigits, sortable : true}\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nfunction twoDigits(target) {\r\n    if (target.value !== 0 && !target.value) {\r\n        return '-';\r\n    }\r\n\r\n    return parseFloat(target.value).toFixed(2);\r\n}\r\n\r\nclass GroupSummaryTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onGridReady = this.onGridReady.bind(this);\r\n    }\r\n\r\n    onGridReady = (params) => {\r\n        const sortModel = [\r\n            {colId: 'points', sort: 'desc'},\r\n            {colId: 'setsRatio', sort: 'desc'},\r\n            {colId: 'pointsRatio', sort: 'desc'}\r\n        ];\r\n        params.api.setSortModel(sortModel);\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n\r\n    render() {\r\n\r\n        const {matches, teams} = this.props;\r\n\r\n        const summary = groupSummary(matches, teams);\r\n\r\n        return <div className=\"ag-theme-balham\">\r\n            <div style={{overflow: 'auto'}}>\r\n                <AgGridReact\r\n                    onGridReady={this.onGridReady}\r\n                             gridOptions={gridOptions}\r\n                             rowData={summary}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nGroupSummaryTable.propTypes = {\r\n\r\n    teams: PropTypes.array,\r\n    matches: PropTypes.array\r\n\r\n};\r\n\r\nexport default GroupSummaryTable;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport Collapse, {Panel} from 'rc-collapse';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport EditMatches from \"./AddMatch\";\r\nimport Matches from \"./MatchesDetails\";\r\nimport GroupSummaryTable from \"./GroupSummaryTable\";\r\n\r\n// TODO sortable by matches won, ratio,\r\n// TODO populate with data\r\n// TODO open and autosize to content\r\n// TODO extract table to another component\r\n// TODO no rows to show appears on table headers\r\n// TODO on group change -> make table full width!\r\n\r\nclass TourneyDetails extends React.Component {\r\n\r\n    state = {\r\n        accordion: true,\r\n        activeKey: ['0', '1', '2']\r\n    };\r\n\r\n    onChange = (activeKey) => {\r\n        this.setState({\r\n            activeKey,\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const {group} = this.props;\r\n\r\n        const activeKey = this.state.activeKey;\r\n\r\n        return <div>\r\n            <Collapse\r\n                accordion={false}\r\n                onChange={this.onChange}\r\n                activeKey={activeKey}\r\n            >\r\n                <Panel header='Tabela'>\r\n                    <GroupSummaryTable matches={group.matches}\r\n                                       teams={group.teams}\r\n                    />\r\n                </Panel>\r\n                <Panel header='Mecze'>\r\n                    <Matches matches={group.matches}\r\n                             removeMatch={(matchId) => this.props.removeMatch(group.groupLetter, matchId)}/>\r\n                </Panel>\r\n                <Panel header='Wprowadź mecz'>\r\n                    <div>\r\n                        <EditMatches\r\n                            group={this.props.group}\r\n                            onMatchAdded={(firstTeam, secondTeam, sets) => this.props.onMatchAdded(group.groupLetter, firstTeam, secondTeam, sets)}\r\n                        />\r\n                    </div>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    }\r\n}\r\n\r\nTourneyDetails.propTypes = {\r\n\r\n    group: PropTypes.object.isRequired,\r\n    onMatchAdded: PropTypes.func,\r\n    removeMatch : PropTypes.func\r\n\r\n};\r\n\r\nexport default TourneyDetails;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport TourneyDetails from \"./TourneyDetails\";\r\n\r\nclass TourneyState extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {saveTourneyState, groupChosen, tourneyName, group, groups} = this.props;\r\n\r\n        return <div>\r\n            <Row>\r\n                <Col md={{span: 8}}>\r\n                    <h3 className='pb-3'>Turniej \"{tourneyName}\"</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Navbar bg=\"primary\"\r\n                            variant=\"dark\"\r\n                            onSelect={groupChosen}\r\n                    >\r\n                        <Nav className=\"mr-auto\">\r\n                            <GroupItems activeGroup={group.groupLetter}\r\n                                        groups={groups}\r\n                            />\r\n                        </Nav>\r\n                        <Form inline>\r\n                            <Button\r\n                                onClick={saveTourneyState}\r\n                                variant=\"outline-light\">Zapisz turniej</Button>\r\n                        </Form>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12} className='mb-3'>\r\n                    <TourneyDetails\r\n                        group={group}\r\n                        onMatchAdded={this.props.onMatchAdded}\r\n                        removeMatch={this.props.removeMatch}/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction GroupItems({activeGroup, groups}) {\r\n    return groups.map(it =>\r\n        <Nav.Link eventKey={it.groupLetter}\r\n                  key={it.groupLetter}\r\n                  active={it.groupLetter === activeGroup}\r\n        >\r\n            Grupa {it.groupLetter}\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nTourneyState.propTypes = {\r\n    groups: PropTypes.array.isRequired,\r\n    group: PropTypes.object,\r\n    tourneyName: PropTypes.string,\r\n    groupChosen: PropTypes.func,\r\n    onMatchAdded: PropTypes.func,\r\n    saveTourneyState: PropTypes.func,\r\n    removeMatch : PropTypes.func\r\n};\r\n\r\nTourneyState.defaultProps = {\r\n    groups: [],\r\n    tourneyName: \"Nazwa turnieju\",\r\n    group: {},\r\n    groupChosen: () => {\r\n    },\r\n    removeMatch: () => {}\r\n};\r\n\r\nexport default TourneyState;","import React from 'react';\r\n\r\nimport './App.css'\r\n\r\nimport {Redirect, Route, Router, Switch} from 'react-router-dom'\r\nimport history from './helpers/history';\r\n\r\nimport LoadTourney from \"./components/LoadTourney\";\r\nimport SelectionPage from \"./components/SelectionPage\";\r\n\r\nimport SingleColumnLayout from \"./hoc/SingleColumnLayout\";\r\nimport NewTourney from \"./components/NewTourney\";\r\nimport Groups from \"./components/Groups\";\r\nimport TourneyState from \"./components/TourneyState\";\r\nimport {saveAs} from 'file-saver';\r\n\r\nimport './css/icons.css'\r\n\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addGroup = this.addGroup.bind(this);\r\n        this.pickTourneyName = this.pickTourneyName.bind(this);\r\n        this.addTeam = this.addTeam.bind(this);\r\n        this.approveGroups = this.approveGroups.bind(this);\r\n        this.groupChosen = this.groupChosen.bind(this);\r\n        this.onMatchAdded = this.onMatchAdded.bind(this);\r\n        this.saveTourneyState = this.saveTourneyState.bind(this);\r\n        this.loadTourneyState = this.loadTourneyState.bind(this);\r\n        this.redirectToGroups = this.redirectToGroups.bind(this);\r\n        this.proceedToState = this.proceedToState.bind(this);\r\n        this.removeMatch = this.removeMatch.bind(this);\r\n\r\n        this.state = {\r\n            groups: [\r\n                {groupLetter: \"A\", teams: [], matches: []}\r\n            ],\r\n            currentlyDisplayedGroup: \"A\"\r\n        };\r\n    }\r\n\r\n    loadTourneyState(history) {\r\n        return state => {\r\n            this.setState(JSON.parse(state));\r\n            this.proceedToState(history)\r\n        }\r\n    }\r\n\r\n    saveTourneyState() {\r\n        const blob = new Blob([JSON.stringify(this.state)], {type: \"text/plain;charset=utf-8\"});\r\n        const fileName = `${this.state.tourneyName ? this.state.tourneyName : 'tourney'}.txt`;\r\n        saveAs(blob, fileName)\r\n    }\r\n\r\n    removeMatch(groupLetter, matchId) {\r\n        const group = this.state.groups.find(group => group.groupLetter === groupLetter);\r\n\r\n        const matches = group.matches.filter(matches => matches.id !== matchId);\r\n\r\n        const newGroup = {...group, matches : matches};\r\n\r\n        const newGroups = this.state.groups.slice();\r\n\r\n        const groupToReplace = newGroups.findIndex(group => group.groupLetter === groupLetter);\r\n        newGroups[groupToReplace] = newGroup;\r\n\r\n        this.setState({groups : newGroups});\r\n    }\r\n\r\n    onMatchAdded(groupLetter, firstTeam, secondTeam, sets) {\r\n\r\n        const {groups} = this.state;\r\n\r\n        const groupIndex = groups.findIndex(group => group.groupLetter === groupLetter);\r\n        const group = groups[groupIndex];\r\n\r\n        if(!group.teams.includes(firstTeam) || !group.teams.includes(secondTeam)){\r\n            return;\r\n        }\r\n\r\n        const newMatches = group.matches.slice();\r\n        newMatches.push({firstTeam: firstTeam, secondTeam: secondTeam, sets: sets, id: uuidv4()});\r\n\r\n        const newGroups = [\r\n            ...groups.slice(0, groupIndex),\r\n            {...group, matches: newMatches},\r\n            ...groups.slice(groupIndex + 1,)\r\n        ];\r\n\r\n        this.setState({groups: newGroups});\r\n    }\r\n\r\n    groupChosen(groupLetter) {\r\n        this.setState({currentlyDisplayedGroup: groupLetter})\r\n    }\r\n\r\n    addGroup() {\r\n        let lastGroup = this.state.groups.map(it => it.groupLetter).slice().pop();\r\n        let newGroupLetter = String.fromCharCode(lastGroup.charCodeAt(0) + 1);\r\n        const groups = [...this.state.groups, {groupLetter: newGroupLetter, teams: [], matches: []}];\r\n        this.setState({groups: groups})\r\n    }\r\n\r\n    addTeam(groupName, teamName) {\r\n        const group = this.state.groups.find(byName(groupName));\r\n\r\n        const newTeams = group.teams.slice();\r\n        newTeams.push(teamName);\r\n        const groupWithAddedTeam = {...group, teams: newTeams};\r\n\r\n        const newGroups = this.state.groups.slice();\r\n\r\n        const toReplace = newGroups.findIndex(byName(groupName));\r\n\r\n        newGroups[toReplace] = groupWithAddedTeam;\r\n\r\n        this.setState({groups: newGroups})\r\n    }\r\n\r\n    approveGroups(history) {\r\n        return () => this.proceedToState(history);\r\n\r\n    }\r\n\r\n    proceedToState(history) {\r\n        history.push('/tourney/state')\r\n    }\r\n\r\n    pickTourneyName(toruneyName) {\r\n        this.setState({tourneyName: toruneyName});\r\n    }\r\n\r\n    createTourneyAndRedirect(history) {\r\n        return (tourneyName) => {\r\n            this.pickTourneyName(tourneyName);\r\n            this.redirectToGroups(history);\r\n        }\r\n    }\r\n\r\n    redirectToGroups(history) {\r\n        history.push('/tourney/groups')\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Router history={history}>\r\n            <div>\r\n                <Switch>\r\n                    <Route path='/tourney/new'\r\n                           render={props => <LayoutNewTourney\r\n                               createNewTourney={this.createTourneyAndRedirect(history)}/>}\r\n                    />\r\n                    <Route path='/tourney/load'\r\n                           render={props =>\r\n                               <LayoutLoadTourney loadTourney={this.loadTourneyState(history)}/>}/>\r\n                    <Route path='/tourney/groups'\r\n                           render={props =>\r\n                               <Groups addGroup={this.addGroup}\r\n                                       tourneyName={this.state.tourneyName}\r\n                                       groups={this.state.groups}\r\n                                       teamAdded={this.addTeam}\r\n                                       approveGroups={this.approveGroups(history)}\r\n                               />\r\n                           }\r\n                    />\r\n                    <Route path='/tourney/state' render={props =>\r\n                        <LayoutTourneyState\r\n                            saveTourneyState={this.saveTourneyState}\r\n                            groups={this.state.groups.map(it => Object.assign({}, {groupLetter: it.groupLetter}))}\r\n                            group={this.state.groups.find(it => it.groupLetter === this.state.currentlyDisplayedGroup)}\r\n                            tourneyName={this.state.tourneyName}\r\n                            groupChosen={this.groupChosen}\r\n                            onMatchAdded={this.onMatchAdded}\r\n                            removeMatch={this.removeMatch}\r\n                        />}\r\n                    />\r\n                    <Route path='/' component={SingleColumnLayout({Content: SelectionPage})}/>\r\n                    <Redirect from='*' to='/'/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    }\r\n}\r\n\r\nfunction byName(teamName) {\r\n    return (it) => it.groupLetter === teamName;\r\n}\r\n\r\nconst LayoutNewTourney = SingleColumnLayout({Content: NewTourney});\r\nconst LayoutTourneyState = SingleColumnLayout({Content: TourneyState}, 12, 0);\r\nconst LayoutLoadTourney = SingleColumnLayout({Content: LoadTourney}, 12, 0);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}