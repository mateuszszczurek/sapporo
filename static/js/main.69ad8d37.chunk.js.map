{"version":3,"sources":["helpers/history.js","components/LoadTourney.jsx","components/SelectionPage.jsx","components/Logo.jsx","hoc/SingleColumnLayout.jsx","components/NewTourney.jsx","components/Group.jsx","components/Groups.jsx","components/EditMatches.jsx","components/TourneyDetails.jsx","components/TourneyState.jsx","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","LoadTurney","react","style","formStyle","className","Form","Group","controlId","FieldGroup","id","type","label","React","border","padding","_ref","props","Object","objectWithoutProperties","Label","FormControl","SelectionPage","ButtonGroup","lib","to","Button","variant","pageHeader","paddingBottom","margin","borderBottom","Logo","SingleColumnLayout","inputs","componentSpan","arguments","length","undefined","componentOffset","Content","_React$Component","Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","react_default","a","createElement","Container","Row","Col","md","span","offset","NewToruney","context","_this","call","handleChange","bind","assertThisInitialized","handleTourneyCreation","state","e","setState","target","_this2","preventDefault","trim","createNewTourney","onSubmit","Control","placeholder","onChange","addTeam","newTeamNameChange","teamAdded","newTeamOnEnter","newTeamName","teamNameWarning","teams","includes","groupLetter","onKeyPress","onClick","fa","_this$props","FormGroup","map","name","readOnly","marginBottom","teamItem","groupItems","defaultProps","groups","Groups","approveGroups","groupAdded","tourneyName","amountOfGroups","group","sm","components_Group","fourGroups","addGroup","block","divStyle","width","team","teamName","Dropdown","Item","eventKey","EditMatches","firstTeamSelected","secondTeamSelected","onSelect","Toggle","Menu","Array","from","val","index","num","setNumber","dupa","alert","gridOptions","suppressDragLeaveHidesColumns","suppressMovableColumns","enableSorting","columnDefs","headerName","field","sortable","groupId","marryChildren","children","suppressMovable","lockPosition","TourneyDetails","accordion","activeKey","rowData","make","model","price","onGridReady","params","api","sizeColumnsToFit","onSortChanged","aaa","rc_collapse_es","header","main","onCellClicked","components_EditMatches","TourneyState","Navbar","bg","Nav","GroupItems","inline","components_TourneyDetails","it","Link","App","pickTourneyName","lastGroup","slice","pop","newGroupLetter","String","fromCharCode","charCodeAt","concat","toConsumableArray","groupName","find","byName","newTeams","push","groupWithAddedTeam","objectSpread","newGroups","toReplace","findIndex","history","toruneyName","_this3","Router","Switch","Route","path","render","LayoutNewTourney","createTourneyAndRedirect","component","LoadTourney","components_Groups","LayoutTourneyState","Redirect","NewTourney","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69ad8d37.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import * as React from \"react\";\r\nimport {FormControl, Form} from \"react-bootstrap\";\r\n\r\nclass LoadTurney extends React.Component {\r\n\r\n    render() {\r\n        return <form style={formStyle}>\r\n            <h2 className='border-bottom mb-3'>Wczytaj istniejący turniej</h2>\r\n            <Form.Group controlId=\"formBasicText\">\r\n                <FieldGroup\r\n                    id=\"formControlsFile\"\r\n                    type=\"file\"\r\n                    label=\"Wybierz plik z zapisanym turniejem\"\r\n                />\r\n\r\n            </Form.Group>\r\n        </form>\r\n    }\r\n}\r\n\r\nconst formStyle = {\r\n    border: 'thin black solid',\r\n    padding: '20px'\r\n};\r\n\r\n\r\nfunction FieldGroup({id, label, ...props}) {\r\n    return (\r\n        <Form.Group controlId={id}>\r\n            <Form.Label>{label}</Form.Label>\r\n            <FormControl {...props} />\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default LoadTurney;","import {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport * as React from \"react\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n\r\n\r\nexport default () => <ButtonGroup className='d-flex'>\r\n    <LinkContainer to='/tourney/new'>\r\n        <Button variant=\"primary\">\r\n            Swtórz nowy turniej\r\n        </Button>\r\n    </LinkContainer>\r\n    <LinkContainer to='/tourney/load'>\r\n        <Button variant=\"primary\">\r\n            Wczytaj turniej\r\n        </Button>\r\n    </LinkContainer>\r\n</ButtonGroup>","import * as React from \"react\";\r\n\r\nconst pageHeader = {\r\n    paddingBottom: '9px',\r\n    'margin': '40px 0 20px',\r\n    borderBottom: '1px solid #eee'\r\n}\r\n\r\nexport default () => <div style={pageHeader}><h1>Volleyball Tournament App</h1></div>","import React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Logo from \"../components/Logo\";\r\n\r\nfunction SingleColumnLayout(inputs, componentSpan = 8, componentOffset = 2) {\r\n\r\n    const {Content} = inputs;\r\n\r\n    class Component extends React.Component {\r\n\r\n        render() {\r\n            return <Container>\r\n                <Row>\r\n                    <Col md={{span: 8, offset: 2}}>\r\n                        <Logo/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{span: componentSpan, offset: componentOffset}}>\r\n                        <Content {...this.props}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        }\r\n    }\r\n\r\n    return Component;\r\n\r\n}\r\n\r\nexport default SingleColumnLayout;","import PropTypes from 'prop-types';\r\n\r\nimport * as React from \"react\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\nclass NewToruney extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTourneyCreation = this.handleTourneyCreation.bind(this);\r\n\r\n        this.state = {\r\n            value: ''\r\n        };\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    handleTourneyCreation() {\r\n        return e => {\r\n            e.preventDefault();\r\n            if(!this.state.value || !this.state.value.trim()){\r\n                //TODO make it common util for checking empty string and preventing form action (same as for group addition)\r\n            } else {\r\n                this.props.createNewTourney(this.state.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <form\r\n            style={formStyle}\r\n            onSubmit={this.handleTourneyCreation()}>\r\n            <h2>Stwórz nowy turniej</h2>\r\n            <Form.Group controlId='formBasicText'>\r\n                <Form.Label>Podaj nazwę turniej</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={this.state.value}\r\n                    placeholder=\"Małopolski turniej siatkówki amatorskiej \"\r\n                    onChange={this.handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Button type=\"submit\">Stwórz</Button>\r\n        </form>\r\n    }\r\n}\r\n\r\nconst formStyle = {\r\n    border: 'thin black solid',\r\n    padding: '20px'\r\n};\r\n\r\nNewToruney.propTypes = {\r\n    createNewTourney : PropTypes.func\r\n};\r\n\r\nexport default NewToruney;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Button, Form, FormControl, FormGroup} from \"react-bootstrap\";\r\n\r\nimport '../css/button.css';\r\nimport {FaPlus} from \"react-icons/fa/index\";\r\n\r\nclass Group extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addTeam = this.addTeam.bind(this);\r\n        this.newTeamNameChange = this.newTeamNameChange.bind(this);\r\n        this.teamAdded = this.teamAdded.bind(this);\r\n        this.newTeamOnEnter = this.newTeamOnEnter.bind(this);\r\n\r\n        this.state = {newTeamName: '', teamNameWarning: ''}\r\n    }\r\n\r\n    newTeamNameChange(e) {\r\n        this.setState({newTeamName: e.target.value});\r\n    }\r\n\r\n    teamAdded() {\r\n        const newTeamName = this.state.newTeamName;\r\n        if(!newTeamName || newTeamName.trim().length === 0) {\r\n            // this.setState({teamNameWarning: 'Nazwa drużyny nie może być pusta!'})\r\n            // TODO add sensible message\r\n            // TODO only unique team names!\r\n        } else if (this.props.teams.includes(newTeamName)){\r\n            // this.setState({teamNameWarning: 'Istnieje już drużyna o takiej nazwie!'})\r\n        } else {\r\n            this.props.teamAdded(this.props.groupLetter, this.state.newTeamName);\r\n            this.setState({newTeamName: ''})\r\n        }\r\n    }\r\n\r\n    newTeamOnEnter(e) {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.teamAdded()\r\n        }\r\n    }\r\n\r\n    addTeam() {\r\n        return <div>\r\n            <FormControl value={this.state.newTeamName}\r\n                         className='mb-2'\r\n                         key='newItem'\r\n                         onChange={this.newTeamNameChange}\r\n                         onKeyPress={this.newTeamOnEnter}\r\n            />\r\n            <Button onClick={this.teamAdded} >\r\n                <FaPlus  />\r\n                <span>Dodaj drużynę</span>\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n    render() {\r\n        const {groupLetter, teams, teamAdded} = this.props;\r\n\r\n        return <div>\r\n            <h2>{groupLetter}</h2>\r\n            <Form>\r\n                <FormGroup\r\n                    controlId={groupLetter}>\r\n                    {groupItems(teams, groupLetter)}\r\n                    {teams && teams.length < 8 && this.addTeam(groupLetter, teamAdded)}\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nfunction groupItems(teams) {\r\n    return teams.map(name => teamItem(name));\r\n}\r\n\r\nfunction teamItem(name) {\r\n    return <FormControl readOnly style={{marginBottom: '10px'}} key={name} value={name}/>\r\n\r\n}\r\n\r\nGroup.propTypes = {\r\n    groupLetter: PropTypes.string,\r\n    teams: PropTypes.array,\r\n    teamAdded: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    groupLetter: 'A',\r\n    groups: [],\r\n    teamAdded: () => null\r\n};\r\n\r\nexport default Group;","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Logo from \"./Logo\";\r\nimport Group from \"./Group\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport {FaPlus} from \"react-icons/fa/index\";\r\n\r\n// TODO extract this css (is copied from other file)\r\n// TODO bigger space between plus and text\r\n// TODO try to better align 'dodaj grupę' button\r\n// TODO check that there is at least one group with at least two teams\r\n\r\nfunction fourGroups(groups, teamAdded) {\r\n    return groups.map(group =>\r\n        <Col key={group.groupLetter} sm={3}>\r\n            <Group\r\n                groupLetter={group.groupLetter}\r\n                teams={group.teams}\r\n                teamAdded={teamAdded}/>\r\n        </Col>);\r\n}\r\n\r\nclass Groups extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.approveGroups = this.approveGroups.bind(this);\r\n    }\r\n\r\n    approveGroups() {\r\n        this.props.approveGroups();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {groups, teamAdded, tourneyName} = this.props;\r\n\r\n        const amountOfGroups = groups.length;\r\n        return <Container>\r\n            <Row>\r\n                <Col md={{span: 8, offset: 2}}>\r\n                    <Logo/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={{span: 8}}>\r\n                    <h3 className='pb-3'>Turniej \"{tourneyName}\"</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {fourGroups(groups, teamAdded)}\r\n                {(amountOfGroups < 8) && addGroup(this.props.addGroup)}\r\n            </Row>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <Button block onClick={this.approveGroups}>Zatwierdź grupy</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    }\r\n\r\n}\r\n\r\nfunction addGroup(groupAdded) {\r\n    return <Col sm={3}>\r\n        <Button className='mb-3' onClick={groupAdded}>\r\n            <FaPlus/>\r\n            <span>Dodaj grupę</span>\r\n        </Button>\r\n    </Col>\r\n\r\n}\r\n\r\nGroups.propTypes = {\r\n    groups: PropTypes.array,\r\n    addGroup: PropTypes.func,\r\n    tourneyName: PropTypes.string,\r\n    approveGroups: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    tourneyName: 'Turniej',\r\n    groups: [],\r\n    addGroup: () => null,\r\n    approveGroups: () => null,\r\n};\r\n\r\nexport default Groups;","import 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport Dropdown from \"react-bootstrap/es/Dropdown\";\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport {Col} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\n\r\nconst divStyle = {width: '100%'};\r\n\r\nfunction team(teamName) {\r\n    return <Dropdown.Item key={teamName} eventKey={teamName}>{teamName}</Dropdown.Item>\r\n}\r\n\r\nconst teams = [\"Team A\", \"Team B\", \"Team C\"];\r\n\r\nclass EditMatches extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.firstTeamSelected = this.firstTeamSelected.bind(this);\r\n        this.secondTeamSelected = this.secondTeamSelected.bind(this);\r\n    }\r\n\r\n    firstTeamSelected(eventKey) {\r\n        this.setState({firstTeamSelected: eventKey});\r\n    }\r\n\r\n    secondTeamSelected(eventKey) {\r\n        this.setState({secondTeamSelected: eventKey});\r\n    }\r\n\r\n\r\n    // TODO - remove duplication for dropdowns\r\n    // TODO - shouldn't be able to select same team\r\n    // TODO refactor and numbers only\r\n\r\n    render() {\r\n        return <div>\r\n            <Row className={'mb-2'}>\r\n                <Col md={{span: 4, offset: 1}}>\r\n                    <Dropdown\r\n                        onSelect={this.firstTeamSelected}>\r\n                        <Dropdown.Toggle\r\n                            className='w-100'\r\n                            id=\"first-team\">\r\n                            {this.state.firstTeamSelected ? this.state.firstTeamSelected : 'Wybierz drużynę'}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu\r\n                            style={divStyle}>\r\n                            {teams.map(teamName => team(teamName))}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Col>\r\n                <Col md={2}>\r\n                    <h3 className='text-center'>vs</h3>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Dropdown\r\n                        onSelect={this.secondTeamSelected}>\r\n                        <Dropdown.Toggle\r\n                            className='w-100'\r\n                            id=\"first-team\">\r\n                            {this.state.secondTeamSelected ? this.state.secondTeamSelected : 'Wybierz drużynę'}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu\r\n                            style={divStyle}>\r\n                            {teams.map(teamName => team(teamName))}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Col>\r\n            </Row>\r\n            {Array.from(new Array(5), (val, index) => index + 1).map(num => setRow(num))}\r\n            <Row className={'mt-3'}>\r\n                <Col>\r\n                    <Button className='float-right' type=\"submit\">Zatwierdź mecz</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nfunction setRow(setNumber) {\r\n    return <Row className='mb-1'>\r\n        <Col md={1}>\r\n            <h4 key={setNumber}>{setNumber} set</h4>\r\n        </Col>\r\n        <Col md={{span: 2, offset : 1}}>\r\n            <input className={'form-control'} type='text'/>\r\n        </Col>\r\n        <Col md={{span: 2, offset: 1}}>\r\n            <h5 className='text-center'>:</h5>\r\n        </Col>\r\n        <Col md={{span: 2, offset: 1}}>\r\n            <input className={'form-control'} type='text'/>\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nexport default EditMatches;","import 'rc-collapse/assets/index.css';\r\nimport Collapse, {Panel} from 'rc-collapse';\r\nimport React from 'react';\r\nimport {AgGridReact} from \"ag-grid-react\";\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport EditMatches from \"./EditMatches\";\r\n\r\n\r\nfunction dupa() {\r\n    alert('dupa')\r\n}\r\n\r\nconst gridOptions = {\r\n    suppressDragLeaveHidesColumns: true,\r\n    suppressMovableColumns: true,\r\n    enableSorting: true,\r\n    columnDefs: [\r\n        {headerName: \"Drużyna\", field: \"team\", width: 600, sortable: true},\r\n        {\r\n            groupId: 1,\r\n            headerName: \"Mecze\",\r\n            marryChildren: true,\r\n            sortable: true,\r\n            children: [\r\n                {headerName: 'Rozegr.', field: \"matchesPlayed\"},\r\n                {headerName: 'Wygr.', field: \"matchesWon\"},\r\n                {headerName: 'Przegr.', field: \"matchesLost\"}\r\n            ]\r\n        },\r\n        {\r\n            groupId: 2,\r\n            headerName: \"Sety\",\r\n            suppressMovable: true,\r\n            marryChildren: true,\r\n            sortable: true,\r\n            children: [\r\n                {headerName: 'Wygr.', field: \"setsWon\"},\r\n                {headerName: 'Przegr.', field: \"setsLost\"},\r\n                {headerName: 'Stosunek', field: \"setsRatio\"}\r\n            ]\r\n        },\r\n        {\r\n            groupId: 3,\r\n            headerName: \"Punkty\",\r\n            suppressMovable: true,\r\n            lockPosition: true,\r\n            sortable: true,\r\n            children: [\r\n                {headerName: 'Wygr.', field: \"sthWon\"},\r\n                {headerName: 'Przegr.', field: \"sthLost\"},\r\n                {headerName: 'Stosunek', field: \"sthRatio\"}\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nclass TourneyDetails extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onGridReady = this.onGridReady.bind(this);\r\n    }\r\n\r\n    // TODO sortable by matches won, ratio,\r\n    // TODO populate with data\r\n    // TODO open and autosize to content\r\n    // TODO extract table to another component (?)\r\n\r\n    state = {\r\n        accordion: true,\r\n        activeKey: ['0'],\r\n        rowData: [\r\n            {make: \"Toyota\", model: \"Celica\", price: 35000},\r\n            {make: \"Ford\", model: \"Mondeo\", price: 32000},\r\n            {make: \"Porsche\", model: \"Boxter\", price: 72000}\r\n        ]\r\n    };\r\n\r\n    onChange = (activeKey) => {\r\n        this.setState({\r\n            activeKey,\r\n        });\r\n    };\r\n\r\n    onGridReady = (params) => {\r\n        params.api.sizeColumnsToFit();\r\n        params.api.onSortChanged(this.aaa)\r\n    };\r\n\r\n    render() {\r\n\r\n        const activeKey = this.state.activeKey;\r\n\r\n        return <Collapse\r\n            accordion={false}\r\n            onChange={this.onChange}\r\n            activeKey={activeKey}\r\n        >\r\n            <Panel header='Tabela'>\r\n                <div className=\"ag-theme-balham\">\r\n                    <div>\r\n                        <AgGridReact onGridReady={this.onGridReady}\r\n                                     gridOptions={gridOptions}\r\n                                     rowData={this.state.rowData}\r\n                                     onCellClicked={dupa}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Panel>\r\n            <Panel header='Mecze'>\r\n            </Panel>\r\n            <Panel header='Wprowadź mecz'>\r\n                <div>\r\n                    <EditMatches/>\r\n                </div>\r\n            </Panel>\r\n        </Collapse>\r\n    }\r\n}\r\n\r\nexport default TourneyDetails;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport TourneyDetails from \"./TourneyDetails\";\r\n\r\nclass TourneyState extends React.Component {\r\n\r\n    render() {\r\n        // TODO save tourney button here\r\n        return <div>\r\n            <Row>\r\n                <Col md={{span: 8}}>\r\n                    <h3 className='pb-3'>Turniej \"{this.props.tourneyName}\"</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Navbar bg=\"primary\" variant=\"dark\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <GroupItems groups={this.props.groups}/>\r\n                        </Nav>\r\n                        <Form inline>\r\n                            <Button variant=\"outline-light\">Zapisz turniej</Button>\r\n                        </Form>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12} className='mb-3'>\r\n                    <TourneyDetails/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction GroupItems({groups}) {\r\n    return groups.map(it => <Nav.Link key={it.groupLetter}>Grupa {it.groupLetter}</Nav.Link>)\r\n}\r\n\r\nTourneyState.propTypes = {\r\n    groups: PropTypes.array.isRequired,\r\n    tourneyName : PropTypes.string\r\n};\r\n\r\nTourneyState.defaultProps = {\r\n    groups: [],\r\n    tourneyName : \"\"\r\n};\r\n\r\nexport default TourneyState;","import React, {Component} from 'react';\n\nimport './App.css'\n\nimport {Redirect, Route, Router, Switch} from 'react-router-dom'\nimport history from './helpers/history';\n\nimport LoadTourney from \"./components/LoadTourney\";\nimport SelectionPage from \"./components/SelectionPage\";\n\nimport SingleColumnLayout from \"./hoc/SingleColumnLayout\";\nimport NewTourney from \"./components/NewTourney\";\nimport Groups from \"./components/Groups\";\nimport TourneyState from \"./components/TourneyState\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.addGroup = this.addGroup.bind(this);\n        this.pickTourneyName = this.pickTourneyName.bind(this);\n        this.addTeam = this.addTeam.bind(this);\n        this.approveGroups = this.approveGroups.bind(this);\n\n        this.state = {groups: [{groupLetter: \"A\", teams: []}]};\n    }\n\n    addGroup() {\n        let lastGroup = this.state.groups.map(it => it.groupLetter).slice().pop();\n        let newGroupLetter = String.fromCharCode(lastGroup.charCodeAt(0) + 1);\n        const groups = [...this.state.groups, {groupLetter: newGroupLetter, teams: []}];\n        this.setState({groups: groups})\n    }\n\n    addTeam(groupName, teamName) {\n        const group = this.state.groups.find(byName(groupName));\n\n        const newTeams = group.teams.slice();\n        newTeams.push(teamName);\n        const groupWithAddedTeam = {...group, teams: newTeams};\n\n        const newGroups = this.state.groups.slice();\n\n        const toReplace = newGroups.findIndex(byName(groupName));\n\n        newGroups[toReplace] = groupWithAddedTeam;\n\n        this.setState({groups: newGroups})\n    }\n\n    approveGroups(history) {\n        return e => {\n\n            history.push('/tourney/state')\n        }\n    }\n\n    pickTourneyName(toruneyName) {\n        this.setState({tourneyName: toruneyName});\n    }\n\n    createTourneyAndRedirect(history) {\n        return (tourneyName) => {\n            this.pickTourneyName(tourneyName);\n            history.push('/tourney/groups')\n        }\n    }\n\n    render() {\n\n        return <Router history={history}>\n            <div>\n                <Switch>\n                    <Route path='/tourney/new'\n                           render={props =>\n                               <LayoutNewTourney createNewTourney={this.createTourneyAndRedirect(history)}/>\n                           }\n                    />\n                    <Route path='/tourney/load' component={SingleColumnLayout({Content: LoadTourney})}/>\n                    <Route path='/tourney/groups'\n                           render={props =>\n                               <Groups addGroup={this.addGroup}\n                                       tourneyName={this.state.tourneyName}\n                                       groups={this.state.groups}\n                                       teamAdded={this.addTeam}\n                                       approveGroups={this.approveGroups(history)}\n                               />\n                           }\n                    />\n                    <Route path='/tourney/state' render={props =>\n                        <LayoutTourneyState\n                            groups={this.state.groups}\n                            tourneyName={this.state.tourneyName}/>}\n                    />\n                    <Route path='/' component={SingleColumnLayout({Content: SelectionPage})}/>\n                    <Redirect from='*' to='/'/>\n                </Switch>\n            </div>\n        </Router>\n    }\n}\n\nfunction byName(teamName) {\n    return (it) => it.groupLetter === teamName;\n}\n\nconst LayoutNewTourney = SingleColumnLayout({Content: NewTourney});\nconst LayoutTourneyState = SingleColumnLayout({Content: TourneyState}, 12, 0);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}