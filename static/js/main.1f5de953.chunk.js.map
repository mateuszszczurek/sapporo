{"version":3,"sources":["helpers/history.js","components/LoadTourney.jsx","components/SelectionPage.jsx","components/Logo.jsx","hoc/SingleColumnLayout.jsx","components/NewTourney.jsx","components/Group.jsx","components/Groups.jsx","components/TeamDropdown.jsx","components/AddMatch.jsx","helpers/matches.js","components/MatchesDetails.jsx","components/GroupSummaryTable.jsx","components/TourneyDetails.jsx","components/TourneyState.jsx","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","LoadTurney","react","style","formStyle","className","Form","Group","controlId","FieldGroup","id","type","label","React","border","padding","_ref","props","Object","objectWithoutProperties","Label","FormControl","SelectionPage","ButtonGroup","lib","to","Button","variant","pageHeader","paddingBottom","margin","borderBottom","Logo","SingleColumnLayout","inputs","componentSpan","arguments","length","undefined","componentOffset","Content","_React$Component","Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","react_default","a","createElement","Container","Row","Col","md","span","offset","NewToruney","context","_this","call","handleChange","bind","assertThisInitialized","handleTourneyCreation","state","e","setState","target","_this2","preventDefault","trim","createNewTourney","onSubmit","Control","placeholder","onChange","addTeam","newTeamNameChange","teamAdded","newTeamOnEnter","newTeamName","teamNameWarning","teams","includes","groupLetter","onKeyPress","onClick","fa","_this$props","FormGroup","map","name","readOnly","marginBottom","teamItem","groupItems","defaultProps","groups","Groups","approveGroups","groupAdded","tourneyName","amountOfGroups","group","sm","components_Group","fourGroups","addGroup","block","TeamDropdown","teamSelected","onTeamSelected","allTeams","Dropdown","onSelect","Toggle","Menu","teamName","Item","eventKey","team","Set","setNumber","firstTeamResult","secondTeamResult","onSetChange","as","zeroOrNumberOrEmpty","allowEmptyOrNumber","callback","test","parseInt","AddMatch","teamsSelection","sets","firstTeamSelected","secondTeamSelected","teamSelectionFor","sameItemSelected","onMatchAdded","onSetChanged","selectionId","set","assign","objectSpread","defineProperty","newSets","alert","firstTeam","selectedTeam","secondTeam","selection","find","it","_this3","findIndex","newSelection","newSelections","filter","push","index","_this4","components_TeamDropdown","Array","from","val","matchSummary","match","keys","setsExcludingDraws","firstTeamSetsWon","secondTeamSetsWon","firstTeamName","secondTeamName","firstTeamSetsLost","secondTeamSetsLost","winner","looser","groupSummary","matches","matchesPlayed","wonMatches","summary","lostMatches","summaries","sumOfSets","reduce","sum","setsWon","b","setsLost","setsRatio","setsSummary","matchesWon","matchesLost","pointsWon","pointsLost","pointsRatio","MatchesDetails","ResultRow","join","setDetails","gridOptions","suppressDragLeaveHidesColumns","suppressMovableColumns","enableSorting","suppressLoadingOverlay","suppressNoRowsOverlay","columnDefs","headerName","field","width","sortable","groupId","marryChildren","children","suppressMovable","lockPosition","GroupSummaryTable","onGridReady","params","api","sizeColumnsToFit","onSortChanged","aaa","main","rowData","TourneyDetails","accordion","activeKey","rc_collapse_es","header","components_GroupSummaryTable","components_MatchesDetails","components_AddMatch","TourneyState","groupChosen","Navbar","bg","Nav","GroupItems","activeGroup","inline","components_TourneyDetails","Link","active","App","pickTourneyName","currentlyDisplayedGroup","groupIndex","newMatches","slice","newGroups","concat","toConsumableArray","lastGroup","pop","newGroupLetter","String","fromCharCode","charCodeAt","groupName","byName","newTeams","groupWithAddedTeam","toReplace","history","toruneyName","Router","Switch","Route","path","render","LayoutNewTourney","createTourneyAndRedirect","component","LoadTourney","components_Groups","LayoutTourneyState","Redirect","NewTourney","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f5de953.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import * as React from \"react\";\r\nimport {FormControl, Form} from \"react-bootstrap\";\r\n\r\nclass LoadTurney extends React.Component {\r\n\r\n    render() {\r\n        return <form style={formStyle}>\r\n            <h2 className='border-bottom mb-3'>Wczytaj istniejący turniej</h2>\r\n            <Form.Group controlId=\"formBasicText\">\r\n                <FieldGroup\r\n                    id=\"formControlsFile\"\r\n                    type=\"file\"\r\n                    label=\"Wybierz plik z zapisanym turniejem\"\r\n                />\r\n\r\n            </Form.Group>\r\n        </form>\r\n    }\r\n}\r\n\r\nconst formStyle = {\r\n    border: 'thin black solid',\r\n    padding: '20px'\r\n};\r\n\r\n\r\nfunction FieldGroup({id, label, ...props}) {\r\n    return (\r\n        <Form.Group controlId={id}>\r\n            <Form.Label>{label}</Form.Label>\r\n            <FormControl {...props} />\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default LoadTurney;","import {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport * as React from \"react\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n\r\n\r\nexport default () => <ButtonGroup className='d-flex'>\r\n    <LinkContainer to='/tourney/new'>\r\n        <Button variant=\"primary\">\r\n            Swtórz nowy turniej\r\n        </Button>\r\n    </LinkContainer>\r\n    <LinkContainer to='/tourney/load'>\r\n        <Button variant=\"primary\">\r\n            Wczytaj turniej\r\n        </Button>\r\n    </LinkContainer>\r\n</ButtonGroup>","import * as React from \"react\";\r\n\r\nconst pageHeader = {\r\n    paddingBottom: '9px',\r\n    'margin': '40px 0 20px',\r\n    borderBottom: '1px solid #eee'\r\n}\r\n\r\nexport default () => <div style={pageHeader}><h1>Volleyball Tournament App+</h1></div>","import React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Logo from \"../components/Logo\";\r\n\r\nfunction SingleColumnLayout(inputs, componentSpan = 8, componentOffset = 2) {\r\n\r\n    const {Content} = inputs;\r\n\r\n    class Component extends React.Component {\r\n\r\n        render() {\r\n            return <Container>\r\n                <Row>\r\n                    <Col md={{span: 8, offset: 2}}>\r\n                        <Logo/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{span: componentSpan, offset: componentOffset}}>\r\n                        <Content {...this.props}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        }\r\n    }\r\n\r\n    return Component;\r\n\r\n}\r\n\r\nexport default SingleColumnLayout;","import PropTypes from 'prop-types';\r\n\r\nimport * as React from \"react\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\nclass NewToruney extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTourneyCreation = this.handleTourneyCreation.bind(this);\r\n\r\n        this.state = {\r\n            value: ''\r\n        };\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    handleTourneyCreation() {\r\n        return e => {\r\n            e.preventDefault();\r\n            if(!this.state.value || !this.state.value.trim()){\r\n                //TODO make it common util for checking empty string and preventing form action (same as for group addition)\r\n            } else {\r\n                this.props.createNewTourney(this.state.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <form\r\n            style={formStyle}\r\n            onSubmit={this.handleTourneyCreation()}>\r\n            <h2>Stwórz nowy turniej</h2>\r\n            <Form.Group controlId='formBasicText'>\r\n                <Form.Label>Podaj nazwę turniej</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={this.state.value}\r\n                    placeholder=\"Małopolski turniej siatkówki amatorskiej \"\r\n                    onChange={this.handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Button type=\"submit\">Stwórz</Button>\r\n        </form>\r\n    }\r\n}\r\n\r\nconst formStyle = {\r\n    border: 'thin black solid',\r\n    padding: '20px'\r\n};\r\n\r\nNewToruney.propTypes = {\r\n    createNewTourney : PropTypes.func\r\n};\r\n\r\nexport default NewToruney;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Button, Form, FormControl, FormGroup} from \"react-bootstrap\";\r\n\r\nimport '../css/button.css';\r\nimport {FaPlus} from \"react-icons/fa/index\";\r\n\r\nclass Group extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addTeam = this.addTeam.bind(this);\r\n        this.newTeamNameChange = this.newTeamNameChange.bind(this);\r\n        this.teamAdded = this.teamAdded.bind(this);\r\n        this.newTeamOnEnter = this.newTeamOnEnter.bind(this);\r\n\r\n        this.state = {newTeamName: '', teamNameWarning: ''}\r\n    }\r\n\r\n    newTeamNameChange(e) {\r\n        this.setState({newTeamName: e.target.value});\r\n    }\r\n\r\n    teamAdded() {\r\n        const newTeamName = this.state.newTeamName;\r\n        if(!newTeamName || newTeamName.trim().length === 0) {\r\n            // this.setState({teamNameWarning: 'Nazwa drużyny nie może być pusta!'})\r\n            // TODO add sensible message\r\n            // TODO only unique team names!\r\n        } else if (this.props.teams.includes(newTeamName)){\r\n            // this.setState({teamNameWarning: 'Istnieje już drużyna o takiej nazwie!'})\r\n        } else {\r\n            this.props.teamAdded(this.props.groupLetter, this.state.newTeamName);\r\n            this.setState({newTeamName: ''})\r\n        }\r\n    }\r\n\r\n    newTeamOnEnter(e) {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.teamAdded()\r\n        }\r\n    }\r\n\r\n    addTeam() {\r\n        return <div>\r\n            <FormControl value={this.state.newTeamName}\r\n                         className='mb-2'\r\n                         key='newItem'\r\n                         onChange={this.newTeamNameChange}\r\n                         onKeyPress={this.newTeamOnEnter}\r\n            />\r\n            <Button onClick={this.teamAdded} >\r\n                <FaPlus  />\r\n                <span>Dodaj drużynę</span>\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n    render() {\r\n        const {groupLetter, teams, teamAdded} = this.props;\r\n\r\n        return <div>\r\n            <h2>{groupLetter}</h2>\r\n            <Form>\r\n                <FormGroup\r\n                    controlId={groupLetter}>\r\n                    {groupItems(teams, groupLetter)}\r\n                    {teams && teams.length < 8 && this.addTeam(groupLetter, teamAdded)}\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nfunction groupItems(teams) {\r\n    return teams.map(name => teamItem(name));\r\n}\r\n\r\nfunction teamItem(name) {\r\n    return <FormControl readOnly style={{marginBottom: '10px'}} key={name} value={name}/>\r\n\r\n}\r\n\r\nGroup.propTypes = {\r\n    groupLetter: PropTypes.string,\r\n    teams: PropTypes.array,\r\n    teamAdded: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    groupLetter: 'A',\r\n    groups: [],\r\n    teamAdded: () => null\r\n};\r\n\r\nexport default Group;","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Logo from \"./Logo\";\r\nimport Group from \"./Group\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport {FaPlus} from \"react-icons/fa/index\";\r\n\r\n// TODO extract this css (is copied from other file)\r\n// TODO bigger space between plus and text\r\n// TODO try to better align 'dodaj grupę' button\r\n// TODO check that there is at least one group with at least two teams\r\n\r\nfunction fourGroups(groups, teamAdded) {\r\n    return groups.map(group =>\r\n        <Col key={group.groupLetter} sm={3}>\r\n            <Group\r\n                groupLetter={group.groupLetter}\r\n                teams={group.teams}\r\n                teamAdded={teamAdded}/>\r\n        </Col>);\r\n}\r\n\r\nclass Groups extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.approveGroups = this.approveGroups.bind(this);\r\n    }\r\n\r\n    approveGroups() {\r\n        this.props.approveGroups();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {groups, teamAdded, tourneyName} = this.props;\r\n\r\n        const amountOfGroups = groups.length;\r\n        return <Container>\r\n            <Row>\r\n                <Col md={{span: 8, offset: 2}}>\r\n                    <Logo/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={{span: 8}}>\r\n                    <h3 className='pb-3'>Turniej \"{tourneyName}\"</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {fourGroups(groups, teamAdded)}\r\n                {(amountOfGroups < 8) && addGroup(this.props.addGroup)}\r\n            </Row>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <Button block onClick={this.approveGroups}>Zatwierdź grupy</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    }\r\n\r\n}\r\n\r\nfunction addGroup(groupAdded) {\r\n    return <Col sm={3}>\r\n        <Button className='mb-3' onClick={groupAdded}>\r\n            <FaPlus/>\r\n            <span>Dodaj grupę</span>\r\n        </Button>\r\n    </Col>\r\n\r\n}\r\n\r\nGroups.propTypes = {\r\n    groups: PropTypes.array,\r\n    addGroup: PropTypes.func,\r\n    tourneyName: PropTypes.string,\r\n    approveGroups: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    tourneyName: 'Turniej',\r\n    groups: [],\r\n    addGroup: () => null,\r\n    approveGroups: () => null,\r\n};\r\n\r\nexport default Groups;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport Dropdown from \"react-bootstrap/es/Dropdown\";\r\n\r\nclass TeamDropdown extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {teamSelected, onTeamSelected, allTeams} = this.props;\r\n\r\n        return <Dropdown\r\n            onSelect={onTeamSelected}>\r\n            <Dropdown.Toggle\r\n                className='w-100'>\r\n                {teamSelected ? teamSelected : 'Wybierz drużynę'}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu\r\n                className='w-100'>\r\n                {allTeams.map(teamName => team(teamName))}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    }\r\n\r\n}\r\n\r\nTeamDropdown.propTypes = {\r\n    teamSelected : PropTypes.string,\r\n    onTeamSelected : PropTypes.func,\r\n    allTeams : PropTypes.array\r\n};\r\n\r\nTeamDropdown.defaultProps = {\r\n    teamSelected : null,\r\n    onTeamSelected : () => {},\r\n    allTeams: []\r\n}\r\n\r\nfunction team(teamName) {\r\n    return <Dropdown.Item key={teamName} eventKey={teamName}>{teamName}</Dropdown.Item>\r\n}\r\n\r\nexport default TeamDropdown;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport {Col} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport TeamDropdown from \"./TeamDropdown\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\n\r\nclass AddMatch extends React.Component {\r\n\r\n    // TODO - add version number\r\n    // TODO - empty groups are not displayed and considered\r\n    // TODO - remove duplication for dropdowns\r\n    // TODO - shouldn't be able to select same team\r\n    // TODO refactor and numbers only\r\n    // TODO handle switching on 'same-selection'\r\n    // TODO validate that inputs are numbers!\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {teamsSelection: [], sets: {}};\r\n\r\n        this.firstTeamSelected = this.firstTeamSelected.bind(this);\r\n        this.secondTeamSelected = this.secondTeamSelected.bind(this);\r\n        this.onTeamSelected = this.onTeamSelected.bind(this);\r\n        this.teamSelectionFor = this.teamSelectionFor.bind(this);\r\n        this.sameItemSelected = this.sameItemSelected.bind(this);\r\n        this.onMatchAdded = this.onMatchAdded.bind(this);\r\n        this.onSetChanged = this.onSetChanged.bind(this);\r\n    }\r\n\r\n    onSetChanged(setNumber, selectionId) {\r\n        return value => {\r\n            const set = Object.assign({}, {\r\n                ...this.state.sets[setNumber],\r\n                [selectionId]: value\r\n            });\r\n            const newSets = Object.assign({}, {...this.state.sets});\r\n            newSets[setNumber] = set;\r\n            this.setState({sets: newSets});\r\n        }\r\n    }\r\n\r\n    onMatchAdded() {\r\n        if (this.state.teamsSelection.length < 2) {\r\n            alert('tried to store result without choosing team');\r\n            // consider disabling button if two teams are not chosen\r\n            return;\r\n        }\r\n        const firstTeam = this.state.teamsSelection[0].selectedTeam;\r\n        const secondTeam = this.state.teamsSelection[1].selectedTeam;\r\n\r\n        // TODO shouldn't be able to add match without any sets!\r\n        // TODO flush state from set - make selection - unselected\r\n        // TODO Make it possible to edit match or forbid to choose already chosen match\r\n        this.props.onMatchAdded(firstTeam, secondTeam, this.state.sets);\r\n        this.setState({sets: [], teamsSelection: []})\r\n    }\r\n\r\n    teamSelectionFor(selectionId) {\r\n        const selection = this.state.teamsSelection.find(it => it.selectionId === selectionId);\r\n        if (!selection) {\r\n            return \"\";\r\n        } else {\r\n            return selection.selectedTeam;\r\n        }\r\n    }\r\n\r\n    onTeamSelected(selectionId) {\r\n        return selectedTeam => {\r\n            if (this.state.teamsSelection.findIndex(it => it.selectedTeam === selectedTeam) !== -1) {\r\n                return;\r\n            }\r\n            const newSelection = {selectionId: selectionId, selectedTeam: selectedTeam};\r\n\r\n            const newSelections = this.state.teamsSelection.filter(it => it.selectionId !== selectionId);\r\n            newSelections.push(newSelection);\r\n\r\n            this.setState({teamsSelection: newSelections});\r\n        }\r\n    }\r\n\r\n    sameItemSelected(index, selectedTeam) {\r\n        return this.state.teamsSelection[index].selectedTeam === selectedTeam;\r\n    }\r\n\r\n    firstTeamSelected(eventKey) {\r\n        this.setState({firstTeamSelected: eventKey});\r\n    }\r\n\r\n    secondTeamSelected(eventKey) {\r\n        this.setState({secondTeamSelected: eventKey});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {group} = this.props;\r\n\r\n        return <div>\r\n            <Row className={'mb-2'}>\r\n                <Col md={{span: 4, offset: 1}}>\r\n                    <TeamDropdown\r\n                        allTeams={group.teams}\r\n                        teamSelected={this.teamSelectionFor('first-team')}\r\n                        onTeamSelected={this.onTeamSelected('first-team')}\r\n                    />\r\n                </Col>\r\n                <Col md={2}>\r\n                    <h3 className='text-center'>vs</h3>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <TeamDropdown\r\n                        allTeams={group.teams}\r\n                        teamSelected={this.teamSelectionFor('second-team')}\r\n                        onTeamSelected={this.onTeamSelected('second-team')}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            {Array.from(new Array(5), (val, index) => index + 1).map(setNumber =>\r\n                <Set key={setNumber}\r\n                     setNumber={setNumber}\r\n                     firstTeam={'first-team'}\r\n                     secondTeam={'second-team'}\r\n                     firstTeamResult={this.state.sets[setNumber] ? this.state.sets[setNumber]['first-team'] : ''}\r\n                     secondTeamResult={this.state.sets[setNumber] ? this.state.sets[setNumber]['second-team'] : ''}\r\n                     onSetChange={this.onSetChanged}/>\r\n            )}\r\n            <Row className={'mt-3'}>\r\n                <Col>\r\n                    <Button\r\n                        onClick={this.onMatchAdded}\r\n                        className='float-right'\r\n                        type=\"submit\">Zatwierdź mecz\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nfunction Set(props) {\r\n    const {setNumber, firstTeamResult, secondTeamResult, onSetChange} = props;\r\n    return <Row key={setNumber} className='mb-1'>\r\n        <Col md={1}>\r\n            <h4 key={setNumber}>{setNumber} set</h4>\r\n        </Col>\r\n        <Col md={{span: 2, offset: 1}}>\r\n            <Form.Control as='input' type='text' value={zeroOrNumberOrEmpty(firstTeamResult)}\r\n                          onChange={e => allowEmptyOrNumber(e, onSetChange(setNumber, 'first-team'))\r\n                          }/>\r\n        </Col>\r\n        <Col md={{span: 2, offset: 1}}>\r\n            <h5 className='text-center'>:</h5>\r\n        </Col>\r\n        <Col md={{span: 2, offset: 1}}>\r\n            <Form.Control as='input' type='text' value={zeroOrNumberOrEmpty(secondTeamResult)}\r\n                          onChange={e => allowEmptyOrNumber(e, onSetChange(setNumber, 'second-team'))}/>\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nfunction allowEmptyOrNumber(e, callback) {\r\n    const number = /^[0-9\\b]+$/;\r\n\r\n    const value = e.target.value;\r\n    e.target.value === '' ? callback(null) : number.test(value) && callback(parseInt(value));\r\n}\r\n\r\nfunction zeroOrNumberOrEmpty(firstTeamResult) {\r\n    return firstTeamResult === 0 ? firstTeamResult : firstTeamResult || '';\r\n}\r\n\r\nAddMatch.propTypes = {\r\n\r\n    group: PropTypes.object.isRequired\r\n\r\n};\r\n\r\nexport default AddMatch;","export function matchSummary(match) {\r\n\r\n    const sets = Object.keys(match.sets).map(key => match.sets[key]);\r\n\r\n    const setsExcludingDraws = sets.filter(set => set['first-team'] !== set['second-team']);\r\n    const firstTeamSetsWon = setsExcludingDraws.filter(set => set['first-team'] > set['second-team']).length;\r\n    const secondTeamSetsWon = setsExcludingDraws.length - firstTeamSetsWon;\r\n\r\n    return {\r\n        firstTeamName: match.firstTeam,\r\n        secondTeamName: match.secondTeam,\r\n        firstTeamSetsWon: firstTeamSetsWon,\r\n        secondTeamSetsWon: secondTeamSetsWon,\r\n        firstTeamSetsLost: secondTeamSetsWon,\r\n        secondTeamSetsLost: firstTeamSetsWon,\r\n        sets: sets,\r\n        winner: firstTeamSetsWon > secondTeamSetsWon ? match.firstTeam : match.secondTeam,\r\n        looser: firstTeamSetsWon < secondTeamSetsWon ? match.firstTeam : match.secondTeam\r\n    }\r\n\r\n}\r\n\r\nfunction setsSummary(team, matches) {\r\n\r\n    const summaries = matches.map(match => matchSummary(match));\r\n    const sumOfSets = summaries.map(it => it.sets.length).reduce((sum, value) => sum + value, 0);\r\n    const setsWon = summaries.map(it => it.firstTeamName === team ? it.firstTeamSetsWon : it.secondTeamSetsWon).reduce((a, b) => a + b, 0);\r\n\r\n    const setsLost = sumOfSets - setsWon;\r\n\r\n    // TODO sets ratio - rounding?\r\n\r\n    return {\r\n        teamName: team,\r\n        setsWon: setsWon,\r\n        setsLost: setsLost,\r\n        setsRatio: setsWon / setsLost\r\n    }\r\n\r\n}\r\n\r\nexport function groupSummary(matches, teams) {\r\n\r\n    return teams.map(teamName => {\r\n        const matchesPlayed = matches.filter(match => match.firstTeam === teamName || match.secondTeam === teamName);\r\n\r\n        const wonMatches = matches.map(match => matchSummary(match)).filter(summary => summary.winner === teamName);\r\n        const lostMatches = matches.map(match => matchSummary(match)).filter(summary => summary.looser === teamName);\r\n\r\n        const summary = setsSummary(teamName, matchesPlayed);\r\n\r\n        return {\r\n            team: teamName,\r\n            matchesPlayed: matchesPlayed.length,\r\n            matchesWon: wonMatches.length,\r\n            matchesLost: lostMatches.length,\r\n            setsWon: summary.setsWon,\r\n            setsLost: summary.setsLost,\r\n            setsRatio: summary.setsRatio,\r\n            pointsWon: null,\r\n            pointsLost: null,\r\n            pointsRatio: null\r\n        }\r\n\r\n    });\r\n\r\n}","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\nimport {Row} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport {matchSummary} from \"../helpers/matches\";\r\n\r\nclass MatchesDetails extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {matches} = this.props;\r\n\r\n        return matches.map(match =>\r\n            <ResultRow\r\n                key={match.firstTeam + match.secondTeam}\r\n                firstTeam={match.firstTeam}\r\n                secondTeam={match.secondTeam}\r\n                match={match}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction ResultRow({firstTeam, secondTeam, match}) {\r\n\r\n    const summary = matchSummary(match);\r\n\r\n    return <Row>\r\n        <Col md={6}>\r\n            <div className={'text-center'}>{firstTeam} vs {secondTeam}</div>\r\n        </Col>\r\n        <Col md={1}>\r\n            <div className={'text-center'}><b>{summary.firstTeamSetsWon} : {summary.secondTeamSetsWon}</b></div>\r\n        </Col>\r\n        <Col md={5}>\r\n            <div className={'text-center'}>{setDetails(summary.sets)}</div>\r\n        </Col>\r\n    </Row>\r\n\r\n}\r\n\r\nfunction setDetails(sets) {\r\n\r\n    if (!sets || sets.length === 0) {\r\n        return;\r\n    }\r\n\r\n    const setSummary = sets.map(set => set['first-team'] + ':' + set['second-team']).join(', ');\r\n    return '(' + setSummary + ')';\r\n}\r\n\r\nMatchesDetails.propTypes = {\r\n\r\n    matches: PropTypes.array\r\n\r\n};\r\n\r\nMatchesDetails.defaultProps = {\r\n\r\n    matches: []\r\n\r\n};\r\n\r\nexport default MatchesDetails;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\nimport {AgGridReact} from \"ag-grid-react\";\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport {groupSummary} from \"../helpers/matches\";\r\n\r\nconst gridOptions = {\r\n    suppressDragLeaveHidesColumns: true,\r\n    suppressMovableColumns: true,\r\n    enableSorting: true,\r\n    suppressLoadingOverlay: true,\r\n    suppressNoRowsOverlay: true,\r\n    columnDefs: [\r\n        {headerName: \"Drużyna\", field: \"team\", width: 600, sortable: true},\r\n        {\r\n            groupId: 1,\r\n            headerName: \"Mecze\",\r\n            marryChildren: true,\r\n            sortable: true,\r\n            children: [\r\n                {headerName: 'Rozegr.', field: \"matchesPlayed\"},\r\n                {headerName: 'Wygr.', field: \"matchesWon\"},\r\n                {headerName: 'Przegr.', field: \"matchesLost\"}\r\n            ]\r\n        },\r\n        {\r\n            groupId: 2,\r\n            headerName: \"Sety\",\r\n            suppressMovable: true,\r\n            marryChildren: true,\r\n            sortable: true,\r\n            children: [\r\n                {headerName: 'Wygr.', field: \"setsWon\"},\r\n                {headerName: 'Przegr.', field: \"setsLost\"},\r\n                {headerName: 'Stosunek', field: \"setsRatio\"}\r\n            ]\r\n        },\r\n        {\r\n            groupId: 3,\r\n            headerName: \"Punkty\",\r\n            suppressMovable: true,\r\n            lockPosition: true,\r\n            sortable: true,\r\n            children: [\r\n                {headerName: 'Wygr.', field: \"pointsWon\"},\r\n                {headerName: 'Przegr.', field: \"pointsLost\"},\r\n                {headerName: 'Stosunek', field: \"pointsRatio\"}\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nconst exampleData = {\r\n\r\n    matches: [\r\n        {\r\n            'firstTeam': 'A',\r\n            'secondTeam': 'B',\r\n            'sets': {\r\n                1: {\r\n                    'first-team': 10,\r\n                    'second-team': 1\r\n                },\r\n                2: {\r\n                    'first-team': 22,\r\n                    'second-team': 3\r\n                },\r\n                3: {\r\n                    'first-team': 32,\r\n                    'second-team': 21\r\n                },\r\n                4: {\r\n                    'first-team': 0,\r\n                    'second-team': 21\r\n                }\r\n            }\r\n        },\r\n        {\r\n            'firstTeam': 'B',\r\n            'secondTeam': 'C',\r\n            'sets': {\r\n                1: {\r\n                    'first-team': 12,\r\n                    'second-team': 21\r\n                },\r\n                2: {\r\n                    'first-team': 2,\r\n                    'second-team': 21\r\n                },\r\n                3: {\r\n                    'first-team': 12,\r\n                    'second-team': 21\r\n                }\r\n            }\r\n        },\r\n        {\r\n            'firstTeam': 'A',\r\n            'secondTeam': 'C',\r\n            'sets': {\r\n                1: {\r\n                    'first-team': 30,\r\n                    'second-team': 21\r\n                },\r\n                2: {\r\n                    'first-team': 30,\r\n                    'second-team': 21\r\n                },\r\n                3: {\r\n                    'first-team': 50,\r\n                    'second-team': 21\r\n                }\r\n            }\r\n        },\r\n        {\r\n            'firstTeam': 'D',\r\n            'secondTeam': 'C',\r\n            'sets': {\r\n                1: {\r\n                    'first-team': 30,\r\n                    'second-team': 21\r\n                },\r\n                2: {\r\n                    'first-team': 30,\r\n                    'second-team': 21\r\n                },\r\n                3: {\r\n                    'first-team': 50,\r\n                    'second-team': 21\r\n                },\r\n                4: {\r\n                    'first-team': 50,\r\n                    'second-team': 21\r\n                },\r\n                5: {\r\n                    'first-team': 50,\r\n                    'second-team': 21\r\n                }\r\n            }\r\n        },\r\n        {\r\n            'firstTeam': 'E',\r\n            'secondTeam': 'A',\r\n            'sets': {\r\n                1: {\r\n                    'first-team': 30,\r\n                    'second-team': 50\r\n                },\r\n                2: {\r\n                    'first-team': 30,\r\n                    'second-team': 60\r\n                },\r\n                3: {\r\n                    'first-team': 50,\r\n                    'second-team': 100\r\n                },\r\n                4: {\r\n                    'first-team': 50,\r\n                    'second-team': 200\r\n                },\r\n                5: {\r\n                    'first-team': 50,\r\n                    'second-team': 21\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    teams:\r\n        ['A', 'B', 'C', 'D', 'E', 'F']\r\n\r\n    // A p:3 w:3 l:0\r\n    // B p:2 w:0 l:2\r\n    // C p:3 w:1 l:2\r\n    // D p:1 w:1 l:0\r\n    // E p:0 w:0 l:1\r\n    // F p:0 w:0 l:0\r\n\r\n};\r\n\r\n\r\nclass GroupSummaryTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onGridReady = this.onGridReady.bind(this);\r\n    }\r\n\r\n    onGridReady = (params) => {\r\n        params.api.sizeColumnsToFit();\r\n        params.api.onSortChanged(this.aaa)\r\n    };\r\n\r\n    render() {\r\n\r\n        const {matches, teams} = this.props;\r\n\r\n        const summary = groupSummary(matches, teams);\r\n\r\n        return <div className=\"ag-theme-balham\">\r\n            <div>\r\n                <AgGridReact onGridReady={this.onGridReady}\r\n                             gridOptions={gridOptions}\r\n                             rowData={summary}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nGroupSummaryTable.propTypes = {\r\n\r\n    teams: PropTypes.array,\r\n    matches: PropTypes.array\r\n\r\n};\r\n\r\nexport default GroupSummaryTable;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport Collapse, {Panel} from 'rc-collapse';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport EditMatches from \"./AddMatch\";\r\nimport Matches from \"./MatchesDetails\";\r\nimport GroupSummaryTable from \"./GroupSummaryTable\";\r\n\r\n// TODO sortable by matches won, ratio,\r\n// TODO populate with data\r\n// TODO open and autosize to content\r\n// TODO extract table to another component\r\n// TODO no rows to show appears on table headers\r\n// TODO on group change -> make table full width!\r\n\r\nclass TourneyDetails extends React.Component {\r\n\r\n    state = {\r\n        accordion: true,\r\n        activeKey: ['0']\r\n    };\r\n\r\n    onChange = (activeKey) => {\r\n        this.setState({\r\n            activeKey,\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const {group} = this.props;\r\n\r\n        const activeKey = this.state.activeKey;\r\n\r\n        return <Collapse\r\n            accordion={false}\r\n            onChange={this.onChange}\r\n            activeKey={activeKey}\r\n        >\r\n            <Panel header='Tabela'>\r\n                <GroupSummaryTable matches={group.matches}\r\n                                   teams={group.teams}\r\n                />\r\n            </Panel>\r\n            <Panel header='Mecze'>\r\n                <Matches matches={group.matches}/>\r\n            </Panel>\r\n            <Panel header='Wprowadź mecz'>\r\n                <div>\r\n                    <EditMatches\r\n                        group={this.props.group}\r\n                        onMatchAdded={(firstTeam, secondTeam, sets) => this.props.onMatchAdded(group.groupLetter, firstTeam, secondTeam, sets)}\r\n                    />\r\n                </div>\r\n            </Panel>\r\n        </Collapse>\r\n    }\r\n}\r\n\r\nTourneyDetails.propTypes = {\r\n\r\n    group: PropTypes.object.isRequired,\r\n    onMatchAdded: PropTypes.func\r\n\r\n};\r\n\r\nexport default TourneyDetails;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport TourneyDetails from \"./TourneyDetails\";\r\n\r\n// TODO save tourney button here\r\n\r\nclass TourneyState extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {groupChosen, tourneyName, group, groups} = this.props;\r\n\r\n        return <div>\r\n            <Row>\r\n                <Col md={{span: 8}}>\r\n                    <h3 className='pb-3'>Turniej \"{tourneyName}\"</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Navbar bg=\"primary\"\r\n                            variant=\"dark\"\r\n                            onSelect={groupChosen}\r\n                    >\r\n                        <Nav className=\"mr-auto\">\r\n                            <GroupItems activeGroup={group.groupLetter}\r\n                                        groups={groups}\r\n                            />\r\n                        </Nav>\r\n                        <Form inline>\r\n                            <Button variant=\"outline-light\">Zapisz turniej</Button>\r\n                        </Form>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12} className='mb-3'>\r\n                    <TourneyDetails group={group} onMatchAdded={this.props.onMatchAdded}/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction GroupItems({activeGroup, groups}) {\r\n    return groups.map(it =>\r\n        <Nav.Link eventKey={it.groupLetter}\r\n                  key={it.groupLetter}\r\n                  active={it.groupLetter === activeGroup}\r\n        >\r\n            Grupa {it.groupLetter}\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nTourneyState.propTypes = {\r\n    groups: PropTypes.array.isRequired,\r\n    group: PropTypes.object,\r\n    tourneyName: PropTypes.string,\r\n    groupChosen: PropTypes.func,\r\n    onMatchAdded: PropTypes.func\r\n};\r\n\r\nTourneyState.defaultProps = {\r\n    groups: [],\r\n    tourneyName: \"Nazwa turnieju\",\r\n    group: {},\r\n    groupChosen: () => {\r\n    }\r\n};\r\n\r\nexport default TourneyState;","import React from 'react';\n\nimport './App.css'\n\nimport {Redirect, Route, Router, Switch} from 'react-router-dom'\nimport history from './helpers/history';\n\nimport LoadTourney from \"./components/LoadTourney\";\nimport SelectionPage from \"./components/SelectionPage\";\n\nimport SingleColumnLayout from \"./hoc/SingleColumnLayout\";\nimport NewTourney from \"./components/NewTourney\";\nimport Groups from \"./components/Groups\";\nimport TourneyState from \"./components/TourneyState\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.addGroup = this.addGroup.bind(this);\n        this.pickTourneyName = this.pickTourneyName.bind(this);\n        this.addTeam = this.addTeam.bind(this);\n        this.approveGroups = this.approveGroups.bind(this);\n        this.groupChosen = this.groupChosen.bind(this);\n        this.onMatchAdded = this.onMatchAdded.bind(this);\n\n        this.state = {\n            groups: [\n                {groupLetter: \"A\", teams: [], matches: []}\n            ],\n            currentlyDisplayedGroup: \"A\"\n        };\n    }\n\n    onMatchAdded(groupLetter, firstTeam, secondTeam, sets) {\n\n        // TODO refactor it to a match object\n        // TODO think if defined objects help with immutable operations\n\n        const {groups} = this.state;\n\n        const groupIndex = groups.findIndex(group => group.groupLetter === groupLetter);\n        const group = groups[groupIndex];\n\n        const newMatches = group.matches.slice();\n        newMatches.push({firstTeam: firstTeam, secondTeam: secondTeam, sets: sets});\n\n        const newGroups = [\n            ...groups.slice(0, groupIndex),\n            {...group, matches: newMatches},\n            ...groups.slice(groupIndex + 1,)\n        ];\n\n        this.setState({groups: newGroups});\n    }\n\n    groupChosen(groupLetter) {\n        this.setState({currentlyDisplayedGroup: groupLetter})\n    }\n\n    addGroup() {\n        let lastGroup = this.state.groups.map(it => it.groupLetter).slice().pop();\n        let newGroupLetter = String.fromCharCode(lastGroup.charCodeAt(0) + 1);\n        const groups = [...this.state.groups, {groupLetter: newGroupLetter, teams: [], matches: []}];\n        this.setState({groups: groups})\n    }\n\n    addTeam(groupName, teamName) {\n        const group = this.state.groups.find(byName(groupName));\n\n        const newTeams = group.teams.slice();\n        newTeams.push(teamName);\n        const groupWithAddedTeam = {...group, teams: newTeams};\n\n        const newGroups = this.state.groups.slice();\n\n        const toReplace = newGroups.findIndex(byName(groupName));\n\n        newGroups[toReplace] = groupWithAddedTeam;\n\n        this.setState({groups: newGroups})\n    }\n\n    approveGroups(history) {\n        return () => {\n            history.push('/tourney/state')\n        }\n    }\n\n    pickTourneyName(toruneyName) {\n        this.setState({tourneyName: toruneyName});\n    }\n\n    createTourneyAndRedirect(history) {\n        return (tourneyName) => {\n            this.pickTourneyName(tourneyName);\n            history.push('/tourney/groups')\n        }\n    }\n\n    render() {\n\n        return <Router history={history}>\n            <div>\n                <Switch>\n                    <Route path='/tourney/new'\n                           render={props =>\n                               <LayoutNewTourney createNewTourney={this.createTourneyAndRedirect(history)}/>\n                           }\n                    />\n                    <Route path='/tourney/load' component={SingleColumnLayout({Content: LoadTourney})}/>\n                    <Route path='/tourney/groups'\n                           render={props =>\n                               <Groups addGroup={this.addGroup}\n                                       tourneyName={this.state.tourneyName}\n                                       groups={this.state.groups}\n                                       teamAdded={this.addTeam}\n                                       approveGroups={this.approveGroups(history)}\n                               />\n                           }\n                    />\n                    <Route path='/tourney/state' render={props =>\n                        <LayoutTourneyState\n                            groups={this.state.groups.map(it => Object.assign({}, {groupLetter: it.groupLetter}))}\n                            group={this.state.groups.find(it => it.groupLetter === this.state.currentlyDisplayedGroup)}\n                            tourneyName={this.state.tourneyName}\n                            groupChosen={this.groupChosen}\n                            onMatchAdded={this.onMatchAdded}\n                        />}\n                    />\n                    <Route path='/' component={SingleColumnLayout({Content: SelectionPage})}/>\n                    <Redirect from='*' to='/'/>\n                </Switch>\n            </div>\n        </Router>\n    }\n}\n\nfunction byName(teamName) {\n    return (it) => it.groupLetter === teamName;\n}\n\nconst LayoutNewTourney = SingleColumnLayout({Content: NewTourney});\nconst LayoutTourneyState = SingleColumnLayout({Content: TourneyState}, 12, 0);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}