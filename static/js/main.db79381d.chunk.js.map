{"version":3,"sources":["helpers/history.js","components/LoadTourney.jsx","components/SelectionPage.jsx","components/Logo.jsx","hoc/SingleColumnLayout.jsx","components/NewTourney.jsx","components/Group.jsx","components/Groups.jsx","components/TeamDropdown.jsx","components/Set.jsx","components/AddMatch.jsx","helpers/matches.js","components/MatchesDetails.jsx","components/GroupSummaryTable.jsx","components/TourneyDetails.jsx","components/TourneyState.jsx","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","FieldGroup","_ref","id","label","props","Object","objectWithoutProperties","react","Form","Group","controlId","Label","FormControl","LoadTourney","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fileChange","bind","assertThisInitialized","onLoadTourney","state","fileName","e","setState","target","value","file","files","preventDefault","reader","FileReader","loadTourney","onload","event","result","readAsText","className","onSubmit","type","onChange","Button","React","SelectionPage","ButtonGroup","lib","to","variant","pageHeader","paddingBottom","margin","borderBottom","Logo","style","SingleColumnLayout","inputs","componentSpan","arguments","length","undefined","componentOffset","Content","_React$Component","Component","apply","inherits","createClass","key","react_default","a","createElement","Container","Row","Col","md","span","offset","NewToruney","context","handleChange","handleTourneyCreation","_this2","trim","createNewTourney","Control","placeholder","addTeam","newTeamNameChange","teamAdded","newTeamOnEnter","newTeamName","teamNameWarning","teams","includes","groupLetter","onKeyPress","onClick","fa","_this$props","FormGroup","map","name","readOnly","marginBottom","teamItem","groupItems","defaultProps","groups","Groups","approveGroups","groupAdded","tourneyName","amountOfGroups","group","sm","components_Group","fourGroups","addGroup","block","TeamDropdown","teamSelected","onTeamSelected","allTeams","Dropdown","onSelect","Toggle","Menu","teamName","Item","eventKey","team","MissingPoints","Feedback","Set","onSetChange","isDraw","firstTeamResult","secondTeamResult","setNumber","as","zeroOrNumberOrEmpty","allowEmptyOrNumber","creationAttempted","callback","test","parseInt","AddMatch","teamsSelection","sets","firstTeamSelected","secondTeamSelected","teamSelectionFor","sameItemSelected","onMatchAdded","onSetChanged","selectionId","set","assign","objectSpread","defineProperty","newSets","_this3","alert","setsValidation","keys","setResults","firstResult","secondResult","validationResults","firstResultsMissing","hasValidationResults","secondResultMissing","validateSet","filter","it","validation","firstTeam","selectedTeam","secondTeam","selection","find","_this4","findIndex","newSelection","newSelections","push","index","_this5","components_TeamDropdown","Array","from","val","components_Set","matchSummary","match","setsExcludingDraws","winningSets","firstTeamTotalPoints","reduce","b","secondTeamTotalPoints","firstTeamSetsWon","secondTeamSetsWon","firstTeamName","secondTeamName","firstTeamSetsLost","secondTeamSetsLost","winner","looser","draw","safeRatio","divisor","dividend","groupSummary","matches","matchesPlayed","wonMatches","summary","lostMatches","eachMatchSummary","sumOfSets","sum","points","setsWon","pointsWon","pointsLost","amountOfSetsWon","setsLost","setsRatio","pointsRatio","setsSummary","matchesWon","matchesLost","MatchesDetails","ResultRow","join","setDetails","gridOptions","suppressDragLeaveHidesColumns","suppressMovableColumns","enableSorting","suppressMenu","suppressLoadingOverlay","suppressNoRowsOverlay","icons","sortAscending","sortDescending","sortUnSort","columnDefs","headerName","field","width","unSortIcon","groupId","marryChildren","children","suppressMovable","valueFormatter","twoDigits","lockPosition","parseFloat","toFixed","GroupSummaryTable","onGridReady","params","api","setSortModel","colId","sort","sizeColumnsToFit","main","rowData","TourneyDetails","accordion","activeKey","rc_collapse_es","header","components_GroupSummaryTable","components_MatchesDetails","components_AddMatch","TourneyState","saveTourneyState","groupChosen","Navbar","bg","Nav","GroupItems","activeGroup","inline","components_TourneyDetails","Link","active","App","pickTourneyName","loadTourneyState","redirectToGroups","proceedToState","currentlyDisplayedGroup","history","JSON","parse","blob","Blob","stringify","concat","saveAs","groupIndex","newMatches","slice","uuidv4","newGroups","toConsumableArray","lastGroup","pop","newGroupLetter","String","fromCharCode","charCodeAt","groupName","byName","newTeams","groupWithAddedTeam","toReplace","toruneyName","Router","Switch","Route","path","render","LayoutNewTourney","createTourneyAndRedirect","LayoutLoadTourney","components_Groups","LayoutTourneyState","component","Redirect","NewTourney","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db79381d.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Form, FormControl} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\n\r\nclass LoadTourney extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.fileChange = this.fileChange.bind(this);\r\n        this.onLoadTourney = this.onLoadTourney.bind(this);\r\n\r\n        this.state = {fileName: ''}\r\n    }\r\n\r\n    fileChange(e) {\r\n        this.setState({fileName: e.target.value, file: e.target.files[0]});\r\n    }\r\n\r\n    onLoadTourney(e) {\r\n        e.preventDefault();\r\n\r\n        if(this.state.file === '') {\r\n            return;\r\n        }\r\n\r\n        if (this.state.file) {\r\n            const file = this.state.file;\r\n            const reader = new FileReader();\r\n\r\n            const loadTourney = this.props.loadTourney;\r\n\r\n            reader.onload = function (event) {\r\n                loadTourney(event.target.result);\r\n            };\r\n\r\n            reader.readAsText(file);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Form className={'border border-primary p-3'}\r\n                     onSubmit={this.onLoadTourney}>\r\n            <h2 className='border-bottom mb-3'>Wczytaj istniejący turniej</h2>\r\n            <Form.Group controlId=\"formBasicText\">\r\n                <FieldGroup\r\n                    type=\"file\"\r\n                    label=\"Wybierz plik z zapisanym turniejem\"\r\n                    value={this.state.fileName}\r\n                    onChange={this.fileChange}\r\n                />\r\n\r\n            </Form.Group>\r\n            <Button type=\"submit\">Wczytaj</Button>\r\n        </Form>\r\n    }\r\n}\r\n\r\nfunction FieldGroup({id, label, ...props}) {\r\n    return (\r\n        <Form.Group controlId={id}>\r\n            <Form.Label>{label}</Form.Label>\r\n            <FormControl {...props} />\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default LoadTourney;\r\n\r\nLoadTourney.propTypes = {\r\n    loadTourney: PropTypes.func\r\n};","import {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport * as React from \"react\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n\r\n\r\nexport default () => <ButtonGroup className='d-flex'>\r\n    <LinkContainer to='/tourney/new'>\r\n        <Button variant=\"primary\">\r\n            Swtórz nowy turniej\r\n        </Button>\r\n    </LinkContainer>\r\n    <LinkContainer to='/tourney/load'>\r\n        <Button variant=\"primary\">\r\n            Wczytaj turniej\r\n        </Button>\r\n    </LinkContainer>\r\n</ButtonGroup>","import * as React from \"react\";\r\n\r\nconst pageHeader = {\r\n    paddingBottom: '9px',\r\n    'margin': '40px 0 20px',\r\n    borderBottom: '1px solid #eee'\r\n}\r\n\r\nexport default () => <div style={pageHeader}><h1>Volleyball Tournament App+</h1></div>","import React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Logo from \"../components/Logo\";\r\n\r\nfunction SingleColumnLayout(inputs, componentSpan = 8, componentOffset = 2) {\r\n\r\n    const {Content} = inputs;\r\n\r\n    class Component extends React.Component {\r\n\r\n        render() {\r\n            return <Container>\r\n                <Row>\r\n                    <Col md={{span: 8, offset: 2}}>\r\n                        <Logo/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{span: componentSpan, offset: componentOffset}}>\r\n                        <Content {...this.props}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        }\r\n    }\r\n\r\n    return Component;\r\n\r\n}\r\n\r\nexport default SingleColumnLayout;","import PropTypes from 'prop-types';\r\n\r\nimport * as React from \"react\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\nclass NewToruney extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTourneyCreation = this.handleTourneyCreation.bind(this);\r\n\r\n        this.state = {\r\n            value: ''\r\n        };\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    handleTourneyCreation() {\r\n        return e => {\r\n            e.preventDefault();\r\n            if (!this.state.value || !this.state.value.trim()) {\r\n                //TODO make it common util for checking empty string and preventing form action (same as for group addition)\r\n            } else {\r\n                this.props.createNewTourney(this.state.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Form className={'border border-primary p-3'}\r\n                     onSubmit={this.handleTourneyCreation()}>\r\n            <h2>Stwórz nowy turniej</h2>\r\n            <Form.Group controlId='formBasicText'>\r\n                <Form.Label>Podaj nazwę turniej</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={this.state.value}\r\n                    placeholder=\"Małopolski turniej siatkówki amatorskiej \"\r\n                    onChange={this.handleChange}\r\n                />\r\n            </Form.Group>\r\n            <div>\r\n                <Button type=\"submit\">Stwórz</Button>\r\n            </div>\r\n        </Form>\r\n    }\r\n}\r\n\r\nNewToruney.propTypes = {\r\n    createNewTourney: PropTypes.func\r\n};\r\n\r\nexport default NewToruney;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Button, Form, FormControl, FormGroup} from \"react-bootstrap\";\r\n\r\nimport '../css/button.css';\r\nimport {FaPlus} from \"react-icons/fa/index\";\r\n\r\nclass Group extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addTeam = this.addTeam.bind(this);\r\n        this.newTeamNameChange = this.newTeamNameChange.bind(this);\r\n        this.teamAdded = this.teamAdded.bind(this);\r\n        this.newTeamOnEnter = this.newTeamOnEnter.bind(this);\r\n\r\n        this.state = {newTeamName: '', teamNameWarning: ''}\r\n    }\r\n\r\n    newTeamNameChange(e) {\r\n        this.setState({newTeamName: e.target.value});\r\n    }\r\n\r\n    teamAdded() {\r\n        const newTeamName = this.state.newTeamName;\r\n        if(!newTeamName || newTeamName.trim().length === 0) {\r\n            // this.setState({teamNameWarning: 'Nazwa drużyny nie może być pusta!'})\r\n            // TODO add sensible message\r\n            // TODO only unique team names!\r\n        } else if (this.props.teams.includes(newTeamName)){\r\n            // this.setState({teamNameWarning: 'Istnieje już drużyna o takiej nazwie!'})\r\n        } else {\r\n            this.props.teamAdded(this.props.groupLetter, this.state.newTeamName);\r\n            this.setState({newTeamName: ''})\r\n        }\r\n    }\r\n\r\n    newTeamOnEnter(e) {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.teamAdded()\r\n        }\r\n    }\r\n\r\n    addTeam() {\r\n        return <div>\r\n            <FormControl value={this.state.newTeamName}\r\n                         className='mb-2'\r\n                         key='newItem'\r\n                         onChange={this.newTeamNameChange}\r\n                         onKeyPress={this.newTeamOnEnter}\r\n            />\r\n            <Button onClick={this.teamAdded} >\r\n                <FaPlus  />\r\n                <span>Dodaj drużynę</span>\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n    render() {\r\n        const {groupLetter, teams, teamAdded} = this.props;\r\n\r\n        return <div>\r\n            <h2>{groupLetter}</h2>\r\n            <Form>\r\n                <FormGroup>\r\n                    {groupItems(teams, groupLetter)}\r\n                    {teams && teams.length < 8 && this.addTeam(groupLetter, teamAdded)}\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nfunction groupItems(teams) {\r\n    return teams.map(name => teamItem(name));\r\n}\r\n\r\nfunction teamItem(name) {\r\n    return <FormControl readOnly style={{marginBottom: '10px'}} key={name} value={name}/>\r\n\r\n}\r\n\r\nGroup.propTypes = {\r\n    groupLetter: PropTypes.string,\r\n    teams: PropTypes.array,\r\n    teamAdded: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    groupLetter: 'A',\r\n    groups: [],\r\n    teamAdded: () => null\r\n};\r\n\r\nexport default Group;","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Logo from \"./Logo\";\r\nimport Group from \"./Group\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport {FaPlus} from \"react-icons/fa/index\";\r\n\r\n// TODO extract this css (is copied from other file)\r\n// TODO bigger space between plus and text\r\n// TODO try to better align 'dodaj grupę' button\r\n// TODO check that there is at least one group with at least two teams\r\n\r\nfunction fourGroups(groups, teamAdded) {\r\n    return groups.map(group =>\r\n        <Col key={group.groupLetter} sm={3}>\r\n            <Group\r\n                groupLetter={group.groupLetter}\r\n                teams={group.teams}\r\n                teamAdded={teamAdded}/>\r\n        </Col>);\r\n}\r\n\r\nclass Groups extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.approveGroups = this.approveGroups.bind(this);\r\n    }\r\n\r\n    approveGroups() {\r\n        this.props.approveGroups();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {groups, teamAdded, tourneyName} = this.props;\r\n\r\n        const amountOfGroups = groups.length;\r\n        return <Container>\r\n            <Row>\r\n                <Col md={{span: 8, offset: 2}}>\r\n                    <Logo/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={{span: 8}}>\r\n                    <h3 className='pb-3'>Turniej \"{tourneyName}\"</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {fourGroups(groups, teamAdded)}\r\n                {(amountOfGroups < 8) && addGroup(this.props.addGroup)}\r\n            </Row>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <Button block onClick={this.approveGroups}>Zatwierdź grupy</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    }\r\n\r\n}\r\n\r\nfunction addGroup(groupAdded) {\r\n    return <Col sm={3}>\r\n        <Button className='mb-3' onClick={groupAdded}>\r\n            <FaPlus/>\r\n            <span>Dodaj grupę</span>\r\n        </Button>\r\n    </Col>\r\n\r\n}\r\n\r\nGroups.propTypes = {\r\n    groups: PropTypes.array,\r\n    addGroup: PropTypes.func,\r\n    tourneyName: PropTypes.string,\r\n    approveGroups: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    tourneyName: 'Turniej',\r\n    groups: [],\r\n    addGroup: () => null,\r\n    approveGroups: () => null,\r\n};\r\n\r\nexport default Groups;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport Dropdown from \"react-bootstrap/es/Dropdown\";\r\n\r\nclass TeamDropdown extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {teamSelected, onTeamSelected, allTeams} = this.props;\r\n\r\n        return <Dropdown\r\n            onSelect={onTeamSelected}>\r\n            <Dropdown.Toggle\r\n                className='w-100'>\r\n                {teamSelected ? teamSelected : 'Wybierz drużynę'}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu\r\n                className='w-100'>\r\n                {allTeams.map(teamName => team(teamName))}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    }\r\n\r\n}\r\n\r\nTeamDropdown.propTypes = {\r\n    teamSelected : PropTypes.string,\r\n    onTeamSelected : PropTypes.func,\r\n    allTeams : PropTypes.array\r\n};\r\n\r\nTeamDropdown.defaultProps = {\r\n    teamSelected : null,\r\n    onTeamSelected : () => {},\r\n    allTeams: []\r\n}\r\n\r\nfunction team(teamName) {\r\n    return <Dropdown.Item key={teamName} eventKey={teamName}>{teamName}</Dropdown.Item>\r\n}\r\n\r\nexport default TeamDropdown;","import PropTypes from 'prop-types';\r\n\r\nimport {Col} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\nimport React from \"react\";\r\n\r\nfunction MissingPoints() {\r\n    return <Form.Control.Feedback type=\"invalid\">\r\n        Wprowadź liczbę punktów\r\n    </Form.Control.Feedback>;\r\n}\r\n\r\nfunction CannotHaveDraw() {\r\n    return <Form.Control.Feedback type=\"invalid\">\r\n        Remis niedozwolony\r\n    </Form.Control.Feedback>;\r\n}\r\n\r\nclass Set extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onSetChange = this.onSetChange.bind(this);\r\n    }\r\n\r\n    onSetChange() {\r\n        this.setState(\r\n            {\r\n                isDraw: this.props.firstTeamResult === this.props.secondTeamResult\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const {setNumber, firstTeamResult, secondTeamResult, onSetChange} = this.props;\r\n\r\n        return <div>\r\n            <Form>\r\n                <Form.Row key={setNumber} className='mb-1'>\r\n                    <Form.Group as={Col} md={1}>\r\n                        <h4 key={setNumber}>{setNumber} set</h4>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md={{span: 2, offset: 1}}>\r\n                        <Form.Control as='input'\r\n                                      type='text'\r\n                                      value={zeroOrNumberOrEmpty(firstTeamResult)}\r\n                                      onChange={e => allowEmptyOrNumber(e, onSetChange(setNumber, 'first-team'))}\r\n                        />\r\n                        {this.props.creationAttempted && !firstTeamResult && <MissingPoints/>}\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}\r\n                                md={{span: 2, offset: 1}}>\r\n                        <h5 className='text-center'>:</h5>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md={{span: 2, offset: 1}}>\r\n                        <Form.Control as='input' type='text' value={zeroOrNumberOrEmpty(secondTeamResult)}\r\n                                      onChange={e => allowEmptyOrNumber(e, onSetChange(setNumber, 'second-team'))}/>\r\n                        {this.props.creationAttempted && !secondTeamResult && <MissingPoints/>}\r\n                    </Form.Group>\r\n                </Form.Row>\r\n            </Form>\r\n        </div>\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction allowEmptyOrNumber(e, callback) {\r\n    const number = /^[0-9\\b]+$/;\r\n\r\n    const value = e.target.value;\r\n    e.target.value === '' ? callback(null) : number.test(value) && callback(parseInt(value));\r\n}\r\n\r\nfunction zeroOrNumberOrEmpty(firstTeamResult) {\r\n    return firstTeamResult === 0 ? firstTeamResult : firstTeamResult || '';\r\n}\r\n\r\n\r\nSet.propTypes = {\r\n\r\n    creationAttempted : PropTypes.bool,\r\n    firstTeam: PropTypes.string,\r\n    secondTeam: PropTypes.string,\r\n    setNumber: PropTypes.number,\r\n    firstTeamResult: PropTypes.string,\r\n    secondTeamResult: PropTypes.string,\r\n    onSetChange: PropTypes.func\r\n\r\n};\r\n\r\nSet.defaultProps = {\r\n\r\n    firstTeamResult : '',\r\n    secondTeamResult : ''\r\n\r\n};\r\n\r\nexport default Set;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport {Col} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport TeamDropdown from \"./TeamDropdown\";\r\nimport Set from \"./Set\";\r\n\r\nclass AddMatch extends React.Component {\r\n\r\n    // TODO - add version number\r\n    // TODO - empty groups are not displayed and considered\r\n    // TODO - remove duplication for dropdowns\r\n    // TODO - shouldn't be able to select same team\r\n    // TODO refactor and numbers only\r\n    // TODO handle switching on 'same-selection'\r\n    // TODO validate that inputs are numbers!\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {teamsSelection: [], sets: {}};\r\n\r\n        this.firstTeamSelected = this.firstTeamSelected.bind(this);\r\n        this.secondTeamSelected = this.secondTeamSelected.bind(this);\r\n        this.onTeamSelected = this.onTeamSelected.bind(this);\r\n        this.teamSelectionFor = this.teamSelectionFor.bind(this);\r\n        this.sameItemSelected = this.sameItemSelected.bind(this);\r\n        this.onMatchAdded = this.onMatchAdded.bind(this);\r\n        this.onSetChanged = this.onSetChanged.bind(this);\r\n    }\r\n\r\n    onSetChanged(setNumber, selectionId) {\r\n        return value => {\r\n            const set = Object.assign({}, {\r\n                ...this.state.sets[setNumber],\r\n                [selectionId]: value\r\n            });\r\n            const newSets = Object.assign({}, {...this.state.sets});\r\n            newSets[setNumber] = set;\r\n            this.setState({sets: newSets});\r\n        }\r\n    }\r\n\r\n    onMatchAdded() {\r\n        if (this.state.teamsSelection.length < 2) {\r\n            alert('Proszę wybrać obie drużyny');\r\n            // consider disabling button if two teams are not chosen\r\n            // todo - check if at least on set populated\r\n            // todo - check if we don't have unfilled sets\r\n            // todo - check if we have draws\r\n            return;\r\n        }\r\n\r\n        const setsValidation = Object.keys(this.state.sets).map(key => validateSet(key, this.state.sets[key]));\r\n\r\n        if (setsValidation.filter(it => it.validation) > 0) {\r\n            this.setState({validationResults: setsValidation, creationAttempted: true});\r\n            return;\r\n        }\r\n\r\n        const firstTeam = this.state.teamsSelection[0].selectedTeam;\r\n        const secondTeam = this.state.teamsSelection[1].selectedTeam;\r\n\r\n        // TODO shouldn't be able to add match without any sets!\r\n        // TODO flush state from set - make selection - unselected\r\n        // TODO Make it possible to edit match or forbid to choose already chosen match\r\n        this.props.onMatchAdded(firstTeam, secondTeam, this.state.sets);\r\n        this.setState({sets: [], teamsSelection: [], creationAttempted: false})\r\n    }\r\n\r\n    teamSelectionFor(selectionId) {\r\n        const selection = this.state.teamsSelection.find(it => it.selectionId === selectionId);\r\n        if (!selection) {\r\n            return \"\";\r\n        } else {\r\n            return selection.selectedTeam;\r\n        }\r\n    }\r\n\r\n    onTeamSelected(selectionId) {\r\n        return selectedTeam => {\r\n            if (this.state.teamsSelection.findIndex(it => it.selectedTeam === selectedTeam) !== -1) {\r\n                return;\r\n            }\r\n            const newSelection = {selectionId: selectionId, selectedTeam: selectedTeam};\r\n\r\n            const newSelections = this.state.teamsSelection.filter(it => it.selectionId !== selectionId);\r\n            newSelections.push(newSelection);\r\n\r\n            this.setState({teamsSelection: newSelections});\r\n        }\r\n    }\r\n\r\n    sameItemSelected(index, selectedTeam) {\r\n        return this.state.teamsSelection[index].selectedTeam === selectedTeam;\r\n    }\r\n\r\n    firstTeamSelected(eventKey) {\r\n        this.setState({firstTeamSelected: eventKey});\r\n    }\r\n\r\n    secondTeamSelected(eventKey) {\r\n        this.setState({secondTeamSelected: eventKey});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {group} = this.props;\r\n\r\n        return <div>\r\n            <Row className={'mb-2'}>\r\n                <Col md={{span: 4, offset: 1}}>\r\n                    <TeamDropdown\r\n                        allTeams={group.teams}\r\n                        teamSelected={this.teamSelectionFor('first-team')}\r\n                        onTeamSelected={this.onTeamSelected('first-team')}\r\n                    />\r\n                </Col>\r\n                <Col md={2}>\r\n                    <h3 className='text-center'>vs</h3>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <TeamDropdown\r\n                        allTeams={group.teams}\r\n                        teamSelected={this.teamSelectionFor('second-team')}\r\n                        onTeamSelected={this.onTeamSelected('second-team')}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            {Array.from(new Array(5), (val, index) => index + 1).map(setNumber =>\r\n                <Set key={setNumber}\r\n                     setNumber={setNumber}\r\n                     firstTeam={'first-team'}\r\n                     secondTeam={'second-team'}\r\n                     creationAttempted={this.state.creationAttempted}\r\n                     firstTeamResult={this.state.sets[setNumber] ? this.state.sets[setNumber]['first-team'] : ''}\r\n                     secondTeamResult={this.state.sets[setNumber] ? this.state.sets[setNumber]['second-team'] : ''}\r\n                     onSetChange={this.onSetChanged}/>\r\n            )}\r\n            <Row className={'mt-3'}>\r\n                <Col>\r\n                    <Button\r\n                        onClick={this.onMatchAdded}\r\n                        className='float-right'\r\n                        type=\"submit\">Zatwierdź mecz\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nfunction validateSet(setNumber, setResults) {\r\n    const firstResult = setResults['first-team'];\r\n    const secondResult = setResults['second-team'];\r\n\r\n    const validationResults = {setNumber: setNumber};\r\n\r\n    if (firstResult === 0) {\r\n        validationResults.firstResultsMissing = true;\r\n        validationResults.hasValidationResults = true;\r\n    }\r\n\r\n    if (secondResult === 0) {\r\n        validationResults.secondResultMissing = true;\r\n        validationResults.hasValidationResults = true;\r\n    }\r\n\r\n    if (!firstResult && !secondResult) {\r\n        validationResults.hasValidationResults = false;\r\n        return validationResults;\r\n    }\r\n\r\n    if (firstResult === secondResult) {\r\n        validationResults.isDraw = true;\r\n        validationResults.hasValidationResults = true;\r\n    }\r\n\r\n    if (!firstResult) {\r\n        validationResults.firstResultsMissing = true;\r\n    }\r\n\r\n    if(!secondResult) {\r\n        validationResults.secondResultMissing = true;\r\n    }\r\n\r\n    return validationResults;\r\n\r\n}\r\n\r\nAddMatch.propTypes = {\r\n\r\n    group: PropTypes.object.isRequired\r\n\r\n};\r\n\r\nexport default AddMatch;","export function matchSummary(match) {\r\n\r\n    const sets = Object.keys(match.sets).map(key => match.sets[key]);\r\n\r\n    const setsExcludingDraws = sets.filter(set => set['first-team'] !== set['second-team']);\r\n    const winningSets = setsExcludingDraws.filter(set => set['first-team'] > set['second-team']);\r\n\r\n    const firstTeamTotalPoints = setsExcludingDraws.map(set => set['first-team']).reduce((a, b) => a + b, 0);\r\n    const secondTeamTotalPoints = setsExcludingDraws.map(set => set['second-team']).reduce((a, b) => a + b, 0);\r\n\r\n    const firstTeamSetsWon = winningSets.length;\r\n    const secondTeamSetsWon = setsExcludingDraws.length - firstTeamSetsWon;\r\n\r\n    return {\r\n        firstTeamTotalPoints: firstTeamTotalPoints,\r\n        secondTeamTotalPoints: secondTeamTotalPoints,\r\n        firstTeamName: match.firstTeam,\r\n        secondTeamName: match.secondTeam,\r\n        firstTeamSetsWon: firstTeamSetsWon,\r\n        secondTeamSetsWon: secondTeamSetsWon,\r\n        firstTeamSetsLost: secondTeamSetsWon,\r\n        secondTeamSetsLost: firstTeamSetsWon,\r\n        sets: sets,\r\n        winner: firstTeamSetsWon > secondTeamSetsWon ? match.firstTeam : match.secondTeam,\r\n        looser: firstTeamSetsWon < secondTeamSetsWon ? match.firstTeam : match.secondTeam,\r\n        draw : firstTeamSetsWon === secondTeamSetsWon\r\n    }\r\n\r\n}\r\n\r\nfunction safeRatio(divisor, dividend) {\r\n    return divisor === 0 ? null : (dividend) / (divisor);\r\n}\r\n\r\nfunction setsSummary(team, matches) {\r\n\r\n    const eachMatchSummary = matches.map(match => matchSummary(match));\r\n    const sumOfSets = eachMatchSummary.map(it => it.sets.length).reduce((sum, value) => sum + value, 0);\r\n\r\n    let wins = function () {\r\n        return eachMatchSummary.filter(match => match.winner === team).length;\r\n    };\r\n\r\n    let draws = function () {\r\n        return eachMatchSummary.filter(match => match.draw === true).length;\r\n    };\r\n\r\n    const points = (wins() * 2) + (draws() * 1);\r\n\r\n    const setsWon = eachMatchSummary.map(it => it.firstTeamName === team ? it.firstTeamSetsWon : it.secondTeamSetsWon);\r\n\r\n    const pointsWon = eachMatchSummary\r\n        .map(it => it.firstTeamName === team ? it.firstTeamTotalPoints : it.secondTeamTotalPoints)\r\n        .reduce((a, b) => a + b, 0);\r\n\r\n    const pointsLost = eachMatchSummary\r\n        .map(it => it.firstTeamName === team ? it.secondTeamTotalPoints : it.firstTeamTotalPoints)\r\n        .reduce((a, b) => a + b, 0);\r\n\r\n    const amountOfSetsWon = setsWon.reduce((a, b) => a + b, 0);\r\n\r\n    const setsLost = sumOfSets - amountOfSetsWon;\r\n\r\n    const setsRatio = safeRatio(setsLost, amountOfSetsWon);\r\n\r\n    return {\r\n        teamName: team,\r\n        points : points,\r\n        setsWon: amountOfSetsWon,\r\n        setsLost: setsLost,\r\n        setsRatio: setsRatio,\r\n        pointsWon: pointsWon,\r\n        pointsLost: pointsLost,\r\n        pointsRatio: safeRatio(pointsLost, pointsWon)\r\n    }\r\n\r\n}\r\n\r\nexport function groupSummary(matches, teams) {\r\n\r\n    return teams.map(teamName => {\r\n        const matchesPlayed = matches.filter(match => match.firstTeam === teamName || match.secondTeam === teamName);\r\n\r\n        const wonMatches = matches.map(match => matchSummary(match)).filter(summary => summary.winner === teamName);\r\n        const lostMatches = matches.map(match => matchSummary(match)).filter(summary => summary.looser === teamName);\r\n\r\n        const summary = setsSummary(teamName, matchesPlayed);\r\n\r\n        return {\r\n            team: teamName,\r\n            matchesPlayed: matchesPlayed.length,\r\n            matchesWon: wonMatches.length,\r\n            matchesLost: lostMatches.length,\r\n            points : summary.points,\r\n            setsWon: summary.setsWon,\r\n            setsLost: summary.setsLost,\r\n            setsRatio: summary.setsRatio,\r\n            pointsWon: summary.pointsWon,\r\n            pointsLost: summary.pointsLost,\r\n            pointsRatio: summary.pointsRatio\r\n        }\r\n\r\n    });\r\n\r\n}","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\nimport {Row} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport {matchSummary} from \"../helpers/matches\";\r\n\r\nclass MatchesDetails extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {matches} = this.props;\r\n\r\n        return matches.map(match =>\r\n            <ResultRow\r\n                key={match.id}\r\n                firstTeam={match.firstTeam}\r\n                secondTeam={match.secondTeam}\r\n                match={match}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction ResultRow({firstTeam, secondTeam, match}) {\r\n\r\n    const summary = matchSummary(match);\r\n\r\n    return <Row>\r\n        <Col md={6}>\r\n            <div className={'text-center'}>{firstTeam} vs {secondTeam}</div>\r\n        </Col>\r\n        <Col md={1}>\r\n            <div className={'text-center'}><b>{summary.firstTeamSetsWon} : {summary.secondTeamSetsWon}</b></div>\r\n        </Col>\r\n        <Col md={5}>\r\n            <div className={'text-center'}>{setDetails(summary.sets)}</div>\r\n        </Col>\r\n    </Row>\r\n\r\n}\r\n\r\nfunction setDetails(sets) {\r\n\r\n    if (!sets || sets.length === 0) {\r\n        return;\r\n    }\r\n\r\n    const setSummary = sets.map(set => set['first-team'] + ':' + set['second-team']).join(', ');\r\n    return '(' + setSummary + ')';\r\n}\r\n\r\nMatchesDetails.propTypes = {\r\n\r\n    matches: PropTypes.array\r\n\r\n};\r\n\r\nMatchesDetails.defaultProps = {\r\n\r\n    matches: []\r\n\r\n};\r\n\r\nexport default MatchesDetails;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\nimport {AgGridReact} from \"ag-grid-react\";\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport {groupSummary} from \"../helpers/matches\";\r\n\r\nimport '../css/agGridStyles.css';\r\n\r\nconst gridOptions = {\r\n    suppressDragLeaveHidesColumns: true,\r\n    suppressMovableColumns: true,\r\n    enableSorting: true,\r\n    suppressMenu : true,\r\n    suppressLoadingOverlay: true,\r\n    suppressNoRowsOverlay: true,\r\n    icons : {\r\n        sortAscending : ' ',\r\n        sortDescending : ' ',\r\n        sortUnSort : ' '\r\n    },\r\n    columnDefs: [\r\n        {headerName: \"Drużyna\", field: \"team\", width: 500},\r\n        {headerName: \"Punkty\", field: \"points\", width: 250, unSortIcon: true},\r\n        {\r\n            groupId: 1,\r\n            headerName: \"Mecze\",\r\n            marryChildren: true,\r\n            children: [\r\n                {headerName: 'Rozegr.', field: \"matchesPlayed\"},\r\n                {headerName: 'Wygr.', field: \"matchesWon\"},\r\n                {headerName: 'Przegr.', field: \"matchesLost\"}\r\n            ]\r\n        },\r\n        {\r\n            groupId: 2,\r\n            headerName: \"Sety\",\r\n            suppressMovable: true,\r\n            marryChildren: true,\r\n            children: [\r\n                {headerName: 'Wygr.', field: \"setsWon\"},\r\n                {headerName: 'Przegr.', field: \"setsLost\"},\r\n                {headerName: 'Stos.', field: \"setsRatio\", valueFormatter: twoDigits}\r\n            ]\r\n        },\r\n        {\r\n            groupId: 3,\r\n            headerName: \"Punkty\",\r\n            suppressMovable: true,\r\n            lockPosition: true,\r\n            children: [\r\n                {headerName: 'Wygr.', field: \"pointsWon\"},\r\n                {headerName: 'Przegr.', field: \"pointsLost\"},\r\n                {headerName: 'Stos.', field: \"pointsRatio\", valueFormatter: twoDigits}\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nfunction twoDigits(target) {\r\n    if (target.value !== 0 && !target.value) {\r\n        return '-';\r\n    }\r\n\r\n    return parseFloat(target.value).toFixed(2);\r\n}\r\n\r\nclass GroupSummaryTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onGridReady = this.onGridReady.bind(this);\r\n    }\r\n\r\n    onGridReady = (params) => {\r\n        const sortModel = [\r\n            {colId: 'points', sort: 'desc'},\r\n            {colId: 'setsRatio', sort: 'desc'},\r\n            {colId: 'pointsRatio', sort: 'desc'}\r\n        ];\r\n        params.api.setSortModel(sortModel);\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n\r\n    render() {\r\n\r\n        const {matches, teams} = this.props;\r\n\r\n        const summary = groupSummary(matches, teams);\r\n\r\n        return <div className=\"ag-theme-balham\">\r\n            <div>\r\n                <AgGridReact onGridReady={this.onGridReady}\r\n                             gridOptions={gridOptions}\r\n                             rowData={summary}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nGroupSummaryTable.propTypes = {\r\n\r\n    teams: PropTypes.array,\r\n    matches: PropTypes.array\r\n\r\n};\r\n\r\nexport default GroupSummaryTable;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport Collapse, {Panel} from 'rc-collapse';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport EditMatches from \"./AddMatch\";\r\nimport Matches from \"./MatchesDetails\";\r\nimport GroupSummaryTable from \"./GroupSummaryTable\";\r\n\r\n// TODO sortable by matches won, ratio,\r\n// TODO populate with data\r\n// TODO open and autosize to content\r\n// TODO extract table to another component\r\n// TODO no rows to show appears on table headers\r\n// TODO on group change -> make table full width!\r\n\r\nclass TourneyDetails extends React.Component {\r\n\r\n    state = {\r\n        accordion: true,\r\n        activeKey: ['0', '1', '2']\r\n    };\r\n\r\n    onChange = (activeKey) => {\r\n        this.setState({\r\n            activeKey,\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const {group} = this.props;\r\n\r\n        const activeKey = this.state.activeKey;\r\n\r\n        return <div>\r\n            <Collapse\r\n                accordion={false}\r\n                onChange={this.onChange}\r\n                activeKey={activeKey}\r\n            >\r\n                <Panel header='Tabela'>\r\n                    <GroupSummaryTable matches={group.matches}\r\n                                       teams={group.teams}\r\n                    />\r\n                </Panel>\r\n                <Panel header='Mecze'>\r\n                    <Matches matches={group.matches}/>\r\n                </Panel>\r\n                <Panel header='Wprowadź mecz'>\r\n                    <div>\r\n                        <EditMatches\r\n                            group={this.props.group}\r\n                            onMatchAdded={(firstTeam, secondTeam, sets) => this.props.onMatchAdded(group.groupLetter, firstTeam, secondTeam, sets)}\r\n                        />\r\n                    </div>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    }\r\n}\r\n\r\nTourneyDetails.propTypes = {\r\n\r\n    group: PropTypes.object.isRequired,\r\n    onMatchAdded: PropTypes.func\r\n\r\n};\r\n\r\nexport default TourneyDetails;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport TourneyDetails from \"./TourneyDetails\";\r\n\r\nclass TourneyState extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {saveTourneyState, groupChosen, tourneyName, group, groups} = this.props;\r\n\r\n        return <div>\r\n            <Row>\r\n                <Col md={{span: 8}}>\r\n                    <h3 className='pb-3'>Turniej \"{tourneyName}\"</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Navbar bg=\"primary\"\r\n                            variant=\"dark\"\r\n                            onSelect={groupChosen}\r\n                    >\r\n                        <Nav className=\"mr-auto\">\r\n                            <GroupItems activeGroup={group.groupLetter}\r\n                                        groups={groups}\r\n                            />\r\n                        </Nav>\r\n                        <Form inline>\r\n                            <Button\r\n                                onClick={saveTourneyState}\r\n                                variant=\"outline-light\">Zapisz turniej</Button>\r\n                        </Form>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12} className='mb-3'>\r\n                    <TourneyDetails group={group} onMatchAdded={this.props.onMatchAdded}/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction GroupItems({activeGroup, groups}) {\r\n    return groups.map(it =>\r\n        <Nav.Link eventKey={it.groupLetter}\r\n                  key={it.groupLetter}\r\n                  active={it.groupLetter === activeGroup}\r\n        >\r\n            Grupa {it.groupLetter}\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nTourneyState.propTypes = {\r\n    groups: PropTypes.array.isRequired,\r\n    group: PropTypes.object,\r\n    tourneyName: PropTypes.string,\r\n    groupChosen: PropTypes.func,\r\n    onMatchAdded: PropTypes.func,\r\n    saveTourneyState : PropTypes.func\r\n};\r\n\r\nTourneyState.defaultProps = {\r\n    groups: [],\r\n    tourneyName: \"Nazwa turnieju\",\r\n    group: {},\r\n    groupChosen: () => {\r\n    }\r\n};\r\n\r\nexport default TourneyState;","import React from 'react';\n\nimport './App.css'\n\nimport {Redirect, Route, Router, Switch} from 'react-router-dom'\nimport history from './helpers/history';\n\nimport LoadTourney from \"./components/LoadTourney\";\nimport SelectionPage from \"./components/SelectionPage\";\n\nimport SingleColumnLayout from \"./hoc/SingleColumnLayout\";\nimport NewTourney from \"./components/NewTourney\";\nimport Groups from \"./components/Groups\";\nimport TourneyState from \"./components/TourneyState\";\nimport {saveAs} from 'file-saver';\n\nimport uuidv4 from 'uuid/v4';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.addGroup = this.addGroup.bind(this);\n        this.pickTourneyName = this.pickTourneyName.bind(this);\n        this.addTeam = this.addTeam.bind(this);\n        this.approveGroups = this.approveGroups.bind(this);\n        this.groupChosen = this.groupChosen.bind(this);\n        this.onMatchAdded = this.onMatchAdded.bind(this);\n        this.saveTourneyState = this.saveTourneyState.bind(this);\n        this.loadTourneyState = this.loadTourneyState.bind(this);\n        this.redirectToGroups = this.redirectToGroups.bind(this);\n        this.proceedToState = this.proceedToState.bind(this);\n\n        this.state = {\n            groups: [\n                {groupLetter: \"A\", teams: [], matches: []}\n            ],\n            currentlyDisplayedGroup: \"A\"\n        };\n    }\n\n    loadTourneyState(history) {\n        return state => {\n            this.setState(JSON.parse(state));\n            this.proceedToState(history)\n        }\n    }\n\n    saveTourneyState() {\n        const blob = new Blob([JSON.stringify(this.state)], {type: \"text/plain;charset=utf-8\"});\n        const fileName = `${this.state.tourneyName ? this.state.tourneyName : 'tourney'}.txt`;\n        saveAs(blob, fileName)\n    }\n\n    onMatchAdded(groupLetter, firstTeam, secondTeam, sets) {\n\n        // TODO refactor it to a match object\n        // TODO think if defined objects help with immutable operations\n\n        const {groups} = this.state;\n\n        const groupIndex = groups.findIndex(group => group.groupLetter === groupLetter);\n        const group = groups[groupIndex];\n\n        const newMatches = group.matches.slice();\n        newMatches.push({firstTeam: firstTeam, secondTeam: secondTeam, sets: sets, id: uuidv4()});\n\n        const newGroups = [\n            ...groups.slice(0, groupIndex),\n            {...group, matches: newMatches},\n            ...groups.slice(groupIndex + 1,)\n        ];\n\n        this.setState({groups: newGroups});\n    }\n\n    groupChosen(groupLetter) {\n        this.setState({currentlyDisplayedGroup: groupLetter})\n    }\n\n    addGroup() {\n        let lastGroup = this.state.groups.map(it => it.groupLetter).slice().pop();\n        let newGroupLetter = String.fromCharCode(lastGroup.charCodeAt(0) + 1);\n        const groups = [...this.state.groups, {groupLetter: newGroupLetter, teams: [], matches: []}];\n        this.setState({groups: groups})\n    }\n\n    addTeam(groupName, teamName) {\n        const group = this.state.groups.find(byName(groupName));\n\n        const newTeams = group.teams.slice();\n        newTeams.push(teamName);\n        const groupWithAddedTeam = {...group, teams: newTeams};\n\n        const newGroups = this.state.groups.slice();\n\n        const toReplace = newGroups.findIndex(byName(groupName));\n\n        newGroups[toReplace] = groupWithAddedTeam;\n\n        this.setState({groups: newGroups})\n    }\n\n    approveGroups(history) {\n        return () => this.proceedToState(history);\n\n    }\n\n    proceedToState(history) {\n        history.push('/tourney/state')\n    }\n\n    pickTourneyName(toruneyName) {\n        this.setState({tourneyName: toruneyName});\n    }\n\n    createTourneyAndRedirect(history) {\n        return (tourneyName) => {\n            this.pickTourneyName(tourneyName);\n            this.redirectToGroups(history);\n        }\n    }\n\n    redirectToGroups(history) {\n        history.push('/tourney/groups')\n    }\n\n    render() {\n\n        return <Router history={history}>\n            <div>\n                <Switch>\n                    <Route path='/tourney/new'\n                           render={props => <LayoutNewTourney\n                               createNewTourney={this.createTourneyAndRedirect(history)}/>}\n                    />\n                    <Route path='/tourney/load'\n                           render={props =>\n                               <LayoutLoadTourney loadTourney={this.loadTourneyState(history)}/>}/>\n                    <Route path='/tourney/groups'\n                           render={props =>\n                               <Groups addGroup={this.addGroup}\n                                       tourneyName={this.state.tourneyName}\n                                       groups={this.state.groups}\n                                       teamAdded={this.addTeam}\n                                       approveGroups={this.approveGroups(history)}\n                               />\n                           }\n                    />\n                    <Route path='/tourney/state' render={props =>\n                        <LayoutTourneyState\n                            saveTourneyState={this.saveTourneyState}\n                            groups={this.state.groups.map(it => Object.assign({}, {groupLetter: it.groupLetter}))}\n                            group={this.state.groups.find(it => it.groupLetter === this.state.currentlyDisplayedGroup)}\n                            tourneyName={this.state.tourneyName}\n                            groupChosen={this.groupChosen}\n                            onMatchAdded={this.onMatchAdded}\n                        />}\n                    />\n                    <Route path='/' component={SingleColumnLayout({Content: SelectionPage})}/>\n                    <Redirect from='*' to='/'/>\n                </Switch>\n            </div>\n        </Router>\n    }\n}\n\nfunction byName(teamName) {\n    return (it) => it.groupLetter === teamName;\n}\n\nconst LayoutNewTourney = SingleColumnLayout({Content: NewTourney});\nconst LayoutTourneyState = SingleColumnLayout({Content: TourneyState}, 12, 0);\nconst LayoutLoadTourney = SingleColumnLayout({Content: LoadTourney}, 12, 0);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}