{"version":3,"sources":["helpers/history.js","components/LoadTourney.jsx","components/SelectionPage.jsx","components/Logo.jsx","hoc/SingleColumnLayout.jsx","components/NewTourney.jsx","components/Group.jsx","components/TourneyName.jsx","components/Groups.jsx","components/TeamDropdown.jsx","components/Set.jsx","components/AddMatch.jsx","helpers/matches.js","components/MatchesDetails.jsx","components/GroupSummaryTable.jsx","components/TourneyDetails.jsx","components/TourneyState.jsx","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","FieldGroup","_ref","id","label","props","Object","objectWithoutProperties","react","Form","Group","controlId","Label","FormControl","LoadTourney","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fileChange","bind","assertThisInitialized","onLoadTourney","state","fileName","e","setState","target","value","file","files","preventDefault","reader","FileReader","loadTourney","onload","event","result","readAsText","className","onSubmit","type","onChange","Button","React","SelectionPage","ButtonGroup","lib","to","variant","pageHeader","paddingBottom","margin","borderBottom","Logo","style","SingleColumnLayout","inputs","componentSpan","arguments","length","undefined","componentOffset","Content","_React$Component","Component","apply","inherits","createClass","key","react_default","a","createElement","Container","Row","Col","md","span","offset","NewToruney","context","handleChange","handleTourneyCreation","_this2","trim","createNewTourney","Control","placeholder","addTeam","newTeamNameChange","teamAdded","newTeamOnEnter","newTeamName","teamNameWarning","teams","includes","groupLetter","onKeyPress","onClick","fa","_this$props","FormGroup","map","name","readOnly","marginBottom","teamItem","groupItems","defaultProps","groups","TourneyName","tourneyName","Groups","approveGroups","groupAdded","amountOfGroups","group","sm","components_Group","fourGroups","addGroup","block","TeamDropdown","teamSelected","onTeamSelected","allTeams","Dropdown","drop","onSelect","Toggle","Menu","teamName","Item","eventKey","team","MissingPoints","Feedback","Set","onSetChange","isDraw","firstTeamResult","secondTeamResult","setNumber","as","zeroOrNumberOrEmpty","allowEmptyOrNumber","creationAttempted","callback","test","parseInt","AddMatch","teamsSelection","sets","firstTeamSelected","secondTeamSelected","teamSelectionFor","sameItemSelected","onMatchAdded","onSetChanged","selectionId","set","assign","objectSpread","defineProperty","newSets","_this3","alert","setsValidation","keys","setResults","firstResult","secondResult","validationResults","firstResultsMissing","hasValidationResults","secondResultMissing","validateSet","filter","it","validation","firstTeam","selectedTeam","secondTeam","selection","find","_this4","findIndex","newSelection","newSelections","push","index","_this5","components_TeamDropdown","Array","from","val","components_Set","matchSummary","match","winningSetsFirstTeam","winningSetsSecondTeam","Error","firstTeamTotalPoints","reduce","b","secondTeamTotalPoints","firstTeamSetsWon","secondTeamSetsWon","draw","winner","looser","firstTeamName","secondTeamName","firstTeamSetsLost","secondTeamSetsLost","safeRatio","divisor","dividend","groupSummary","matches","matchesPlayed","wins","looses","draws","points","summary","sumOfSets","sum","setsWon","pointsWon","pointsLost","amountOfSetsWon","setsLost","setsRatio","pointsRatio","setsSummary","matchPoints","matchesWon","matchesLost","matchesDraw","MatchesDetails","removeMatch","ResultRow","join","setDetails","color","gridOptions","suppressDragLeaveHidesColumns","suppressMovableColumns","suppressLoadingOverlay","suppressNoRowsOverlay","columnDefs","headerName","field","width","cellClass","autoHeight","unSortIcon","groupId","marryChildren","children","suppressMovable","valueFormatter","twoDigits","lockPosition","parseFloat","toFixed","GroupSummaryTable","onGridReady","params","api","sizeColumnsToFit","sort","resultsSort","overflow","main","rowData","TourneyDetails","accordion","activeKey","rc_collapse_es","header","components_GroupSummaryTable","components_MatchesDetails","matchId","components_AddMatch","TourneyState","saveTourneyState","groupChosen","Navbar","bg","Nav","GroupItems","activeGroup","inline","components_TourneyDetails","Link","active","App","pickTourneyName","loadTourneyState","redirectToGroups","proceedToState","currentlyDisplayedGroup","history","JSON","parse","blob","Blob","stringify","concat","saveAs","newGroup","newGroups","slice","groupToReplace","groupIndex","newMatches","uuidv4","toConsumableArray","lastGroup","pop","newGroupLetter","String","fromCharCode","charCodeAt","groupName","byName","newTeams","groupWithAddedTeam","toReplace","toruneyName","Router","Switch","Route","path","render","LayoutNewTourney","createTourneyAndRedirect","LayoutLoadTourney","components_Groups","LayoutTourneyState","component","Redirect","NewTourney","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b61a13c9.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Form, FormControl} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\n\r\nclass LoadTourney extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.fileChange = this.fileChange.bind(this);\r\n        this.onLoadTourney = this.onLoadTourney.bind(this);\r\n\r\n        this.state = {fileName: ''}\r\n    }\r\n\r\n    fileChange(e) {\r\n        this.setState({fileName: e.target.value, file: e.target.files[0]});\r\n    }\r\n\r\n    onLoadTourney(e) {\r\n        e.preventDefault();\r\n\r\n        if(this.state.file === '') {\r\n            return;\r\n        }\r\n\r\n        if (this.state.file) {\r\n            const file = this.state.file;\r\n            const reader = new FileReader();\r\n\r\n            const loadTourney = this.props.loadTourney;\r\n\r\n            reader.onload = function (event) {\r\n                loadTourney(event.target.result);\r\n            };\r\n\r\n            reader.readAsText(file);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Form className={'border border-primary p-3'}\r\n                     onSubmit={this.onLoadTourney}>\r\n            <h2 className='border-bottom mb-3'>Wczytaj istniejący turniej</h2>\r\n            <Form.Group controlId=\"formBasicText\">\r\n                <FieldGroup\r\n                    type=\"file\"\r\n                    label=\"Wybierz plik z zapisanym turniejem\"\r\n                    value={this.state.fileName}\r\n                    onChange={this.fileChange}\r\n                />\r\n\r\n            </Form.Group>\r\n            <Button type=\"submit\">Wczytaj</Button>\r\n        </Form>\r\n    }\r\n}\r\n\r\nfunction FieldGroup({id, label, ...props}) {\r\n    return (\r\n        <Form.Group controlId={id}>\r\n            <Form.Label>{label}</Form.Label>\r\n            <FormControl {...props} />\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default LoadTourney;\r\n\r\nLoadTourney.propTypes = {\r\n    loadTourney: PropTypes.func\r\n};","import {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport * as React from \"react\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n\r\n\r\nexport default () => <ButtonGroup className='d-flex'>\r\n    <LinkContainer to='/tourney/new'>\r\n        <Button variant=\"primary\">\r\n            Swtórz nowy turniej\r\n        </Button>\r\n    </LinkContainer>\r\n    <LinkContainer to='/tourney/load'>\r\n        <Button variant=\"primary\">\r\n            Wczytaj turniej\r\n        </Button>\r\n    </LinkContainer>\r\n</ButtonGroup>","import * as React from \"react\";\r\n\r\nconst pageHeader = {\r\n    paddingBottom: '9px',\r\n    'margin': '40px 0 20px',\r\n    borderBottom: '1px solid #eee'\r\n}\r\n\r\nexport default () => <div style={pageHeader}><h1>Volleyball Tournament App+</h1></div>","import React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Logo from \"../components/Logo\";\r\n\r\nfunction SingleColumnLayout(inputs, componentSpan = 8, componentOffset = 2) {\r\n\r\n    const {Content} = inputs;\r\n\r\n    class Component extends React.Component {\r\n\r\n        render() {\r\n            return <Container>\r\n                <Row>\r\n                    <Col md={{span: 8, offset: 2}}>\r\n                        <Logo/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{span: componentSpan, offset: componentOffset}}>\r\n                        <Content {...this.props}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        }\r\n    }\r\n\r\n    return Component;\r\n\r\n}\r\n\r\nexport default SingleColumnLayout;","import PropTypes from 'prop-types';\r\n\r\nimport * as React from \"react\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\nclass NewToruney extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTourneyCreation = this.handleTourneyCreation.bind(this);\r\n\r\n        this.state = {\r\n            value: ''\r\n        };\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    handleTourneyCreation() {\r\n        return e => {\r\n            e.preventDefault();\r\n            if (!this.state.value || !this.state.value.trim()) {\r\n                //TODO make it common util for checking empty string and preventing form action (same as for group addition)\r\n            } else {\r\n                this.props.createNewTourney(this.state.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Form className={'border border-primary p-3'}\r\n                     onSubmit={this.handleTourneyCreation()}>\r\n            <h2>Stwórz nowy turniej</h2>\r\n            <Form.Group controlId='formBasicText'>\r\n                <Form.Label>Podaj nazwę turniej</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={this.state.value}\r\n                    placeholder=\"Małopolski turniej siatkówki amatorskiej \"\r\n                    onChange={this.handleChange}\r\n                />\r\n            </Form.Group>\r\n            <div>\r\n                <Button type=\"submit\">Stwórz</Button>\r\n            </div>\r\n        </Form>\r\n    }\r\n}\r\n\r\nNewToruney.propTypes = {\r\n    createNewTourney: PropTypes.func\r\n};\r\n\r\nexport default NewToruney;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Button, Form, FormControl, FormGroup} from \"react-bootstrap\";\r\n\r\nimport {FaPlus} from \"react-icons/fa/index\";\r\n\r\nclass Group extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addTeam = this.addTeam.bind(this);\r\n        this.newTeamNameChange = this.newTeamNameChange.bind(this);\r\n        this.teamAdded = this.teamAdded.bind(this);\r\n        this.newTeamOnEnter = this.newTeamOnEnter.bind(this);\r\n\r\n        this.state = {newTeamName: '', teamNameWarning: ''}\r\n    }\r\n\r\n    newTeamNameChange(e) {\r\n        this.setState({newTeamName: e.target.value});\r\n    }\r\n\r\n    teamAdded() {\r\n        const newTeamName = this.state.newTeamName;\r\n        if(!newTeamName || newTeamName.trim().length === 0) {\r\n            // this.setState({teamNameWarning: 'Nazwa drużyny nie może być pusta!'})\r\n            // TODO add sensible message\r\n            // TODO only unique team names!\r\n        } else if (this.props.teams.includes(newTeamName)){\r\n            // this.setState({teamNameWarning: 'Istnieje już drużyna o takiej nazwie!'})\r\n        } else {\r\n            this.props.teamAdded(this.props.groupLetter, this.state.newTeamName);\r\n            this.setState({newTeamName: ''})\r\n        }\r\n    }\r\n\r\n    newTeamOnEnter(e) {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.teamAdded()\r\n        }\r\n    }\r\n\r\n    addTeam() {\r\n        return <div>\r\n            <FormControl value={this.state.newTeamName}\r\n                         className='mb-2'\r\n                         key='newItem'\r\n                         onChange={this.newTeamNameChange}\r\n                         onKeyPress={this.newTeamOnEnter}\r\n            />\r\n            <Button onClick={this.teamAdded} >\r\n                <FaPlus  />\r\n                <span>Dodaj drużynę</span>\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n    render() {\r\n        const {groupLetter, teams, teamAdded} = this.props;\r\n\r\n        return <div>\r\n            <h2>{groupLetter}</h2>\r\n            <Form>\r\n                <FormGroup>\r\n                    {groupItems(teams, groupLetter)}\r\n                    {teams && teams.length < 8 && this.addTeam(groupLetter, teamAdded)}\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nfunction groupItems(teams) {\r\n    return teams.map(name => teamItem(name));\r\n}\r\n\r\nfunction teamItem(name) {\r\n    return <FormControl readOnly style={{marginBottom: '10px'}} key={name} value={name}/>\r\n\r\n}\r\n\r\nGroup.propTypes = {\r\n    groupLetter: PropTypes.string,\r\n    teams: PropTypes.array,\r\n    teamAdded: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    groupLetter: 'A',\r\n    groups: [],\r\n    teamAdded: () => null\r\n};\r\n\r\nexport default Group;","import React from \"react\";\r\n\r\nexport default ({tourneyName}) =>  <h3 className='pb-3'>{tourneyName}</h3>;","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Logo from \"./Logo\";\r\nimport Group from \"./Group\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport {FaPlus} from \"react-icons/fa/index\";\r\nimport TourneyName from \"./TourneyName\";\r\n\r\n// TODO extract this css (is copied from other file)\r\n// TODO bigger space between plus and text\r\n// TODO try to better align 'dodaj grupę' button\r\n// TODO check that there is at least one group with at least two teams\r\n\r\nfunction fourGroups(groups, teamAdded) {\r\n    return groups.map(group =>\r\n        <Col key={group.groupLetter} sm={3}>\r\n            <Group\r\n                groupLetter={group.groupLetter}\r\n                teams={group.teams}\r\n                teamAdded={teamAdded}/>\r\n        </Col>);\r\n}\r\n\r\nclass Groups extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.approveGroups = this.approveGroups.bind(this);\r\n    }\r\n\r\n    approveGroups() {\r\n        this.props.approveGroups();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {groups, teamAdded, tourneyName} = this.props;\r\n\r\n        const amountOfGroups = groups.length;\r\n        return <Container>\r\n            <Row>\r\n                <Col md={{span: 8, offset: 2}}>\r\n                    <Logo/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={{span: 8}}>\r\n                   <TourneyName tourneyName={tourneyName}/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {fourGroups(groups, teamAdded)}\r\n                {(amountOfGroups < 8) && addGroup(this.props.addGroup)}\r\n            </Row>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <Button block onClick={this.approveGroups}>Zatwierdź grupy</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    }\r\n\r\n}\r\n\r\nfunction addGroup(groupAdded) {\r\n    return <Col sm={3}>\r\n        <Button className='mb-3' onClick={groupAdded}>\r\n            <FaPlus/>\r\n            <span>Dodaj grupę</span>\r\n        </Button>\r\n    </Col>\r\n\r\n}\r\n\r\nGroups.propTypes = {\r\n    groups: PropTypes.array,\r\n    addGroup: PropTypes.func,\r\n    tourneyName: PropTypes.string,\r\n    approveGroups: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    tourneyName: 'Turniej',\r\n    groups: [],\r\n    addGroup: () => null,\r\n    approveGroups: () => null,\r\n};\r\n\r\nexport default Groups;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport Dropdown from \"react-bootstrap/es/Dropdown\";\r\n\r\nclass TeamDropdown extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {teamSelected, onTeamSelected, allTeams} = this.props;\r\n\r\n        return <Dropdown\r\n            drop={'down'}\r\n            onSelect={onTeamSelected}>\r\n            <Dropdown.Toggle\r\n                className='w-100'>\r\n                {teamSelected ? teamSelected : 'Wybierz drużynę'}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu\r\n                className='w-100'>\r\n                {allTeams.map(teamName => team(teamName))}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    }\r\n\r\n}\r\n\r\nTeamDropdown.propTypes = {\r\n    teamSelected : PropTypes.string,\r\n    onTeamSelected : PropTypes.func,\r\n    allTeams : PropTypes.array\r\n};\r\n\r\nTeamDropdown.defaultProps = {\r\n    teamSelected : null,\r\n    onTeamSelected : () => {},\r\n    allTeams: []\r\n}\r\n\r\nfunction team(teamName) {\r\n    return <Dropdown.Item key={teamName} eventKey={teamName}>{teamName}</Dropdown.Item>\r\n}\r\n\r\nexport default TeamDropdown;","import PropTypes from 'prop-types';\r\n\r\nimport {Col} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\nimport React from \"react\";\r\n\r\nfunction MissingPoints() {\r\n    return <Form.Control.Feedback type=\"invalid\">\r\n        Wprowadź liczbę punktów\r\n    </Form.Control.Feedback>;\r\n}\r\n\r\nfunction CannotHaveDraw() {\r\n    return <Form.Control.Feedback type=\"invalid\">\r\n        Remis niedozwolony\r\n    </Form.Control.Feedback>;\r\n}\r\n\r\nclass Set extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onSetChange = this.onSetChange.bind(this);\r\n    }\r\n\r\n    onSetChange() {\r\n        this.setState(\r\n            {\r\n                isDraw: this.props.firstTeamResult === this.props.secondTeamResult\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const {setNumber, firstTeamResult, secondTeamResult, onSetChange} = this.props;\r\n\r\n        return <div>\r\n            <Form>\r\n                <Form.Row key={setNumber} className='mb-1'>\r\n                    <Form.Group as={Col} md={1}>\r\n                        <h4 key={setNumber}>{setNumber} set</h4>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md={{span: 2, offset: 1}}>\r\n                        <Form.Control as='input'\r\n                                      type='text'\r\n                                      value={zeroOrNumberOrEmpty(firstTeamResult)}\r\n                                      onChange={e => allowEmptyOrNumber(e, onSetChange(setNumber, 'first-team'))}\r\n                        />\r\n                        {this.props.creationAttempted && !firstTeamResult && <MissingPoints/>}\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}\r\n                                md={{span: 2, offset: 1}}>\r\n                        <h5 className='text-center'>:</h5>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md={{span: 2, offset: 1}}>\r\n                        <Form.Control as='input' type='text' value={zeroOrNumberOrEmpty(secondTeamResult)}\r\n                                      onChange={e => allowEmptyOrNumber(e, onSetChange(setNumber, 'second-team'))}/>\r\n                        {this.props.creationAttempted && !secondTeamResult && <MissingPoints/>}\r\n                    </Form.Group>\r\n                </Form.Row>\r\n            </Form>\r\n        </div>\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction allowEmptyOrNumber(e, callback) {\r\n    const number = /^[0-9\\b]+$/;\r\n\r\n    const value = e.target.value;\r\n    e.target.value === '' ? callback(null) : number.test(value) && callback(parseInt(value));\r\n}\r\n\r\nfunction zeroOrNumberOrEmpty(firstTeamResult) {\r\n    return firstTeamResult === 0 ? firstTeamResult : firstTeamResult || '';\r\n}\r\n\r\n\r\nSet.propTypes = {\r\n\r\n    creationAttempted : PropTypes.bool,\r\n    firstTeam: PropTypes.string,\r\n    secondTeam: PropTypes.string,\r\n    setNumber: PropTypes.number,\r\n    firstTeamResult: PropTypes.string,\r\n    secondTeamResult: PropTypes.string,\r\n    onSetChange: PropTypes.func\r\n\r\n};\r\n\r\nSet.defaultProps = {\r\n\r\n    firstTeamResult : '',\r\n    secondTeamResult : ''\r\n\r\n};\r\n\r\nexport default Set;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport {Col} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport TeamDropdown from \"./TeamDropdown\";\r\nimport Set from \"./Set\";\r\n\r\nclass AddMatch extends React.Component {\r\n\r\n    // TODO - add version number\r\n    // TODO - empty groups are not displayed and considered\r\n    // TODO - remove duplication for dropdowns\r\n    // TODO - shouldn't be able to select same team\r\n    // TODO refactor and numbers only\r\n    // TODO handle switching on 'same-selection'\r\n    // TODO validate that inputs are numbers!\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {teamsSelection: [], sets: {}};\r\n\r\n        this.firstTeamSelected = this.firstTeamSelected.bind(this);\r\n        this.secondTeamSelected = this.secondTeamSelected.bind(this);\r\n        this.onTeamSelected = this.onTeamSelected.bind(this);\r\n        this.teamSelectionFor = this.teamSelectionFor.bind(this);\r\n        this.sameItemSelected = this.sameItemSelected.bind(this);\r\n        this.onMatchAdded = this.onMatchAdded.bind(this);\r\n        this.onSetChanged = this.onSetChanged.bind(this);\r\n    }\r\n\r\n    onSetChanged(setNumber, selectionId) {\r\n        return value => {\r\n            const set = Object.assign({}, {\r\n                ...this.state.sets[setNumber],\r\n                [selectionId]: value\r\n            });\r\n            const newSets = Object.assign({}, {...this.state.sets});\r\n            newSets[setNumber] = set;\r\n            this.setState({sets: newSets});\r\n        }\r\n    }\r\n\r\n    onMatchAdded() {\r\n        if (this.state.teamsSelection.length < 2) {\r\n            alert('Proszę wybrać obie drużyny');\r\n            // consider disabling button if two teams are not chosen\r\n            // todo - check if at least on set populated\r\n            // todo - check if we don't have unfilled sets\r\n            // todo - check if we have draws\r\n            return;\r\n        }\r\n\r\n        const setsValidation = Object.keys(this.state.sets).map(key => validateSet(key, this.state.sets[key]));\r\n\r\n        if (setsValidation.filter(it => it.validation) > 0) {\r\n            this.setState({validationResults: setsValidation, creationAttempted: true});\r\n            return;\r\n        }\r\n\r\n        const firstTeam = this.state.teamsSelection[0].selectedTeam;\r\n        const secondTeam = this.state.teamsSelection[1].selectedTeam;\r\n\r\n        // TODO shouldn't be able to add match without any sets!\r\n        // TODO flush state from set - make selection - unselected\r\n        // TODO Make it possible to edit match or forbid to choose already chosen match\r\n        this.props.onMatchAdded(firstTeam, secondTeam, this.state.sets);\r\n        this.setState({sets: [], teamsSelection: [], creationAttempted: false})\r\n    }\r\n\r\n    teamSelectionFor(selectionId) {\r\n        const selection = this.state.teamsSelection.find(it => it.selectionId === selectionId);\r\n        if (!selection) {\r\n            return \"\";\r\n        } else {\r\n            return selection.selectedTeam;\r\n        }\r\n    }\r\n\r\n    onTeamSelected(selectionId) {\r\n        return selectedTeam => {\r\n            if (this.state.teamsSelection.findIndex(it => it.selectedTeam === selectedTeam) !== -1) {\r\n                return;\r\n            }\r\n            const newSelection = {selectionId: selectionId, selectedTeam: selectedTeam};\r\n\r\n            const newSelections = this.state.teamsSelection.filter(it => it.selectionId !== selectionId);\r\n            newSelections.push(newSelection);\r\n\r\n            this.setState({teamsSelection: newSelections});\r\n        }\r\n    }\r\n\r\n    sameItemSelected(index, selectedTeam) {\r\n        return this.state.teamsSelection[index].selectedTeam === selectedTeam;\r\n    }\r\n\r\n    firstTeamSelected(eventKey) {\r\n        this.setState({firstTeamSelected: eventKey});\r\n    }\r\n\r\n    secondTeamSelected(eventKey) {\r\n        this.setState({secondTeamSelected: eventKey});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {group} = this.props;\r\n\r\n        return <div>\r\n            <Row className={'mb-2'}>\r\n                <Col md={{span: 4, offset: 1}}>\r\n                    <TeamDropdown\r\n                        allTeams={group.teams}\r\n                        teamSelected={this.teamSelectionFor('first-team')}\r\n                        onTeamSelected={this.onTeamSelected('first-team')}\r\n                    />\r\n                </Col>\r\n                <Col md={2}>\r\n                    <h3 className='text-center'>vs</h3>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <TeamDropdown\r\n                        allTeams={group.teams}\r\n                        teamSelected={this.teamSelectionFor('second-team')}\r\n                        onTeamSelected={this.onTeamSelected('second-team')}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            {Array.from(new Array(5), (val, index) => index + 1).map(setNumber =>\r\n                <Set key={setNumber}\r\n                     setNumber={setNumber}\r\n                     firstTeam={'first-team'}\r\n                     secondTeam={'second-team'}\r\n                     creationAttempted={this.state.creationAttempted}\r\n                     firstTeamResult={this.state.sets[setNumber] ? this.state.sets[setNumber]['first-team'] : ''}\r\n                     secondTeamResult={this.state.sets[setNumber] ? this.state.sets[setNumber]['second-team'] : ''}\r\n                     onSetChange={this.onSetChanged}/>\r\n            )}\r\n            <Row className={'mt-3'}>\r\n                <Col>\r\n                    <Button\r\n                        onClick={this.onMatchAdded}\r\n                        className='float-right'\r\n                        type=\"submit\">Zatwierdź mecz\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nfunction validateSet(setNumber, setResults) {\r\n    const firstResult = setResults['first-team'];\r\n    const secondResult = setResults['second-team'];\r\n\r\n    const validationResults = {setNumber: setNumber};\r\n\r\n    if (firstResult === 0) {\r\n        validationResults.firstResultsMissing = true;\r\n        validationResults.hasValidationResults = true;\r\n    }\r\n\r\n    if (secondResult === 0) {\r\n        validationResults.secondResultMissing = true;\r\n        validationResults.hasValidationResults = true;\r\n    }\r\n\r\n    if (!firstResult && !secondResult) {\r\n        validationResults.hasValidationResults = false;\r\n        return validationResults;\r\n    }\r\n\r\n    if (firstResult === secondResult) {\r\n        validationResults.isDraw = true;\r\n        validationResults.hasValidationResults = true;\r\n    }\r\n\r\n    if (!firstResult) {\r\n        validationResults.firstResultsMissing = true;\r\n    }\r\n\r\n    if(!secondResult) {\r\n        validationResults.secondResultMissing = true;\r\n    }\r\n\r\n    return validationResults;\r\n\r\n}\r\n\r\nAddMatch.propTypes = {\r\n\r\n    group: PropTypes.object.isRequired\r\n\r\n};\r\n\r\nexport default AddMatch;","export function matchSummary(match) {\n\n    const sets = Object.keys(match.sets).map(key => match.sets[key]);\n\n    const winningSetsFirstTeam = sets.filter(set => set['first-team'] > set['second-team']);\n    const winningSetsSecondTeam = sets.filter(set => set['first-team'] < set['second-team']);\n\n    const drawSets = sets.filter(set => set['first-team'] === set['second-team']).length;\n\n    if (drawSets > 0) {\n        throw new Error(\"Encountered sets with draw!\")\n    }\n\n    const firstTeamTotalPoints = sets.map(set => set['first-team']).reduce((a, b) => a + b, 0);\n    const secondTeamTotalPoints = sets.map(set => set['second-team']).reduce((a, b) => a + b, 0);\n\n    const firstTeamSetsWon = winningSetsFirstTeam.length;\n    const secondTeamSetsWon = winningSetsSecondTeam.length;\n\n    function matchResult() {\n        if (firstTeamSetsWon === secondTeamSetsWon) {\n            return {draw: true}\n        } else if (firstTeamSetsWon > secondTeamSetsWon) {\n            return {winner: match.firstTeam, looser: match.secondTeam};\n        } else {\n            return {winner: match.secondTeam, looser: match.firstTeam}\n        }\n    }\n\n    const result = matchResult();\n\n    return {\n        firstTeamTotalPoints: firstTeamTotalPoints,\n        secondTeamTotalPoints: secondTeamTotalPoints,\n        firstTeamName: match.firstTeam,\n        secondTeamName: match.secondTeam,\n        firstTeamSetsWon: firstTeamSetsWon,\n        secondTeamSetsWon: secondTeamSetsWon,\n        firstTeamSetsLost: secondTeamSetsWon,\n        secondTeamSetsLost: firstTeamSetsWon,\n        sets: sets,\n        ...result\n    }\n\n}\n\nfunction safeRatio(divisor, dividend) {\n    return divisor === 0 ? null : (dividend) / (divisor);\n}\n\nfunction setsSummary(team, matches) {\n\n    const sumOfSets = matches.map(it => it.sets.length).reduce((sum, value) => sum + value, 0);\n\n    const setsWon = matches.map(it => it.firstTeamName === team ? it.firstTeamSetsWon : it.secondTeamSetsWon);\n\n    const pointsWon = matches\n        .map(it => it.firstTeamName === team ? it.firstTeamTotalPoints : it.secondTeamTotalPoints)\n        .reduce((a, b) => a + b, 0);\n\n    const pointsLost = matches\n        .map(it => it.firstTeamName === team ? it.secondTeamTotalPoints : it.firstTeamTotalPoints)\n        .reduce((a, b) => a + b, 0);\n\n    const amountOfSetsWon = setsWon.reduce((a, b) => a + b, 0);\n\n    const setsLost = sumOfSets - amountOfSetsWon;\n\n    const setsRatio = safeRatio(setsLost, amountOfSetsWon);\n\n    return {\n        teamName: team,\n        setsWon: amountOfSetsWon,\n        setsLost: setsLost,\n        setsRatio: setsRatio,\n        pointsWon: pointsWon,\n        pointsLost: pointsLost,\n        pointsRatio: safeRatio(pointsLost, pointsWon)\n    }\n\n}\n\nexport function groupSummary(matches, teams) {\n\n    return teams.map(team => {\n\n        const matchesPlayed = matches\n            .filter(match => match.firstTeam === team || match.secondTeam === team)\n            .map(match => matchSummary(match));\n\n        const wins = matchesPlayed.filter(match => match.winner === team).length;\n        const looses = matchesPlayed.filter(match => match.looser === team).length;\n        const draws = matchesPlayed.filter(match => match.draw === true).length;\n\n        const points = (wins * 2) + (draws * 1);\n\n        const summary = setsSummary(team, matchesPlayed);\n\n        return {\n            team: team,\n            matchPoints: points,\n            matchesPlayed: matchesPlayed.length,\n            matchesWon: wins,\n            matchesLost: looses,\n            matchesDraw: draws,\n            setsWon: summary.setsWon,\n            setsLost: summary.setsLost,\n            setsRatio: summary.setsRatio,\n            pointsWon: summary.pointsWon,\n            pointsLost: summary.pointsLost,\n            pointsRatio: summary.pointsRatio\n        };\n    });\n}\n\nexport function resultsSort(summary) {\n\n    return summary.sort(function sortSummary(firstTeam, secondTeam) {\n            if (firstTeam.matchPoints > secondTeam.matchPoints) return -1;\n            if (firstTeam.matchPoints < secondTeam.matchPoints) return 1;\n            if (firstTeam.setsRatio > secondTeam.setsRatio) return -1;\n            if (firstTeam.setsRatio < secondTeam.setsRatio) return 1;\n            if (firstTeam.pointsRatio > secondTeam.pointsRatio) return -1;\n            if (firstTeam.pointsRatio < secondTeam.pointsRatio) return 1;\n\n            return 1;\n        }\n    );\n\n}","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\nimport {Row} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport {matchSummary} from \"../helpers/matches\";\r\nimport {FaTimes} from \"react-icons/fa/index\";\r\n\r\nimport '../css/icons.css'\r\n\r\nclass MatchesDetails extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {matches, removeMatch} = this.props;\r\n\r\n        return matches.map(match =>\r\n            <ResultRow\r\n                key={match.id}\r\n                firstTeam={match.firstTeam}\r\n                secondTeam={match.secondTeam}\r\n                match={match}\r\n                removeMatch={removeMatch}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction ResultRow({firstTeam, secondTeam, match, removeMatch}) {\r\n\r\n    const summary = matchSummary(match);\r\n\r\n    return <Row>\r\n        <Col md={4}>\r\n            <div className={'text-center'}>{firstTeam} vs {secondTeam}</div>\r\n        </Col>\r\n        <Col md={1}>\r\n            <div className={'text-center'}><b>{summary.firstTeamSetsWon} : {summary.secondTeamSetsWon}</b></div>\r\n        </Col>\r\n        <Col md={4}>\r\n            <div className={'text-center'}>{setDetails(summary.sets)}</div>\r\n        </Col>\r\n        <Col md={3}>\r\n            <div className={'float-right'}>\r\n                <FaTimes style={{color: \"#b21f2d\"}} onClick={() => removeMatch(match.id)}/>\r\n            </div>\r\n        </Col>\r\n    </Row>\r\n\r\n}\r\n\r\nfunction setDetails(sets) {\r\n\r\n    if (!sets || sets.length === 0) {\r\n        return;\r\n    }\r\n\r\n    const setSummary = sets.map(set => set['first-team'] + ':' + set['second-team']).join(', ');\r\n    return '(' + setSummary + ')';\r\n}\r\n\r\nMatchesDetails.propTypes = {\r\n\r\n    matches: PropTypes.array,\r\n    removeMatch: PropTypes.func\r\n\r\n};\r\n\r\nMatchesDetails.defaultProps = {\r\n\r\n    matches: [],\r\n    removeMatch: () => {\r\n    }\r\n\r\n};\r\n\r\nexport default MatchesDetails;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\nimport {AgGridReact} from \"ag-grid-react\";\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport {groupSummary, resultsSort} from \"../helpers/matches\";\r\n\r\nimport '../css/agGridStyles.css';\r\n\r\nconst gridOptions = {\r\n    suppressDragLeaveHidesColumns: true,\r\n    suppressMovableColumns: true,\r\n    suppressLoadingOverlay: true,\r\n    suppressNoRowsOverlay: true,\r\n    columnDefs: [\r\n        {\r\n            headerName: \"Drużyna\", field: \"team\", width: 500,\r\n            cellClass: 'cell-wrap-text', autoHeight: true\r\n        },\r\n        {headerName: \"Punkty\", field: \"matchPoints\", width: 250, unSortIcon: true},\r\n        {\r\n            groupId: 1,\r\n            headerName: \"Mecze\",\r\n            marryChildren: true,\r\n            children: [\r\n                {headerName: 'Rozegr.', field: \"matchesPlayed\"},\r\n                {headerName: 'Wygr.', field: \"matchesWon\"},\r\n                {headerName: 'Przegr.', field: \"matchesLost\"},\r\n                {headerName: 'Remis', field: \"matchesDraw\"}\r\n            ]\r\n        },\r\n        {\r\n            groupId: 2,\r\n            headerName: \"Sety\",\r\n            suppressMovable: true,\r\n            marryChildren: true,\r\n            children: [\r\n                {headerName: 'Wygr.', field: \"setsWon\"},\r\n                {headerName: 'Przegr.', field: \"setsLost\"},\r\n                {headerName: 'Stos.', field: \"setsRatio\", valueFormatter: twoDigits}\r\n            ]\r\n        },\r\n        {\r\n            groupId: 3,\r\n            headerName: \"Punkty\",\r\n            suppressMovable: true,\r\n            lockPosition: true,\r\n            children: [\r\n                {headerName: 'Wygr.', field: \"pointsWon\"},\r\n                {headerName: 'Przegr.', field: \"pointsLost\"},\r\n                {headerName: 'Stos.', field: \"pointsRatio\", valueFormatter: twoDigits}\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nfunction twoDigits(target) {\r\n    if (target.value !== 0 && !target.value) {\r\n        return '-';\r\n    }\r\n\r\n    return parseFloat(target.value).toFixed(2);\r\n}\r\n\r\nclass GroupSummaryTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onGridReady = this.onGridReady.bind(this);\r\n    }\r\n\r\n    onGridReady = (params) => {\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n\r\n    render() {\r\n\r\n        const {matches, teams} = this.props;\r\n\r\n        const summary = resultsSort(groupSummary(matches, teams));\r\n\r\n        return <div className=\"ag-theme-balham\">\r\n            <div style={{overflow: 'auto'}}>\r\n                <AgGridReact\r\n                    onGridReady={this.onGridReady}\r\n                    gridOptions={gridOptions}\r\n                    rowData={summary}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nGroupSummaryTable.propTypes = {\r\n\r\n    teams: PropTypes.array,\r\n    matches: PropTypes.array\r\n\r\n};\r\n\r\nexport default GroupSummaryTable;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport Collapse, {Panel} from 'rc-collapse';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport EditMatches from \"./AddMatch\";\r\nimport Matches from \"./MatchesDetails\";\r\nimport GroupSummaryTable from \"./GroupSummaryTable\";\r\n\r\n// TODO sortable by matches won, ratio,\r\n// TODO populate with data\r\n// TODO open and autosize to content\r\n// TODO extract table to another component\r\n// TODO no rows to show appears on table headers\r\n// TODO on group change -> make table full width!\r\n\r\nclass TourneyDetails extends React.Component {\r\n\r\n    state = {\r\n        accordion: true,\r\n        activeKey: ['0', '1', '2']\r\n    };\r\n\r\n    onChange = (activeKey) => {\r\n        this.setState({\r\n            activeKey,\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const {group} = this.props;\r\n\r\n        const activeKey = this.state.activeKey;\r\n\r\n        return <div>\r\n            <Collapse\r\n                accordion={false}\r\n                onChange={this.onChange}\r\n                activeKey={activeKey}\r\n            >\r\n                <Panel header='Tabela'>\r\n                    <GroupSummaryTable matches={group.matches}\r\n                                       teams={group.teams}\r\n                    />\r\n                </Panel>\r\n                <Panel header='Mecze'>\r\n                    <Matches matches={group.matches}\r\n                             removeMatch={(matchId) => this.props.removeMatch(group.groupLetter, matchId)}/>\r\n                </Panel>\r\n                <Panel header='Wprowadź mecz'>\r\n                    <div>\r\n                        <EditMatches\r\n                            group={this.props.group}\r\n                            onMatchAdded={(firstTeam, secondTeam, sets) => this.props.onMatchAdded(group.groupLetter, firstTeam, secondTeam, sets)}\r\n                        />\r\n                    </div>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    }\r\n}\r\n\r\nTourneyDetails.propTypes = {\r\n\r\n    group: PropTypes.object.isRequired,\r\n    onMatchAdded: PropTypes.func,\r\n    removeMatch : PropTypes.func\r\n\r\n};\r\n\r\nexport default TourneyDetails;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport TourneyDetails from \"./TourneyDetails\";\r\nimport TourneyName from \"./TourneyName\";\r\n\r\nclass TourneyState extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {saveTourneyState, groupChosen, tourneyName, group, groups} = this.props;\r\n\r\n        return <div>\r\n            <Row>\r\n                <Col md={{span: 8}}>\r\n                    <TourneyName tourneyName={tourneyName}/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Navbar bg=\"primary\"\r\n                            variant=\"dark\"\r\n                            onSelect={groupChosen}\r\n                    >\r\n                        <Nav className=\"mr-auto\">\r\n                            <GroupItems activeGroup={group.groupLetter}\r\n                                        groups={groups}\r\n                            />\r\n                        </Nav>\r\n                        <Form inline>\r\n                            <Button\r\n                                onClick={saveTourneyState}\r\n                                variant=\"outline-light\">Zapisz turniej</Button>\r\n                        </Form>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12} className='mb-3'>\r\n                    <TourneyDetails\r\n                        group={group}\r\n                        onMatchAdded={this.props.onMatchAdded}\r\n                        removeMatch={this.props.removeMatch}/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction GroupItems({activeGroup, groups}) {\r\n    return groups.map(it =>\r\n        <Nav.Link eventKey={it.groupLetter}\r\n                  key={it.groupLetter}\r\n                  active={it.groupLetter === activeGroup}\r\n        >\r\n            Grupa {it.groupLetter}\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nTourneyState.propTypes = {\r\n    groups: PropTypes.array.isRequired,\r\n    group: PropTypes.object,\r\n    tourneyName: PropTypes.string,\r\n    groupChosen: PropTypes.func,\r\n    onMatchAdded: PropTypes.func,\r\n    saveTourneyState: PropTypes.func,\r\n    removeMatch : PropTypes.func\r\n};\r\n\r\nTourneyState.defaultProps = {\r\n    groups: [],\r\n    tourneyName: \"Nazwa turnieju\",\r\n    group: {},\r\n    groupChosen: () => {\r\n    },\r\n    removeMatch: () => {}\r\n};\r\n\r\nexport default TourneyState;","import React from 'react';\r\n\r\nimport './App.css'\r\n\r\nimport {Redirect, Route, Router, Switch} from 'react-router-dom'\r\nimport history from './helpers/history';\r\n\r\nimport LoadTourney from \"./components/LoadTourney\";\r\nimport SelectionPage from \"./components/SelectionPage\";\r\n\r\nimport SingleColumnLayout from \"./hoc/SingleColumnLayout\";\r\nimport NewTourney from \"./components/NewTourney\";\r\nimport Groups from \"./components/Groups\";\r\nimport TourneyState from \"./components/TourneyState\";\r\nimport {saveAs} from 'file-saver';\r\n\r\nimport './css/icons.css'\r\n\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addGroup = this.addGroup.bind(this);\r\n        this.pickTourneyName = this.pickTourneyName.bind(this);\r\n        this.addTeam = this.addTeam.bind(this);\r\n        this.approveGroups = this.approveGroups.bind(this);\r\n        this.groupChosen = this.groupChosen.bind(this);\r\n        this.onMatchAdded = this.onMatchAdded.bind(this);\r\n        this.saveTourneyState = this.saveTourneyState.bind(this);\r\n        this.loadTourneyState = this.loadTourneyState.bind(this);\r\n        this.redirectToGroups = this.redirectToGroups.bind(this);\r\n        this.proceedToState = this.proceedToState.bind(this);\r\n        this.removeMatch = this.removeMatch.bind(this);\r\n\r\n        this.state = {\r\n            groups: [\r\n                {groupLetter: \"A\", teams: [], matches: []}\r\n            ],\r\n            currentlyDisplayedGroup: \"A\"\r\n        };\r\n    }\r\n\r\n    loadTourneyState(history) {\r\n        return state => {\r\n            this.setState(JSON.parse(state));\r\n            this.proceedToState(history)\r\n        }\r\n    }\r\n\r\n    saveTourneyState() {\r\n        const blob = new Blob([JSON.stringify(this.state)], {type: \"text/plain;charset=utf-8\"});\r\n        const fileName = `${this.state.tourneyName ? this.state.tourneyName : 'tourney'}.txt`;\r\n        saveAs(blob, fileName)\r\n    }\r\n\r\n    removeMatch(groupLetter, matchId) {\r\n        const group = this.state.groups.find(group => group.groupLetter === groupLetter);\r\n\r\n        const matches = group.matches.filter(matches => matches.id !== matchId);\r\n\r\n        const newGroup = {...group, matches : matches};\r\n\r\n        const newGroups = this.state.groups.slice();\r\n\r\n        const groupToReplace = newGroups.findIndex(group => group.groupLetter === groupLetter);\r\n        newGroups[groupToReplace] = newGroup;\r\n\r\n        this.setState({groups : newGroups});\r\n    }\r\n\r\n    onMatchAdded(groupLetter, firstTeam, secondTeam, sets) {\r\n\r\n        const {groups} = this.state;\r\n\r\n        const groupIndex = groups.findIndex(group => group.groupLetter === groupLetter);\r\n        const group = groups[groupIndex];\r\n\r\n        if(!group.teams.includes(firstTeam) || !group.teams.includes(secondTeam)){\r\n            return;\r\n        }\r\n\r\n        const newMatches = group.matches.slice();\r\n        newMatches.push({firstTeam: firstTeam, secondTeam: secondTeam, sets: sets, id: uuidv4()});\r\n\r\n        const newGroups = [\r\n            ...groups.slice(0, groupIndex),\r\n            {...group, matches: newMatches},\r\n            ...groups.slice(groupIndex + 1,)\r\n        ];\r\n\r\n        this.setState({groups: newGroups});\r\n    }\r\n\r\n    groupChosen(groupLetter) {\r\n        this.setState({currentlyDisplayedGroup: groupLetter})\r\n    }\r\n\r\n    addGroup() {\r\n        let lastGroup = this.state.groups.map(it => it.groupLetter).slice().pop();\r\n        let newGroupLetter = String.fromCharCode(lastGroup.charCodeAt(0) + 1);\r\n        const groups = [...this.state.groups, {groupLetter: newGroupLetter, teams: [], matches: []}];\r\n        this.setState({groups: groups})\r\n    }\r\n\r\n    addTeam(groupName, teamName) {\r\n        const group = this.state.groups.find(byName(groupName));\r\n\r\n        const newTeams = group.teams.slice();\r\n        newTeams.push(teamName);\r\n        const groupWithAddedTeam = {...group, teams: newTeams};\r\n\r\n        const newGroups = this.state.groups.slice();\r\n\r\n        const toReplace = newGroups.findIndex(byName(groupName));\r\n\r\n        newGroups[toReplace] = groupWithAddedTeam;\r\n\r\n        this.setState({groups: newGroups})\r\n    }\r\n\r\n    approveGroups(history) {\r\n        return () => this.proceedToState(history);\r\n\r\n    }\r\n\r\n    proceedToState(history) {\r\n        history.push('/tourney/state')\r\n    }\r\n\r\n    pickTourneyName(toruneyName) {\r\n        this.setState({tourneyName: toruneyName});\r\n    }\r\n\r\n    createTourneyAndRedirect(history) {\r\n        return (tourneyName) => {\r\n            this.pickTourneyName(tourneyName);\r\n            this.redirectToGroups(history);\r\n        }\r\n    }\r\n\r\n    redirectToGroups(history) {\r\n        history.push('/tourney/groups')\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Router history={history}>\r\n            <div>\r\n                <Switch>\r\n                    <Route path='/tourney/new'\r\n                           render={props => <LayoutNewTourney\r\n                               createNewTourney={this.createTourneyAndRedirect(history)}/>}\r\n                    />\r\n                    <Route path='/tourney/load'\r\n                           render={props =>\r\n                               <LayoutLoadTourney loadTourney={this.loadTourneyState(history)}/>}/>\r\n                    <Route path='/tourney/groups'\r\n                           render={props =>\r\n                               <Groups addGroup={this.addGroup}\r\n                                       tourneyName={this.state.tourneyName}\r\n                                       groups={this.state.groups}\r\n                                       teamAdded={this.addTeam}\r\n                                       approveGroups={this.approveGroups(history)}\r\n                               />\r\n                           }\r\n                    />\r\n                    <Route path='/tourney/state' render={props =>\r\n                        <LayoutTourneyState\r\n                            saveTourneyState={this.saveTourneyState}\r\n                            groups={this.state.groups.map(it => Object.assign({}, {groupLetter: it.groupLetter}))}\r\n                            group={this.state.groups.find(it => it.groupLetter === this.state.currentlyDisplayedGroup)}\r\n                            tourneyName={this.state.tourneyName}\r\n                            groupChosen={this.groupChosen}\r\n                            onMatchAdded={this.onMatchAdded}\r\n                            removeMatch={this.removeMatch}\r\n                        />}\r\n                    />\r\n                    <Route path='/' component={SingleColumnLayout({Content: SelectionPage})}/>\r\n                    <Redirect from='*' to='/'/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    }\r\n}\r\n\r\nfunction byName(teamName) {\r\n    return (it) => it.groupLetter === teamName;\r\n}\r\n\r\nconst LayoutNewTourney = SingleColumnLayout({Content: NewTourney});\r\nconst LayoutTourneyState = SingleColumnLayout({Content: TourneyState}, 12, 0);\r\nconst LayoutLoadTourney = SingleColumnLayout({Content: LoadTourney}, 12, 0);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}