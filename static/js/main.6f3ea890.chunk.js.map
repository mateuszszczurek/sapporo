{"version":3,"sources":["helpers/history.js","components/LoadTourney.jsx","components/SelectionPage.jsx","components/Logo.jsx","hoc/SingleColumnLayout.jsx","components/NewTourney.jsx","components/Group.jsx","components/Groups.jsx","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","LoadTurney","react","style","formStyle","PageHeader","FormGroup","controlId","FieldGroup","id","type","label","React","border","padding","_ref","props","Object","objectWithoutProperties","ControlLabel","FormControl","SelectionPage","ButtonGroup","justified","lib","to","Button","bsStyle","Logo","SingleColumnLayout","components","Content","_React$Component","Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","Grid","Row","Col","sm","smOffset","NewToruney","context","_this","call","handleChange","bind","assertThisInitialized","handleTourneyCreation","state","length","e","setState","target","_this2","preventDefault","createNewTourney","onSubmit","validationState","getValidationState","placeholder","onChange","Feedback","spaceBetweenFormInputs","marginBottom","Group","addTeam","newTeamNameChange","teamAdded","newTeamOnEnter","newTeamName","teamNameWarning","teams","includes","groupLetter","onKeyPress","onClick","Glyphicon","glyph","_this$props","Form","nonEmpty","map","name","readOnly","teamItem","groupItems","defaultProps","groups","fourGroups","from","undefined","slice","group","components_Group","Groups","console","log","amountOfGroups","addGroup","groupAdded","marginTop","tourneyName","App","pickTourneyName","lastGroup","it","pop","newGroupLetter","String","fromCharCode","charCodeAt","concat","toConsumableArray","groupName","teamName","find","byName","newTeams","push","groupWithAddedTeam","objectSpread","newGroups","toReplace","findIndex","toruneyName","history","_this3","Router","Switch","Route","path","render","LayoutNewTourney","createTourneyAndRedirect","component","LoadTourney","components_Groups","Redirect","NewTourney","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f3ea890.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import * as React from \"react\";\r\nimport {ControlLabel, PageHeader, FormControl, FormGroup} from \"react-bootstrap\";\r\n\r\nclass LoadTurney extends React.Component {\r\n\r\n    render() {\r\n        return <form style={formStyle}>\r\n            <PageHeader>Wczytaj istniejący turniej</PageHeader>\r\n            <FormGroup controlId=\"formBasicText\">\r\n                <FieldGroup\r\n                    id=\"formControlsFile\"\r\n                    type=\"file\"\r\n                    label=\"Wybierz plik z zapisanym turniejem\"\r\n                />\r\n\r\n            </FormGroup>\r\n        </form>\r\n    }\r\n}\r\n\r\nconst formStyle = {\r\n    border: 'thin black solid',\r\n    padding: '20px'\r\n};\r\n\r\n\r\nfunction FieldGroup({id, label, ...props}) {\r\n    return (\r\n        <FormGroup controlId={id}>\r\n            <ControlLabel>{label}</ControlLabel>\r\n            <FormControl {...props} />\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default LoadTurney;","import {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport * as React from \"react\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n\r\n\r\nexport default () => <ButtonGroup justified>\r\n    <LinkContainer to='/tourney/new'>\r\n        <Button bsStyle=\"primary\">\r\n            Swtórz nowy turniej\r\n        </Button>\r\n    </LinkContainer>\r\n    <LinkContainer to='/tourney/load'>\r\n        <Button bsStyle=\"primary\">\r\n            Wczytaj turniej\r\n        </Button>\r\n    </LinkContainer>\r\n</ButtonGroup>","import {PageHeader} from \"react-bootstrap\";\r\nimport * as React from \"react\";\r\n\r\nexport default () => <PageHeader>Volleyball Tournament App</PageHeader>","import React from 'react'\r\nimport {Col, Grid, Row} from \"react-bootstrap\";\r\nimport Logo from \"../components/Logo\";\r\n\r\nfunction SingleColumnLayout(components) {\r\n\r\n    const {Content} = components;\r\n\r\n    class Component extends React.Component {\r\n\r\n        render() {\r\n            return <Grid>\r\n                <Row>\r\n                    <Col sm={8} smOffset={2}>\r\n                        <Logo/>\r\n                        <Content {...this.props}/>\r\n                    </Col>\r\n                </Row>\r\n            </Grid>\r\n        }\r\n    }\r\n\r\n    return Component;\r\n\r\n}\r\n\r\nexport default SingleColumnLayout;","import PropTypes from 'prop-types';\r\n\r\nimport * as React from \"react\";\r\nimport {Button, ControlLabel, FormControl, FormGroup} from \"react-bootstrap\";\r\n\r\nclass NewToruney extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTourneyCreation = this.handleTourneyCreation.bind(this);\r\n\r\n        this.state = {\r\n            value: ''\r\n        };\r\n\r\n    }\r\n\r\n    getValidationState() {\r\n        const length = this.state.value.length;\r\n        if (length > 0) return 'success';\r\n        return null;\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    handleTourneyCreation() {\r\n        return e => {\r\n            e.preventDefault();\r\n            this.props.createNewTourney(this.state.value);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <form\r\n            style={formStyle}\r\n            onSubmit={this.handleTourneyCreation()}>\r\n            <h2>Stwórz nowy turniej</h2>\r\n            <FormGroup\r\n                controlId='formBasicText'\r\n                validationState={this.getValidationState()}\r\n            >\r\n                <ControlLabel>Podaj nazwę turnieju</ControlLabel>\r\n                <FormControl\r\n                    type=\"text\"\r\n                    value={this.state.value}\r\n                    placeholder=\"Małopolski turniej siatkówki amatorskiej \"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <FormControl.Feedback/>\r\n            </FormGroup>\r\n            <Button type=\"submit\">Stwórz</Button>\r\n        </form>\r\n    }\r\n}\r\n\r\nconst formStyle = {\r\n    border: 'thin black solid',\r\n    padding: '20px'\r\n};\r\n\r\nNewToruney.propTypes = {\r\n    createNewTourney : PropTypes.func\r\n};\r\n\r\nexport default NewToruney;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Button, Form, FormControl, FormGroup, Glyphicon} from \"react-bootstrap\";\r\n\r\nimport '../css/button.css';\r\n\r\nconst spaceBetweenFormInputs = {marginBottom: '10px'};\r\n\r\nclass Group extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addTeam = this.addTeam.bind(this);\r\n        this.newTeamNameChange = this.newTeamNameChange.bind(this);\r\n        this.teamAdded = this.teamAdded.bind(this);\r\n        this.newTeamOnEnter = this.newTeamOnEnter.bind(this);\r\n\r\n        this.state = {newTeamName: '', teamNameWarning: ''}\r\n    }\r\n\r\n    newTeamNameChange(e) {\r\n        this.setState({newTeamName: e.target.value});\r\n    }\r\n\r\n    teamAdded() {\r\n        const newTeamName = this.state.newTeamName;\r\n        if(!newTeamName || newTeamName.length === 0) {\r\n            // this.setState({teamNameWarning: 'Nazwa drużyny nie może być pusta!'})\r\n            // TODO add sensible message\r\n            // TODO only unique team names!\r\n        } else if (this.props.teams.includes(newTeamName)){\r\n            // this.setState({teamNameWarning: 'Istnieje już drużyna o takiej nazwie!'})\r\n        } else {\r\n            this.props.teamAdded(this.props.groupLetter, this.state.newTeamName);\r\n            this.setState({newTeamName: ''})\r\n        }\r\n    }\r\n\r\n    newTeamOnEnter(e) {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.teamAdded()\r\n        }\r\n    }\r\n\r\n    nonEmpty() {\r\n        const length = this.state.newTeamName.length;\r\n        if (length > 0) return 'success';\r\n        return null;\r\n    }\r\n\r\n    addTeam() {\r\n        return <div>\r\n            <FormControl value={this.state.newTeamName}\r\n                         style={spaceBetweenFormInputs}\r\n                         key='newItem'\r\n                         onChange={this.newTeamNameChange}\r\n                         onKeyPress={this.newTeamOnEnter}\r\n            />\r\n            <Button onClick={this.teamAdded}>\r\n                <Glyphicon glyph='plus'/>\r\n                <span style={spaceBetweenFormInputs}>Dodaj drużynę</span>\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n    render() {\r\n        const {groupLetter, teams, teamAdded} = this.props;\r\n\r\n        return <div>\r\n            <h2>{groupLetter}</h2>\r\n            <Form>\r\n                <FormGroup\r\n                    validationState={this.nonEmpty()}\r\n                    controlId={groupLetter}>\r\n                    {groupItems(teams, groupLetter)}\r\n                    {teams && teams.length < 8 && this.addTeam(groupLetter, teamAdded)}\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nfunction groupItems(teams) {\r\n    return teams.map(name => teamItem(name));\r\n}\r\n\r\nfunction teamItem(name) {\r\n    return <FormControl readOnly style={{marginBottom: '10px'}} key={name} value={name}/>\r\n\r\n}\r\n\r\nGroup.propTypes = {\r\n    groupLetter: PropTypes.string,\r\n    teams: PropTypes.array,\r\n    teamAdded: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    groupLetter: 'A',\r\n    groups: [],\r\n    teamAdded: () => null\r\n};\r\n\r\nexport default Group;","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react'\r\nimport {Col, Grid, Row} from \"react-bootstrap\";\r\nimport Logo from \"./Logo\";\r\nimport Group from \"./Group\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport Glyphicon from \"react-bootstrap/es/Glyphicon\";\r\n\r\n// TODO extract this css (is copied from other file)\r\n// TODO bigger space between plus and text\r\n// TODO try to bettern align 'dodaj grupę' button\r\nconst spaceBetweenFormInputs = {marginBottom: '10px'};\r\n\r\nfunction fourGroups(groups, teamAdded, from = 0, to = 4) {\r\n    return groups.slice(from, to).map(group =>\r\n        <Col key={group.groupLetter} sm={3}>\r\n            <Group\r\n                groupLetter={group.groupLetter}\r\n                teams={group.teams}\r\n                teamAdded={teamAdded}/>\r\n        </Col>);\r\n}\r\n\r\nclass Groups extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {groups, teamAdded} = this.props;\r\n\r\n        console.log(groups);\r\n\r\n\r\n        const amountOfGroups = groups.length;\r\n        return <Grid>\r\n            <Row>\r\n                <Col sm={8} smOffset={2}>\r\n                    <Logo/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {fourGroups(groups, teamAdded)}\r\n                {amountOfGroups < 4 && addGroup(this.props.addGroup)}\r\n            </Row>\r\n            <Row>\r\n                {fourGroups(groups, teamAdded, 4, 8)}\r\n                {(amountOfGroups >= 4 && amountOfGroups < 8) && addGroup(this.props.addGroup)}\r\n            </Row>\r\n        </Grid>\r\n    }\r\n\r\n}\r\n\r\nfunction addGroup(groupAdded) {\r\n    return <Col sm={3}>\r\n        <Button style={{marginTop: '20px'}} onClick={groupAdded}>\r\n            <Glyphicon glyph='plus'/>\r\n            <span style={spaceBetweenFormInputs}>Dodaj grupę</span>\r\n        </Button>\r\n    </Col>\r\n\r\n}\r\n\r\nGroups.propTypes = {\r\n    groups: PropTypes.array,\r\n    addGroup: PropTypes.func,\r\n    tourneyName: PropTypes.string\r\n};\r\n\r\nGroup.defaultProps = {\r\n    tourneyName: 'Turniej',\r\n    groups: [],\r\n    addGroup: () => null\r\n};\r\n\r\nexport default Groups;","import React, {Component} from 'react';\n\nimport './App.css'\n\nimport {Redirect, Route, Router, Switch} from 'react-router-dom'\nimport history from './helpers/history';\n\nimport LoadTourney from \"./components/LoadTourney\";\nimport SelectionPage from \"./components/SelectionPage\";\n\nimport SingleColumnLayout from \"./hoc/SingleColumnLayout\";\nimport NewTourney from \"./components/NewTourney\";\nimport FourColumnLayout from \"./components/Groups\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.addGroup = this.addGroup.bind(this);\n        this.pickTourneyName = this.pickTourneyName.bind(this);\n        this.addTeam = this.addTeam.bind(this);\n\n        this.state = {groups: [{groupLetter: \"A\", teams: []}]};\n    }\n\n    addGroup() {\n        let lastGroup = this.state.groups.map(it => it.groupLetter).slice().pop();\n        let newGroupLetter = String.fromCharCode(lastGroup.charCodeAt(0) + 1);\n        const groups = [...this.state.groups, {groupLetter: newGroupLetter, teams: []}];\n        this.setState({groups: groups})\n    }\n\n    addTeam(groupName, teamName) {\n        const group = this.state.groups.find(byName(groupName));\n\n        const newTeams = group.teams.slice();\n        newTeams.push(teamName);\n        const groupWithAddedTeam = {...group, teams: newTeams};\n\n        const newGroups = this.state.groups.slice();\n\n        const toReplace = newGroups.findIndex(byName(groupName));\n\n        newGroups[toReplace] = groupWithAddedTeam;\n\n        this.setState({groups: newGroups})\n    }\n\n    pickTourneyName(toruneyName) {\n        this.setState({tourneyName: toruneyName});\n    }\n\n    createTourneyAndRedirect(history) {\n        return (tourneyName) => {\n            this.pickTourneyName(tourneyName);\n            history.push('/tourney/groups')\n        }\n    }\n\n    render() {\n\n        return <Router history={history}>\n            <div>\n                <Switch>\n                    <Route path='/tourney/new'\n                           render={props =>\n                               <LayoutNewTourney createNewTourney={this.createTourneyAndRedirect(history)}/>\n                           }\n                    />\n                    <Route path='/tourney/load' component={SingleColumnLayout({Content: LoadTourney})}/>\n                    <Route path='/tourney/groups'\n                           render={props =>\n                               <FourColumnLayout addGroup={this.addGroup}\n                                                 tourneyName={this.state.tourneyName}\n                                                 groups={this.state.groups}\n                                                 teamAdded={this.addTeam}/>\n                           }\n                    />\n                    <Route path='/' component={SingleColumnLayout({Content: SelectionPage})}/>\n                    <Redirect from='*' to='/'/>\n                </Switch>\n            </div>\n        </Router>\n    }\n}\n\nfunction byName(teamName) {\n    return (it) => it.groupLetter === teamName;\n}\n\n\nconst LayoutNewTourney = SingleColumnLayout({Content: NewTourney});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap3/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}