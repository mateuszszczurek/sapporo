{"version":3,"sources":["helpers/history.js","components/LoadTourney.jsx","components/SelectionPage.jsx","components/Logo.jsx","hoc/SingleColumnLayout.jsx","components/NewTourney.jsx","components/Group.jsx","components/TourneyName.jsx","components/Groups.jsx","components/Set.jsx","components/TeamDropdownSelect.jsx","components/AddMatch.jsx","helpers/validate.js","helpers/matches.js","components/MatchesDetails.jsx","components/GroupSummaryTable.jsx","components/TourneyDetails.jsx","components/TourneyState.jsx","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","FieldGroup","_ref","id","label","props","Object","objectWithoutProperties","react","Form","Group","controlId","Label","FormControl","LoadTourney","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fileChange","bind","assertThisInitialized","onLoadTourney","state","fileName","e","setState","target","value","file","files","preventDefault","reader","FileReader","loadTourney","onload","event","result","readAsText","className","onSubmit","type","onChange","Button","React","SelectionPage","ButtonGroup","lib","to","variant","pageHeader","paddingBottom","margin","borderBottom","inlinedHeader","display","Logo","style","process","SingleColumnLayout","inputs","componentSpan","arguments","length","undefined","componentOffset","Content","_React$Component","Component","apply","inherits","createClass","key","react_default","a","createElement","Container","Row","Col","md","span","offset","NewToruney","context","handleChange","handleTourneyCreation","_this2","trim","createNewTourney","Control","placeholder","addTeam","newTeamNameChange","teamAdded","newTeamOnEnter","newTeamName","teamNameWarning","teams","includes","groupLetter","onKeyPress","onClick","fa","_this$props","FormGroup","map","name","readOnly","marginBottom","teamItem","groupItems","defaultProps","groups","TourneyName","tourneyName","Groups","approveGroups","groupAdded","amountOfGroups","group","sm","components_Group","fourGroups","addGroup","block","MissingPoints","Feedback","CannotHaveDraw","Set","onSetChange","isDraw","firstTeamResult","secondTeamResult","creationAttempted","validationResult","setNumber","firstTeamMissingPoints","secondTeamMissingPoints","hasDraw","as","zeroOrNumberOrEmpty","allowEmptyOrNumber","isInvalid","callback","test","parseInt","TeamDropdownSelect","onTeamSelected","selectedTeam","problem","teamSelected","allTeams","teamName","Team","notSelected","NotSelectedFeedback","problems","AddMatch","teamsSelection","sets","validationResults","selectionProblems","firstTeamSelected","secondTeamSelected","teamSelectionFor","sameItemSelected","onMatchAdded","onSetChanged","selectionId","set","assign","objectSpread","defineProperty","newSets","selection","find","it","keys","forEach","results","validateSets","firstTeam","secondTeam","_this3","alreadySelectedIndex","findIndex","toBeChanged","alreadySelected","newSelection","newSelections","filter","push","index","eventKey","_this4","components_TeamDropdownSelect","Array","from","val","components_Set","matchSummary","match","winningSetsFirstTeam","winningSetsSecondTeam","Error","firstTeamTotalPoints","reduce","b","secondTeamTotalPoints","firstTeamSetsWon","secondTeamSetsWon","draw","winner","looser","firstTeamName","secondTeamName","firstTeamSetsLost","secondTeamSetsLost","safeRatio","divisor","dividend","groupSummary","matches","team","matchesPlayed","wins","looses","draws","points","summary","sumOfSets","sum","setsWon","pointsWon","pointsLost","amountOfSetsWon","setsLost","setsRatio","pointsRatio","setsSummary","matchPoints","matchesWon","matchesLost","matchesDraw","MatchesDetails","removeMatch","ResultRow","join","setDetails","color","gridOptions","suppressDragLeaveHidesColumns","suppressMovableColumns","suppressLoadingOverlay","suppressNoRowsOverlay","columnDefs","headerName","field","width","cellClass","autoHeight","groupId","marryChildren","children","suppressMovable","valueFormatter","twoDigits","lockPosition","parseFloat","toFixed","GroupSummaryTable","onGridReady","params","api","sizeColumnsToFit","sort","resultsSort","overflow","main","rowData","TourneyDetails","accordion","activeKey","rc_collapse_es","header","components_GroupSummaryTable","components_MatchesDetails","matchId","components_AddMatch","TourneyState","saveTourneyState","groupChosen","Navbar","bg","onSelect","Nav","GroupItems","activeGroup","inline","components_TourneyDetails","Link","active","App","pickTourneyName","loadTourneyState","redirectToGroups","proceedToState","currentlyDisplayedGroup","history","JSON","parse","blob","Blob","stringify","concat","saveAs","newGroup","newGroups","slice","groupToReplace","groupIndex","newMatches","uuidv4","toConsumableArray","lastGroup","pop","newGroupLetter","String","fromCharCode","charCodeAt","groupName","byName","newTeams","groupWithAddedTeam","toReplace","toruneyName","_this5","Router","Switch","Route","path","render","LayoutNewTourney","createTourneyAndRedirect","LayoutLoadTourney","components_Groups","LayoutTourneyState","component","Redirect","NewTourney","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.057900ec.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Form, FormControl} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\n\r\nclass LoadTourney extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.fileChange = this.fileChange.bind(this);\r\n        this.onLoadTourney = this.onLoadTourney.bind(this);\r\n\r\n        this.state = {fileName: ''}\r\n    }\r\n\r\n    fileChange(e) {\r\n        this.setState({fileName: e.target.value, file: e.target.files[0]});\r\n    }\r\n\r\n    onLoadTourney(e) {\r\n        e.preventDefault();\r\n\r\n        if(this.state.file === '') {\r\n            return;\r\n        }\r\n\r\n        if (this.state.file) {\r\n            const file = this.state.file;\r\n            const reader = new FileReader();\r\n\r\n            const loadTourney = this.props.loadTourney;\r\n\r\n            reader.onload = function (event) {\r\n                loadTourney(event.target.result);\r\n            };\r\n\r\n            reader.readAsText(file);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Form className={'border border-primary p-3'}\r\n                     onSubmit={this.onLoadTourney}>\r\n            <h2 className='border-bottom mb-3'>Wczytaj istniejący turniej</h2>\r\n            <Form.Group controlId=\"formBasicText\">\r\n                <FieldGroup\r\n                    type=\"file\"\r\n                    label=\"Wybierz plik z zapisanym turniejem\"\r\n                    value={this.state.fileName}\r\n                    onChange={this.fileChange}\r\n                />\r\n\r\n            </Form.Group>\r\n            <Button type=\"submit\">Wczytaj</Button>\r\n        </Form>\r\n    }\r\n}\r\n\r\nfunction FieldGroup({id, label, ...props}) {\r\n    return (\r\n        <Form.Group controlId={id}>\r\n            <Form.Label>{label}</Form.Label>\r\n            <FormControl {...props} />\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default LoadTourney;\r\n\r\nLoadTourney.propTypes = {\r\n    loadTourney: PropTypes.func\r\n};","import {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport * as React from \"react\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n\r\n\r\nexport default () => <ButtonGroup className='d-flex'>\r\n    <LinkContainer to='/tourney/new'>\r\n        <Button variant=\"primary\">\r\n            Swtórz nowy turniej\r\n        </Button>\r\n    </LinkContainer>\r\n    <LinkContainer to='/tourney/load'>\r\n        <Button variant=\"primary\">\r\n            Wczytaj turniej\r\n        </Button>\r\n    </LinkContainer>\r\n</ButtonGroup>","import * as React from \"react\";\r\n\r\nconst pageHeader = {\r\n    paddingBottom: '9px',\r\n    'margin': '40px 0 20px',\r\n    borderBottom: '1px solid #eee',\r\n};\r\n\r\nconst inlinedHeader = {display: 'inline'};\r\n\r\nexport default () =>\r\n    <div style={pageHeader}>\r\n        <h1 style={inlinedHeader}>Volleyball Tournament App+</h1>\r\n        <span className='float-right pt-3'>\r\n            <small><i><b>{process.env.REACT_APP_NAME}</b> {process.env.REACT_APP_VERSION}</i></small>\r\n        </span>\r\n    </div>\r\n\r\n","import React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Logo from \"../components/Logo\";\r\n\r\nfunction SingleColumnLayout(inputs, componentSpan = 8, componentOffset = 2) {\r\n\r\n    const {Content} = inputs;\r\n\r\n    class Component extends React.Component {\r\n\r\n        render() {\r\n            return <Container>\r\n                <Row>\r\n                    <Col md={{span: 8, offset: 2}}>\r\n                        <Logo/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{span: componentSpan, offset: componentOffset}}>\r\n                        <Content {...this.props}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        }\r\n    }\r\n\r\n    return Component;\r\n\r\n}\r\n\r\nexport default SingleColumnLayout;","import PropTypes from 'prop-types';\r\n\r\nimport * as React from \"react\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\nclass NewToruney extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTourneyCreation = this.handleTourneyCreation.bind(this);\r\n\r\n        this.state = {\r\n            value: ''\r\n        };\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    handleTourneyCreation() {\r\n        return e => {\r\n            e.preventDefault();\r\n            if (!this.state.value || !this.state.value.trim()) {\r\n                //TODO make it common util for checking empty string and preventing form action (same as for group addition)\r\n            } else {\r\n                this.props.createNewTourney(this.state.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Form className={'border border-primary p-3'}\r\n                     onSubmit={this.handleTourneyCreation()}>\r\n            <h2>Stwórz nowy turniej</h2>\r\n            <Form.Group controlId='formBasicText'>\r\n                <Form.Label>Podaj nazwę turniej</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    value={this.state.value}\r\n                    placeholder=\"Małopolski turniej siatkówki amatorskiej \"\r\n                    onChange={this.handleChange}\r\n                />\r\n            </Form.Group>\r\n            <div>\r\n                <Button type=\"submit\">Stwórz</Button>\r\n            </div>\r\n        </Form>\r\n    }\r\n}\r\n\r\nNewToruney.propTypes = {\r\n    createNewTourney: PropTypes.func\r\n};\r\n\r\nexport default NewToruney;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Button, Form, FormControl, FormGroup} from \"react-bootstrap\";\r\n\r\nimport {FaPlus} from \"react-icons/fa/index\";\r\n\r\nclass Group extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addTeam = this.addTeam.bind(this);\r\n        this.newTeamNameChange = this.newTeamNameChange.bind(this);\r\n        this.teamAdded = this.teamAdded.bind(this);\r\n        this.newTeamOnEnter = this.newTeamOnEnter.bind(this);\r\n\r\n        this.state = {newTeamName: '', teamNameWarning: ''}\r\n    }\r\n\r\n    newTeamNameChange(e) {\r\n        this.setState({newTeamName: e.target.value});\r\n    }\r\n\r\n    teamAdded() {\r\n        const newTeamName = this.state.newTeamName;\r\n        if(!newTeamName || newTeamName.trim().length === 0) {\r\n            // this.setState({teamNameWarning: 'Nazwa drużyny nie może być pusta!'})\r\n            // TODO add sensible message\r\n            // TODO only unique team names!\r\n        } else if (this.props.teams.includes(newTeamName)){\r\n            // this.setState({teamNameWarning: 'Istnieje już drużyna o takiej nazwie!'})\r\n        } else {\r\n            this.props.teamAdded(this.props.groupLetter, this.state.newTeamName);\r\n            this.setState({newTeamName: ''})\r\n        }\r\n    }\r\n\r\n    newTeamOnEnter(e) {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.teamAdded()\r\n        }\r\n    }\r\n\r\n    addTeam() {\r\n        return <div>\r\n            <FormControl value={this.state.newTeamName}\r\n                         className='mb-2'\r\n                         key='newItem'\r\n                         onChange={this.newTeamNameChange}\r\n                         onKeyPress={this.newTeamOnEnter}\r\n            />\r\n            <Button onClick={this.teamAdded} >\r\n                <FaPlus  />\r\n                <span>Dodaj drużynę</span>\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n    render() {\r\n        const {groupLetter, teams, teamAdded} = this.props;\r\n\r\n        return <div>\r\n            <h2>Grupa {groupLetter}</h2>\r\n            <Form>\r\n                <FormGroup>\r\n                    {groupItems(teams, groupLetter)}\r\n                    {teams && teams.length < 8 && this.addTeam(groupLetter, teamAdded)}\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nfunction groupItems(teams) {\r\n    return teams.map(name => teamItem(name));\r\n}\r\n\r\nfunction teamItem(name) {\r\n    return <FormControl readOnly style={{marginBottom: '10px'}} key={name} value={name}/>\r\n\r\n}\r\n\r\nGroup.propTypes = {\r\n    groupLetter: PropTypes.string,\r\n    teams: PropTypes.array,\r\n    teamAdded: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    groupLetter: 'A',\r\n    groups: [],\r\n    teamAdded: () => null\r\n};\r\n\r\nexport default Group;","import React from \"react\";\r\n\r\nexport default ({tourneyName}) =>  <h3 className='pb-3'>{tourneyName}</h3>;","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Logo from \"./Logo\";\r\nimport Group from \"./Group\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport {FaPlus} from \"react-icons/fa/index\";\r\nimport TourneyName from \"./TourneyName\";\r\n\r\n// TODO extract this css (is copied from other file)\r\n// TODO bigger space between plus and text\r\n// TODO try to better align 'dodaj grupę' button\r\n// TODO check that there is at least one group with at least two teams\r\n\r\nfunction fourGroups(groups, teamAdded) {\r\n    return groups.map(group =>\r\n        <Col key={group.groupLetter} sm={3}>\r\n            <Group\r\n                groupLetter={group.groupLetter}\r\n                teams={group.teams}\r\n                teamAdded={teamAdded}/>\r\n        </Col>);\r\n}\r\n\r\nclass Groups extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.approveGroups = this.approveGroups.bind(this);\r\n    }\r\n\r\n    approveGroups() {\r\n        this.props.approveGroups();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {groups, teamAdded, tourneyName} = this.props;\r\n\r\n        const amountOfGroups = groups.length;\r\n        return <Container>\r\n            <Row>\r\n                <Col md={{span: 8, offset: 2}}>\r\n                    <Logo/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={{span: 8}}>\r\n                   <TourneyName tourneyName={tourneyName}/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {fourGroups(groups, teamAdded)}\r\n                {(amountOfGroups < 8) && addGroup(this.props.addGroup)}\r\n            </Row>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <Button block onClick={this.approveGroups}>Zatwierdź grupy</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    }\r\n\r\n}\r\n\r\nfunction addGroup(groupAdded) {\r\n    return <Col sm={3}>\r\n        <Button className='mb-3' onClick={groupAdded}>\r\n            <FaPlus/>\r\n            <span>Dodaj grupę</span>\r\n        </Button>\r\n    </Col>\r\n\r\n}\r\n\r\nGroups.propTypes = {\r\n    groups: PropTypes.array,\r\n    addGroup: PropTypes.func,\r\n    tourneyName: PropTypes.string,\r\n    approveGroups: PropTypes.func\r\n};\r\n\r\nGroup.defaultProps = {\r\n    tourneyName: 'Turniej',\r\n    groups: [],\r\n    addGroup: () => null,\r\n    approveGroups: () => null,\r\n};\r\n\r\nexport default Groups;","import PropTypes from 'prop-types';\r\n\r\nimport {Col} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\nimport React from \"react\";\r\n\r\nfunction MissingPoints() {\r\n    return <Form.Control.Feedback type='invalid'>\r\n        Wprowadź liczbę punktów\r\n    </Form.Control.Feedback>;\r\n}\r\n\r\nfunction CannotHaveDraw() {\r\n    return <Form.Control.Feedback type='invalid'>\r\n        Remis niedozwolony\r\n    </Form.Control.Feedback>;\r\n}\r\n\r\nclass Set extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onSetChange = this.onSetChange.bind(this);\r\n    }\r\n\r\n    onSetChange() {\r\n        this.setState(\r\n            {\r\n                isDraw: this.props.firstTeamResult === this.props.secondTeamResult\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            creationAttempted, validationResult,\r\n            setNumber, firstTeamResult,\r\n            secondTeamResult, onSetChange\r\n        } = this.props;\r\n\r\n        const firstTeamMissingPoints = creationAttempted && (validationResult === 'firstTeamResultMissing');\r\n        const secondTeamMissingPoints = creationAttempted && (validationResult === 'secondTeamResultMissing');\r\n        const hasDraw = creationAttempted && (validationResult === 'isADraw');\r\n        return <Form.Row key={setNumber}>\r\n                    <Form.Group as={Col} md={1}>\r\n                        <h4 key={setNumber}>{setNumber} set</h4>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md={{span: 2, offset: 1}}>\r\n                        <Form.Control as='input'\r\n                                      type='text'\r\n                                      value={zeroOrNumberOrEmpty(firstTeamResult)}\r\n                                      onChange={e => allowEmptyOrNumber(e, onSetChange(setNumber, 'first-team'))}\r\n                                      isInvalid={firstTeamMissingPoints || hasDraw}\r\n                        />\r\n                        {firstTeamMissingPoints && <MissingPoints/>}\r\n                        {hasDraw && <CannotHaveDraw/>}\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}\r\n                                md={{span: 2, offset: 1}}>\r\n                        <h5 className='text-center'>:</h5>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md={{span: 2, offset: 1}}>\r\n                        <Form.Control as='input'\r\n                                      type='text'\r\n                                      value={zeroOrNumberOrEmpty(secondTeamResult)}\r\n                                      onChange={e => allowEmptyOrNumber(e, onSetChange(setNumber, 'second-team'))}\r\n                                      isInvalid={secondTeamMissingPoints || hasDraw}\r\n\r\n                        />\r\n                        {secondTeamMissingPoints && <MissingPoints/>}\r\n                    </Form.Group>\r\n        </Form.Row>\r\n    }\r\n\r\n}\r\n\r\nfunction allowEmptyOrNumber(e, callback) {\r\n    const number = /^[0-9\\b]+$/;\r\n\r\n    const value = e.target.value;\r\n    e.target.value === '' ? callback(null) : number.test(value) && callback(parseInt(value));\r\n}\r\n\r\nfunction zeroOrNumberOrEmpty(firstTeamResult) {\r\n    return firstTeamResult === 0 ? firstTeamResult : firstTeamResult || '';\r\n}\r\n\r\n\r\nSet.propTypes = {\r\n\r\n    firstTeam: PropTypes.string,\r\n    secondTeam: PropTypes.string,\r\n    setNumber: PropTypes.number,\r\n    firstTeamResult: PropTypes.number,\r\n    secondTeamResult: PropTypes.number,\r\n    onSetChange: PropTypes.func,\r\n    validationResult: PropTypes.string,\r\n    creationAttempted: PropTypes.bool\r\n\r\n};\r\n\r\nSet.defaultProps = {\r\n\r\n    firstTeamResult: null,\r\n    secondTeamResult: null,\r\n    creationAttempted: false\r\n\r\n};\r\n\r\nexport default Set;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport Form from \"react-bootstrap/es/Form\";\r\n\r\nclass TeamDropdownSelect extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onTeamSelected = this.onTeamSelected.bind(this);\r\n    }\r\n\r\n    onTeamSelected(e) {\r\n        const selectedTeam = e.target.value;\r\n\r\n        if (selectedTeam !== 'Wybierz drużynę') {\r\n            this.props.onTeamSelected(selectedTeam);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {problem, teamSelected, onTeamSelected, allTeams} = this.props;\r\n\r\n        return <Form.Group>\r\n            <Form.Control as=\"select\"\r\n                          isInvalid={problem}\r\n                          value={teamSelected || 'Wybierz drużynę'}\r\n                          onChange={e => onTeamSelected(e.target.value)}\r\n            >\r\n                {!teamSelected && <option>Wybierz drużynę</option>}\r\n                {allTeams.map(teamName => <Team key={teamName} teamName={teamName}/>)}\r\n            </Form.Control>\r\n            {problem && problem.notSelected && <NotSelectedFeedback/>}\r\n        </Form.Group>\r\n    }\r\n\r\n}\r\n\r\nfunction NotSelectedFeedback() {\r\n    return <Form.Control.Feedback type='invalid'>\r\n        Proszę wybrać drużynę\r\n    </Form.Control.Feedback>;\r\n}\r\n\r\nTeamDropdownSelect.propTypes = {\r\n    teamSelected: PropTypes.string,\r\n    onTeamSelected: PropTypes.func,\r\n    allTeams: PropTypes.array,\r\n    problems: PropTypes.object\r\n};\r\n\r\nTeamDropdownSelect.defaultProps = {\r\n    teamSelected: '',\r\n    onTeamSelected: () => {\r\n    },\r\n    allTeams: [],\r\n    problems: {}\r\n};\r\n\r\nfunction Team({teamName}) {\r\n    return <option>{teamName}</option>\r\n}\r\n\r\nexport default TeamDropdownSelect;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport {Col} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport Set from \"./Set\";\r\nimport {validateSets} from \"../helpers/validate\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\nimport TeamDropdownSelect from \"./TeamDropdownSelect\";\r\n\r\nclass AddMatch extends React.Component {\r\n\r\n    // TODO - add version number\r\n    // TODO - empty groups are not displayed and considered\r\n    // TODO - remove duplication for dropdowns\r\n    // TODO - shouldn't be able to select same team\r\n    // TODO refactor and numbers only\r\n    // TODO handle switching on 'same-selection'\r\n    // TODO validate that inputs are numbers!\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {teamsSelection: [], sets: {}, validationResults: {}, selectionProblems: {}};\r\n\r\n        this.firstTeamSelected = this.firstTeamSelected.bind(this);\r\n        this.secondTeamSelected = this.secondTeamSelected.bind(this);\r\n        this.onTeamSelected = this.onTeamSelected.bind(this);\r\n        this.teamSelectionFor = this.teamSelectionFor.bind(this);\r\n        this.sameItemSelected = this.sameItemSelected.bind(this);\r\n        this.onMatchAdded = this.onMatchAdded.bind(this);\r\n        this.onSetChanged = this.onSetChanged.bind(this);\r\n    }\r\n\r\n    onSetChanged(setNumber, selectionId) {\r\n        return value => {\r\n            const set = Object.assign({}, {\r\n                ...this.state.sets[setNumber],\r\n                [selectionId]: value\r\n            });\r\n            const newSets = Object.assign({}, {...this.state.sets});\r\n            newSets[setNumber] = set;\r\n            this.setState({sets: newSets});\r\n        }\r\n    }\r\n\r\n    onMatchAdded() {\r\n        if (this.state.teamsSelection.length < 2) {\r\n            const selection = this.state.teamsSelection.find(it => it.selectionId === 'first-team');\r\n\r\n            const selectionProblems = {...this.state.selectionProblems};\r\n            if (!selection) {\r\n                selectionProblems['first-team'] = {notSelected: true};\r\n            }\r\n            const secondSelection = this.state.teamsSelection.find(it => it.selectionId === 'second-team');\r\n            if (!secondSelection) {\r\n                selectionProblems['second-team'] = {notSelected: true};\r\n            }\r\n            // todo - check if we don't have unfilled sets\r\n            // todo - check if we have draws\r\n            this.setState({selectionProblems: selectionProblems});\r\n            return;\r\n        }\r\n\r\n        const validationResults = validateSets(this.state.sets);\r\n\r\n        if (Object.keys(validationResults).length > 0) {\r\n            this.setState({validationResults: validationResults, creationAttempted: true});\r\n            return;\r\n        }\r\n\r\n        const firstTeam = this.state.teamsSelection[0].selectedTeam;\r\n        const secondTeam = this.state.teamsSelection[1].selectedTeam;\r\n\r\n        // TODO flush state from set - make selection - unselected\r\n        this.props.onMatchAdded(firstTeam, secondTeam, this.state.sets);\r\n        this.setState({sets: [], teamsSelection: [], creationAttempted: false})\r\n    }\r\n\r\n    teamSelectionFor(selectionId) {\r\n        const selection = this.state.teamsSelection.find(it => it.selectionId === selectionId);\r\n        if (!selection) {\r\n            return \"\";\r\n        } else {\r\n            return selection.selectedTeam;\r\n        }\r\n    }\r\n\r\n    onTeamSelected(selectionId) {\r\n        return selectedTeam => {\r\n            const alreadySelectedIndex = this.state.teamsSelection.findIndex(it => it.selectedTeam === selectedTeam);\r\n            if (alreadySelectedIndex !== -1) {\r\n\r\n                const toBeChanged = this.state.teamsSelection.find(it => it.selectionId === selectionId);\r\n\r\n                if(!toBeChanged) return;\r\n\r\n                const alreadySelected = this.state.teamsSelection[alreadySelectedIndex];\r\n\r\n                const newSelection = [\r\n                    {selectionId: selectionId, selectedTeam: selectedTeam},\r\n                    {selectionId: alreadySelected.selectionId, selectedTeam: toBeChanged.selectedTeam}\r\n                ];\r\n\r\n                this.setState({teamsSelection: newSelection, selectionProblems : {}});\r\n            } else {\r\n                const newSelection = {selectionId: selectionId, selectedTeam: selectedTeam};\r\n\r\n                const newSelections = this.state.teamsSelection.filter(it => it.selectionId !== selectionId);\r\n                newSelections.push(newSelection);\r\n\r\n                const selectionProblems = {...this.state.selectionProblems};\r\n                selectionProblems[selectionId] = null;\r\n\r\n                this.setState({teamsSelection: newSelections, selectionProblems : selectionProblems});\r\n            }\r\n        }\r\n    }\r\n\r\n    sameItemSelected(index, selectedTeam) {\r\n        return this.state.teamsSelection[index].selectedTeam === selectedTeam;\r\n    }\r\n\r\n    firstTeamSelected(eventKey) {\r\n        this.setState({firstTeamSelected: eventKey});\r\n    }\r\n\r\n    secondTeamSelected(eventKey) {\r\n        this.setState({secondTeamSelected: eventKey});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {group} = this.props;\r\n\r\n        return <Form>\r\n            <Form.Row>\r\n                <Form.Group as={Col} md={{span: 4, offset: 1}}>\r\n                    <TeamDropdownSelect\r\n                        allTeams={group.teams}\r\n                        problem={this.state.selectionProblems['first-team']}\r\n                        teamSelected={this.teamSelectionFor('first-team')}\r\n                        onTeamSelected={this.onTeamSelected('first-team')}\r\n                    />\r\n                </Form.Group>\r\n                <Col md={2}>\r\n                    <h3 className='text-center'>vs</h3>\r\n                </Col>\r\n                <Form.Group as={Col} md={4}>\r\n                    <TeamDropdownSelect\r\n                        allTeams={group.teams}\r\n                        problem={this.state.selectionProblems['second-team']}\r\n                        teamSelected={this.teamSelectionFor('second-team')}\r\n                        onTeamSelected={this.onTeamSelected('second-team')}\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n            {Array.from(new Array(5), (val, index) => index + 1).map(setNumber =>\r\n                <Set key={setNumber}\r\n                     setNumber={setNumber}\r\n                     firstTeam={'first-team'}\r\n                     secondTeam={'second-team'}\r\n                     creationAttempted={this.state.creationAttempted}\r\n                     firstTeamResult={this.state.sets[setNumber] ? this.state.sets[setNumber]['first-team'] : null}\r\n                     secondTeamResult={this.state.sets[setNumber] ? this.state.sets[setNumber]['second-team'] : null}\r\n                     onSetChange={this.onSetChanged}\r\n                     validationResult={this.state.validationResults[setNumber]}/>\r\n            )}\r\n            <Row className={'mt-3'}>\r\n                <Col>\r\n                    <Button\r\n                        onClick={e => {\r\n                            e.preventDefault();\r\n                            this.onMatchAdded()\r\n                        }}\r\n                        className='float-right'\r\n                        type=\"submit\">Zatwierdź mecz\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    }\r\n\r\n}\r\n\r\nAddMatch.propTypes = {\r\n\r\n    group: PropTypes.object.isRequired\r\n\r\n};\r\n\r\nexport default AddMatch;","export function validateSets(sets) {\r\n\r\n    const validationResults = {};\r\n\r\n    Object.keys(sets).forEach(key => {\r\n        const results = sets[key];\r\n\r\n        if(!results['first-team'] && !results['second-team']) {\r\n            return;\r\n        }\r\n\r\n        if(!results['first-team']) {\r\n            validationResults[key] = 'firstTeamResultMissing'\r\n        }\r\n\r\n        if(!results['second-team']) {\r\n            validationResults[key] = 'secondTeamResultMissing'\r\n        }\r\n\r\n        if(results['first-team'] === results['second-team']) {\r\n            validationResults[key] = 'isADraw'\r\n        }\r\n    });\r\n\r\n    return validationResults;\r\n\r\n}","export function matchSummary(match) {\n\n    const sets = Object.keys(match.sets).map(key => match.sets[key]);\n\n    const winningSetsFirstTeam = sets.filter(set => set['first-team'] > set['second-team']);\n    const winningSetsSecondTeam = sets.filter(set => set['first-team'] < set['second-team']);\n\n    const drawSets = sets.filter(set => set['first-team'] === set['second-team']).length;\n\n    if (drawSets > 0) {\n        throw new Error(\"Encountered sets with draw!\")\n    }\n\n    const firstTeamTotalPoints = sets.map(set => set['first-team']).reduce((a, b) => a + b, 0);\n    const secondTeamTotalPoints = sets.map(set => set['second-team']).reduce((a, b) => a + b, 0);\n\n    const firstTeamSetsWon = winningSetsFirstTeam.length;\n    const secondTeamSetsWon = winningSetsSecondTeam.length;\n\n    function matchResult() {\n        if (firstTeamSetsWon === secondTeamSetsWon) {\n            return {draw: true}\n        } else if (firstTeamSetsWon > secondTeamSetsWon) {\n            return {winner: match.firstTeam, looser: match.secondTeam};\n        } else {\n            return {winner: match.secondTeam, looser: match.firstTeam}\n        }\n    }\n\n    const result = matchResult();\n\n    return {\n        firstTeamTotalPoints: firstTeamTotalPoints,\n        secondTeamTotalPoints: secondTeamTotalPoints,\n        firstTeamName: match.firstTeam,\n        secondTeamName: match.secondTeam,\n        firstTeamSetsWon: firstTeamSetsWon,\n        secondTeamSetsWon: secondTeamSetsWon,\n        firstTeamSetsLost: secondTeamSetsWon,\n        secondTeamSetsLost: firstTeamSetsWon,\n        sets: sets,\n        ...result\n    }\n\n}\n\nfunction safeRatio(divisor, dividend) {\n    return divisor === 0 ? null : (dividend) / (divisor);\n}\n\nfunction setsSummary(team, matches) {\n\n    const sumOfSets = matches.map(it => it.sets.length).reduce((sum, value) => sum + value, 0);\n\n    const setsWon = matches.map(it => it.firstTeamName === team ? it.firstTeamSetsWon : it.secondTeamSetsWon);\n\n    const pointsWon = matches\n        .map(it => it.firstTeamName === team ? it.firstTeamTotalPoints : it.secondTeamTotalPoints)\n        .reduce((a, b) => a + b, 0);\n\n    const pointsLost = matches\n        .map(it => it.firstTeamName === team ? it.secondTeamTotalPoints : it.firstTeamTotalPoints)\n        .reduce((a, b) => a + b, 0);\n\n    const amountOfSetsWon = setsWon.reduce((a, b) => a + b, 0);\n\n    const setsLost = sumOfSets - amountOfSetsWon;\n\n    const setsRatio = safeRatio(setsLost, amountOfSetsWon);\n\n    return {\n        teamName: team,\n        setsWon: amountOfSetsWon,\n        setsLost: setsLost,\n        setsRatio: setsRatio,\n        pointsWon: pointsWon,\n        pointsLost: pointsLost,\n        pointsRatio: safeRatio(pointsLost, pointsWon)\n    }\n\n}\n\nexport function groupSummary(matches, teams) {\n\n    return teams.map(team => {\n\n        const matchesPlayed = matches\n            .filter(match => match.firstTeam === team || match.secondTeam === team)\n            .map(match => matchSummary(match));\n\n        const wins = matchesPlayed.filter(match => match.winner === team).length;\n        const looses = matchesPlayed.filter(match => match.looser === team).length;\n        const draws = matchesPlayed.filter(match => match.draw === true).length;\n\n        const points = (wins * 2) + (draws * 1);\n\n        const summary = setsSummary(team, matchesPlayed);\n\n        return {\n            team: team,\n            matchPoints: points,\n            matchesPlayed: matchesPlayed.length,\n            matchesWon: wins,\n            matchesLost: looses,\n            matchesDraw: draws,\n            setsWon: summary.setsWon,\n            setsLost: summary.setsLost,\n            setsRatio: summary.setsRatio,\n            pointsWon: summary.pointsWon,\n            pointsLost: summary.pointsLost,\n            pointsRatio: summary.pointsRatio\n        };\n    });\n}\n\nexport function resultsSort(summary) {\n\n    return summary.sort(function sortSummary(firstTeam, secondTeam) {\n            if (firstTeam.matchPoints > secondTeam.matchPoints) return -1;\n            if (firstTeam.matchPoints < secondTeam.matchPoints) return 1;\n            if (!firstTeam.setsRatio || !secondTeam.setsRatio) {\n                if(!firstTeam.setsRatio && secondTeam.setsRatio) return -1;\n                if(firstTeam.setsRatio && !secondTeam.setsRatio) return 1;\n            }\n            if (firstTeam.setsRatio > secondTeam.setsRatio) return -1;\n            if (firstTeam.setsRatio < secondTeam.setsRatio) return 1;\n            if (firstTeam.pointsRatio > secondTeam.pointsRatio) return -1;\n            if (firstTeam.pointsRatio < secondTeam.pointsRatio) return 1;\n\n            return 1;\n        }\n    );\n\n}","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\nimport {Row} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport {matchSummary} from \"../helpers/matches\";\r\nimport {FaTimes} from \"react-icons/fa/index\";\r\n\r\nimport '../css/icons.css'\r\n\r\nclass MatchesDetails extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {matches, removeMatch} = this.props;\r\n\r\n        return matches.map(match =>\r\n            <ResultRow\r\n                key={match.id}\r\n                firstTeam={match.firstTeam}\r\n                secondTeam={match.secondTeam}\r\n                match={match}\r\n                removeMatch={removeMatch}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction ResultRow({firstTeam, secondTeam, match, removeMatch}) {\r\n\r\n    const summary = matchSummary(match);\r\n\r\n    return <Row>\r\n        <Col md={4}>\r\n            <div className={'text-center'}>{firstTeam} vs {secondTeam}</div>\r\n        </Col>\r\n        <Col md={1}>\r\n            <div className={'text-center'}><b>{summary.firstTeamSetsWon} : {summary.secondTeamSetsWon}</b></div>\r\n        </Col>\r\n        <Col md={4}>\r\n            <div className={'text-center'}>{setDetails(summary.sets)}</div>\r\n        </Col>\r\n        <Col md={3}>\r\n            <div className={'float-right'}>\r\n                <FaTimes style={{color: \"#b21f2d\"}} onClick={() => removeMatch(match.id)}/>\r\n            </div>\r\n        </Col>\r\n    </Row>\r\n\r\n}\r\n\r\nfunction setDetails(sets) {\r\n\r\n    if (!sets || sets.length === 0) {\r\n        return;\r\n    }\r\n\r\n    const setSummary = sets.map(set => set['first-team'] + ':' + set['second-team']).join(', ');\r\n    return '(' + setSummary + ')';\r\n}\r\n\r\nMatchesDetails.propTypes = {\r\n\r\n    matches: PropTypes.array,\r\n    removeMatch: PropTypes.func\r\n\r\n};\r\n\r\nMatchesDetails.defaultProps = {\r\n\r\n    matches: [],\r\n    removeMatch: () => {\r\n    }\r\n\r\n};\r\n\r\nexport default MatchesDetails;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport React from 'react';\r\nimport {AgGridReact} from \"ag-grid-react\";\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport {groupSummary, resultsSort} from \"../helpers/matches\";\r\n\r\nimport '../css/agGridStyles.css';\r\n\r\nconst gridOptions = {\r\n    suppressDragLeaveHidesColumns: true,\r\n    suppressMovableColumns: true,\r\n    suppressLoadingOverlay: true,\r\n    suppressNoRowsOverlay: true,\r\n    columnDefs: [\r\n        {\r\n            headerName: \"Drużyna\", field: \"team\", width: 350,\r\n            cellClass: 'cell-wrap-text', autoHeight: true\r\n        },\r\n        {headerName: \"Punkty\", field: \"matchPoints\", width: 200},\r\n        {\r\n            groupId: 1,\r\n            headerName: \"Mecze\",\r\n            marryChildren: true,\r\n            children: [\r\n                {headerName: 'Rozegr.', field: \"matchesPlayed\"},\r\n                {headerName: 'Wygr.', field: \"matchesWon\"},\r\n                {headerName: 'Przegr.', field: \"matchesLost\"},\r\n                {headerName: 'Remis', field: \"matchesDraw\"}\r\n            ]\r\n        },\r\n        {\r\n            groupId: 2,\r\n            headerName: \"Sety\",\r\n            suppressMovable: true,\r\n            marryChildren: true,\r\n            children: [\r\n                {headerName: 'Wygr.', field: \"setsWon\"},\r\n                {headerName: 'Przegr.', field: \"setsLost\"},\r\n                {headerName: 'Stos.', field: \"setsRatio\", valueFormatter: twoDigits}\r\n            ]\r\n        },\r\n        {\r\n            groupId: 3,\r\n            headerName: \"Punkty\",\r\n            suppressMovable: true,\r\n            lockPosition: true,\r\n            children: [\r\n                {headerName: 'Wygr.', field: \"pointsWon\"},\r\n                {headerName: 'Przegr.', field: \"pointsLost\"},\r\n                {headerName: 'Stos.', field: \"pointsRatio\", valueFormatter: twoDigits}\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nfunction twoDigits(target) {\r\n    if (target.value !== 0 && !target.value) {\r\n        return '-';\r\n    }\r\n\r\n    return parseFloat(target.value).toFixed(2);\r\n}\r\n\r\nclass GroupSummaryTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onGridReady = this.onGridReady.bind(this);\r\n    }\r\n\r\n    onGridReady = (params) => {\r\n        params.api.sizeColumnsToFit();\r\n    };\r\n\r\n    render() {\r\n\r\n        const {matches, teams} = this.props;\r\n\r\n        const summary = resultsSort(groupSummary(matches, teams));\r\n\r\n        return <div className=\"ag-theme-balham\">\r\n            <div style={{overflow: 'auto'}}>\r\n                <AgGridReact\r\n                    onGridReady={this.onGridReady}\r\n                    gridOptions={gridOptions}\r\n                    rowData={summary}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nGroupSummaryTable.propTypes = {\r\n\r\n    teams: PropTypes.array,\r\n    matches: PropTypes.array\r\n\r\n};\r\n\r\nexport default GroupSummaryTable;","import PropTypes from 'prop-types';\r\nimport 'rc-collapse/assets/index.css';\r\nimport Collapse, {Panel} from 'rc-collapse';\r\nimport React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\nimport EditMatches from \"./AddMatch\";\r\nimport Matches from \"./MatchesDetails\";\r\nimport GroupSummaryTable from \"./GroupSummaryTable\";\r\n\r\n// TODO sortable by matches won, ratio,\r\n// TODO populate with data\r\n// TODO open and autosize to content\r\n// TODO extract table to another component\r\n// TODO no rows to show appears on table headers\r\n// TODO on group change -> make table full width!\r\n\r\nclass TourneyDetails extends React.Component {\r\n\r\n    state = {\r\n        accordion: true,\r\n        activeKey: ['0', '1', '2']\r\n    };\r\n\r\n    onChange = (activeKey) => {\r\n        this.setState({\r\n            activeKey,\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const {group} = this.props;\r\n\r\n        const activeKey = this.state.activeKey;\r\n\r\n        return <div>\r\n            <Collapse\r\n                accordion={false}\r\n                onChange={this.onChange}\r\n                activeKey={activeKey}\r\n            >\r\n                <Panel header='Tabela'>\r\n                    <GroupSummaryTable matches={group.matches}\r\n                                       teams={group.teams}\r\n                    />\r\n                </Panel>\r\n                <Panel header='Mecze'>\r\n                    <Matches matches={group.matches}\r\n                             removeMatch={(matchId) => this.props.removeMatch(group.groupLetter, matchId)}/>\r\n                </Panel>\r\n                <Panel header='Wprowadź mecz'>\r\n                    <div>\r\n                        <EditMatches\r\n                            group={this.props.group}\r\n                            onMatchAdded={(firstTeam, secondTeam, sets) => this.props.onMatchAdded(group.groupLetter, firstTeam, secondTeam, sets)}\r\n                        />\r\n                    </div>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    }\r\n}\r\n\r\nTourneyDetails.propTypes = {\r\n\r\n    group: PropTypes.object.isRequired,\r\n    onMatchAdded: PropTypes.func,\r\n    removeMatch : PropTypes.func\r\n\r\n};\r\n\r\nexport default TourneyDetails;","import PropTypes from 'prop-types';\r\nimport * as React from \"react\";\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\nimport Button from \"react-bootstrap/es/Button\";\r\nimport Row from \"react-bootstrap/es/Row\";\r\nimport Col from \"react-bootstrap/es/Col\";\r\nimport TourneyDetails from \"./TourneyDetails\";\r\nimport TourneyName from \"./TourneyName\";\r\n\r\nclass TourneyState extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {saveTourneyState, groupChosen, tourneyName, group, groups} = this.props;\r\n\r\n        return <div>\r\n            <Row>\r\n                <Col md={{span: 8}}>\r\n                    <TourneyName tourneyName={tourneyName}/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Navbar bg=\"primary\"\r\n                            variant=\"dark\"\r\n                            onSelect={groupChosen}\r\n                    >\r\n                        <Nav className=\"mr-auto\">\r\n                            <GroupItems activeGroup={group.groupLetter}\r\n                                        groups={groups}\r\n                            />\r\n                        </Nav>\r\n                        <Form inline>\r\n                            <Button\r\n                                onClick={saveTourneyState}\r\n                                variant=\"outline-light\">Zapisz turniej</Button>\r\n                        </Form>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12} className='mb-3'>\r\n                    <TourneyDetails\r\n                        group={group}\r\n                        onMatchAdded={this.props.onMatchAdded}\r\n                        removeMatch={this.props.removeMatch}/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction GroupItems({activeGroup, groups}) {\r\n    return groups.map(it => <Nav.Link eventKey={it.groupLetter}\r\n                                      className={it.groupLetter === activeGroup && 'border border-white rounded'}\r\n                                      key={it.groupLetter}\r\n                                      active={it.groupLetter === activeGroup}\r\n        >\r\n            Grupa {it.groupLetter}\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nTourneyState.propTypes = {\r\n    groups: PropTypes.array.isRequired,\r\n    group: PropTypes.object,\r\n    tourneyName: PropTypes.string,\r\n    groupChosen: PropTypes.func,\r\n    onMatchAdded: PropTypes.func,\r\n    saveTourneyState: PropTypes.func,\r\n    removeMatch: PropTypes.func\r\n};\r\n\r\nTourneyState.defaultProps = {\r\n    groups: [],\r\n    tourneyName: \"Nazwa turnieju\",\r\n    group: {},\r\n    groupChosen: () => {\r\n    },\r\n    removeMatch: () => {\r\n    }\r\n};\r\n\r\nexport default TourneyState;","import React from 'react';\r\n\r\nimport './App.css'\r\n\r\nimport {Redirect, Route, Router, Switch} from 'react-router-dom'\r\nimport history from './helpers/history';\r\n\r\nimport LoadTourney from \"./components/LoadTourney\";\r\nimport SelectionPage from \"./components/SelectionPage\";\r\n\r\nimport SingleColumnLayout from \"./hoc/SingleColumnLayout\";\r\nimport NewTourney from \"./components/NewTourney\";\r\nimport Groups from \"./components/Groups\";\r\nimport TourneyState from \"./components/TourneyState\";\r\nimport {saveAs} from 'file-saver';\r\n\r\nimport './css/icons.css'\r\n\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addGroup = this.addGroup.bind(this);\r\n        this.pickTourneyName = this.pickTourneyName.bind(this);\r\n        this.addTeam = this.addTeam.bind(this);\r\n        this.approveGroups = this.approveGroups.bind(this);\r\n        this.groupChosen = this.groupChosen.bind(this);\r\n        this.onMatchAdded = this.onMatchAdded.bind(this);\r\n        this.saveTourneyState = this.saveTourneyState.bind(this);\r\n        this.loadTourneyState = this.loadTourneyState.bind(this);\r\n        this.redirectToGroups = this.redirectToGroups.bind(this);\r\n        this.proceedToState = this.proceedToState.bind(this);\r\n        this.removeMatch = this.removeMatch.bind(this);\r\n\r\n        this.state = {\r\n            groups: [\r\n                {groupLetter: \"A\", teams: [], matches: []}\r\n            ],\r\n            currentlyDisplayedGroup: \"A\"\r\n        };\r\n    }\r\n\r\n    loadTourneyState(history) {\r\n        return state => {\r\n            this.setState(JSON.parse(state));\r\n            this.proceedToState(history)\r\n        }\r\n    }\r\n\r\n    saveTourneyState() {\r\n        const blob = new Blob([JSON.stringify(this.state)], {type: \"text/plain;charset=utf-8\"});\r\n        const fileName = `${this.state.tourneyName ? this.state.tourneyName : 'tourney'}.txt`;\r\n        saveAs(blob, fileName)\r\n    }\r\n\r\n    removeMatch(groupLetter, matchId) {\r\n        const group = this.state.groups.find(group => group.groupLetter === groupLetter);\r\n\r\n        const matches = group.matches.filter(matches => matches.id !== matchId);\r\n\r\n        const newGroup = {...group, matches : matches};\r\n\r\n        const newGroups = this.state.groups.slice();\r\n\r\n        const groupToReplace = newGroups.findIndex(group => group.groupLetter === groupLetter);\r\n        newGroups[groupToReplace] = newGroup;\r\n\r\n        this.setState({groups : newGroups});\r\n    }\r\n\r\n    onMatchAdded(groupLetter, firstTeam, secondTeam, sets) {\r\n\r\n        const {groups} = this.state;\r\n\r\n        const groupIndex = groups.findIndex(group => group.groupLetter === groupLetter);\r\n        const group = groups[groupIndex];\r\n\r\n        if(!group.teams.includes(firstTeam) || !group.teams.includes(secondTeam)){\r\n            return;\r\n        }\r\n\r\n        const newMatches = group.matches.slice();\r\n        newMatches.push({firstTeam: firstTeam, secondTeam: secondTeam, sets: sets, id: uuidv4()});\r\n\r\n        const newGroups = [\r\n            ...groups.slice(0, groupIndex),\r\n            {...group, matches: newMatches},\r\n            ...groups.slice(groupIndex + 1,)\r\n        ];\r\n\r\n        this.setState({groups: newGroups});\r\n    }\r\n\r\n    groupChosen(groupLetter) {\r\n        this.setState({currentlyDisplayedGroup: groupLetter})\r\n    }\r\n\r\n    addGroup() {\r\n        let lastGroup = this.state.groups.map(it => it.groupLetter).slice().pop();\r\n        let newGroupLetter = String.fromCharCode(lastGroup.charCodeAt(0) + 1);\r\n        const groups = [...this.state.groups, {groupLetter: newGroupLetter, teams: [], matches: []}];\r\n        this.setState({groups: groups})\r\n    }\r\n\r\n    addTeam(groupName, teamName) {\r\n        const group = this.state.groups.find(byName(groupName));\r\n\r\n        const newTeams = group.teams.slice();\r\n        newTeams.push(teamName);\r\n        const groupWithAddedTeam = {...group, teams: newTeams};\r\n\r\n        const newGroups = this.state.groups.slice();\r\n\r\n        const toReplace = newGroups.findIndex(byName(groupName));\r\n\r\n        newGroups[toReplace] = groupWithAddedTeam;\r\n\r\n        this.setState({groups: newGroups})\r\n    }\r\n\r\n    approveGroups(history) {\r\n        return () => this.proceedToState(history);\r\n\r\n    }\r\n\r\n    proceedToState(history) {\r\n        history.push('/tourney/state')\r\n    }\r\n\r\n    pickTourneyName(toruneyName) {\r\n        this.setState({tourneyName: toruneyName});\r\n    }\r\n\r\n    createTourneyAndRedirect(history) {\r\n        return (tourneyName) => {\r\n            this.pickTourneyName(tourneyName);\r\n            this.redirectToGroups(history);\r\n        }\r\n    }\r\n\r\n    redirectToGroups(history) {\r\n        history.push('/tourney/groups')\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Router history={history}>\r\n            <div>\r\n                <Switch>\r\n                    <Route path='/tourney/new'\r\n                           render={props => <LayoutNewTourney\r\n                               createNewTourney={this.createTourneyAndRedirect(history)}/>}\r\n                    />\r\n                    <Route path='/tourney/load'\r\n                           render={props =>\r\n                               <LayoutLoadTourney loadTourney={this.loadTourneyState(history)}/>}/>\r\n                    <Route path='/tourney/groups'\r\n                           render={props =>\r\n                               <Groups addGroup={this.addGroup}\r\n                                       tourneyName={this.state.tourneyName}\r\n                                       groups={this.state.groups}\r\n                                       teamAdded={this.addTeam}\r\n                                       approveGroups={this.approveGroups(history)}\r\n                               />\r\n                           }\r\n                    />\r\n                    <Route path='/tourney/state' render={props =>\r\n                        <LayoutTourneyState\r\n                            saveTourneyState={this.saveTourneyState}\r\n                            groups={this.state.groups.map(it => Object.assign({}, {groupLetter: it.groupLetter}))}\r\n                            group={this.state.groups.find(it => it.groupLetter === this.state.currentlyDisplayedGroup)}\r\n                            tourneyName={this.state.tourneyName}\r\n                            groupChosen={this.groupChosen}\r\n                            onMatchAdded={this.onMatchAdded}\r\n                            removeMatch={this.removeMatch}\r\n                        />}\r\n                    />\r\n                    <Route path='/' component={SingleColumnLayout({Content: SelectionPage})}/>\r\n                    <Redirect from='*' to='/'/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    }\r\n}\r\n\r\nfunction byName(teamName) {\r\n    return (it) => it.groupLetter === teamName;\r\n}\r\n\r\nconst LayoutNewTourney = SingleColumnLayout({Content: NewTourney});\r\nconst LayoutTourneyState = SingleColumnLayout({Content: TourneyState}, 12, 0);\r\nconst LayoutLoadTourney = SingleColumnLayout({Content: LoadTourney}, 12, 0);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}